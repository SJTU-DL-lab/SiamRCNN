[2019-08-12 00:43:01,757-rk0-trainval_siamrcnn_corr.py#197] 
PyTorch version: 0.4.1.post2
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: CentOS Linux 7 (Core)
GCC version: (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11)
CMake version: version 2.8.12.2

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: 
GPU 0: GeForce GTX 1080 Ti
GPU 1: GeForce GTX 1080 Ti
GPU 2: GeForce GTX 1080 Ti
GPU 3: GeForce GTX 1080 Ti
GPU 4: GeForce GTX 1080 Ti
GPU 5: GeForce GTX 1080 Ti

Nvidia driver version: 410.48
cuDNN version: Could not collect

Versions of relevant libraries:
[pip] Could not collect
[conda] pytorch                   0.4.1           py36_py35_py27__9.0.176_7.1.2_2    pytorch
[conda] torchvision               0.2.1                    py36_1    pytorch
        OpenCV (3.4.3)
[2019-08-12 00:43:01,758-rk0-trainval_siamrcnn_corr.py#198] Namespace(arch='', batch=64, clip=10.0, config='config.json', debug=False, dense_hp=False, epochs=100, hm_hp=True, hm_hp_weight=1.5, hp_weight=1, log='logs/log.txt', log_dir='board/show', lr=0.001, momentum=0.9, mse_loss=False, not_hm_hp=False, not_reg_bbox=False, not_reg_hp_offset=False, off_weight=1, output_size=56, pretrained='./snapshot_0810/checkpoint_e99.pth', print_freq=10, reg_bbox=True, reg_hp_offset=True, reg_loss='l1', resume='', save_dir='snapshot', save_freq=1, start_epoch=0, weight_decay=0.0001, workers=4)
[2019-08-12 00:43:01,760-rk0-trainval_siamrcnn_corr.py#201] config 
{
    "network": {
        "arch": "Custom"
    },
    "hp": {
        "instance_size": 255,
        "base_size": 8
    },
    "lr": {
        "feature_lr_mult": 1.0,
        "rpn_lr_mult": 1.0,
        "mask_lr_mult": 1.0,
        "type": "log",
        "start_lr": 0.0001,
        "end_lr": 1e-07,
        "warmup": {
            "start_lr": 0.0001,
            "end_lr": 0.0001,
            "type": "step",
            "step": 1,
            "epoch": 5
        }
    },
    "loss": {
        "weight": [
            1.0,
            1.2,
            1.0
        ],
        "reg": {
            "loss": "L1Loss"
        },
        "cls": {
            "split": true
        }
    },
    "train_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/train2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.01,
        "augmentation": {
            "template": {
                "shift": 4,
                "scale": 0.05
            },
            "search": {
                "shift": 0.0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0.15
        }
    },
    "val_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/val2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.01,
        "augmentation": {
            "template": {
                "shift": 0,
                "scale": 0.0
            },
            "search": {
                "shift": 0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0
        }
    },
    "anchors": {
        "stride": 8,
        "ratios": [
            0.33,
            0.5,
            1,
            2,
            3
        ],
        "scales": [
            8
        ],
        "round_dight": 0
    },
    "mask": {},
    "clip": {
        "feature": 10.0,
        "rpn": 10.0,
        "split": false
    }
}
[2019-08-12 00:43:01,765-rk0-trainval_siamrcnn_corr.py#144] build train dataset
[2019-08-12 00:43:01,768-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/train2017_pose_siamfc.json
[2019-08-12 00:43:04,610-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/train2017_pose_siamfc.json loaded.
[2019-08-12 00:43:04,645-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [45900/45900] path {}.{}.{}.jpg
[2019-08-12 00:43:04,712-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-12 00:43:04,713-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-12 00:43:04,716-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0.15,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 45900
}
[2019-08-12 00:43:04,783-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-12 00:43:04,783-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-12 00:43:04,784-rk0-trainval_siamrcnn_corr.py#148] build val dataset
[2019-08-12 00:43:04,786-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/val2017_pose_siamfc.json
[2019-08-12 00:43:04,879-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/val2017_pose_siamfc.json loaded.
[2019-08-12 00:43:04,882-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [1899/1899] path {}.{}.{}.jpg
[2019-08-12 00:43:04,885-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-12 00:43:04,886-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-12 00:43:04,887-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 1899
}
[2019-08-12 00:43:04,890-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-12 00:43:04,891-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-12 00:43:04,892-rk0-trainval_siamrcnn_corr.py#159] build dataset done
[2019-08-12 00:43:10,160-rk0-load_helper.py# 40] load pretrained model from ../resnet.model
[2019-08-12 00:43:10,528-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-12 00:43:10,530-rk0-load_helper.py# 13] [Warning] missing keys: {'layer2.3.bn2.num_batches_tracked', 'layer1.1.bn3.num_batches_tracked', 'layer3.4.bn1.num_batches_tracked', 'layer3.0.downsample.1.num_batches_tracked', 'layer4.2.bn1.num_batches_tracked', 'layer2.3.bn1.num_batches_tracked', 'layer4.2.bn3.num_batches_tracked', 'layer1.0.downsample.1.num_batches_tracked', 'layer3.5.bn2.num_batches_tracked', 'layer1.0.bn2.num_batches_tracked', 'layer2.2.bn1.num_batches_tracked', 'layer3.0.bn3.num_batches_tracked', 'layer3.5.bn3.num_batches_tracked', 'layer3.0.bn2.num_batches_tracked', 'layer3.5.bn1.num_batches_tracked', 'layer4.0.bn3.num_batches_tracked', 'layer4.0.bn1.num_batches_tracked', 'layer2.1.bn3.num_batches_tracked', 'layer3.4.bn2.num_batches_tracked', 'layer3.1.bn2.num_batches_tracked', 'layer2.2.bn3.num_batches_tracked', 'layer1.2.bn3.num_batches_tracked', 'layer3.3.bn1.num_batches_tracked', 'layer2.1.bn1.num_batches_tracked', 'layer3.2.bn2.num_batches_tracked', 'layer3.3.bn2.num_batches_tracked', 'layer1.1.bn2.num_batches_tracked', 'layer3.4.bn3.num_batches_tracked', 'layer4.1.bn2.num_batches_tracked', 'layer2.0.bn1.num_batches_tracked', 'bn1.num_batches_tracked', 'layer1.2.bn2.num_batches_tracked', 'layer3.2.bn1.num_batches_tracked', 'layer1.2.bn1.num_batches_tracked', 'layer3.0.bn1.num_batches_tracked', 'layer4.1.bn3.num_batches_tracked', 'layer4.2.bn2.num_batches_tracked', 'layer1.0.bn1.num_batches_tracked', 'layer1.0.bn3.num_batches_tracked', 'layer4.1.bn1.num_batches_tracked', 'layer2.2.bn2.num_batches_tracked', 'layer2.0.bn2.num_batches_tracked', 'layer1.1.bn1.num_batches_tracked', 'layer3.1.bn1.num_batches_tracked', 'layer3.1.bn3.num_batches_tracked', 'layer4.0.downsample.1.num_batches_tracked', 'layer3.2.bn3.num_batches_tracked', 'layer4.0.bn2.num_batches_tracked', 'layer2.0.downsample.1.num_batches_tracked', 'layer2.3.bn3.num_batches_tracked', 'layer2.1.bn2.num_batches_tracked', 'layer3.3.bn3.num_batches_tracked', 'layer2.0.bn3.num_batches_tracked'}
[2019-08-12 00:43:10,531-rk0-load_helper.py# 14] missing keys:53
[2019-08-12 00:43:10,531-rk0-load_helper.py# 18] used keys:265
[2019-08-12 00:43:10,595-rk0-features.py# 66] Current training 0 layers:
	
[2019-08-12 00:43:10,597-rk0-features.py# 66] Current training 3 layers:
	
[2019-08-12 00:43:10,731-rk0-trainval_siamrcnn_corr.py#219] Custom(
  (upSample): UpsamplingBilinear2d(size=[127, 127], mode=bilinear)
  (kp_criterion): PoseLoss(
    (crit_hm_hp): FocalLoss()
    (crit_kp): RegWeightedL1Loss()
    (crit_reg): RegL1Loss()
  )
  (features): ResDown(
    (features): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer2): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer3): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (4): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (5): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer4): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(1024, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
            (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
    )
    (downsample): ResDownS(
      (downsample): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (downsample_p4): ResDownS(
      (downsample): Sequential(
        (0): Conv2d(2048, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (rpn_model): UP(
    (cls): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 10, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (loc): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 20, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (pose_corr): PoseCorr(
    (kp): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (kp_model): Center_pose_head(
    (deconv_layers_new): Sequential(
      (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace)
      (3): ConvTranspose2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace)
      (6): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU(inplace)
      (9): ConvTranspose2d(256, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (10): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (11): ReLU(inplace)
      (12): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (13): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (14): ReLU(inplace)
      (15): ConvTranspose2d(64, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (16): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (17): ReLU(inplace)
    )
    (hps): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 34, kernel_size=(1, 1), stride=(1, 1))
    )
    (hm_hp): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 17, kernel_size=(1, 1), stride=(1, 1))
    )
    (hp_offset): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[2019-08-12 00:43:10,738-rk0-load_helper.py# 40] load pretrained model from ./snapshot_0810/checkpoint_e99.pth
[2019-08-12 00:43:11,188-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-12 00:43:11,191-rk0-load_helper.py# 18] used keys:438
[2019-08-12 00:43:11,360-rk0-trainval_siamrcnn_corr.py#237] (WarmUPScheduler) lr spaces: 
[1.00000000e-04 1.00000000e-04 1.00000000e-04 1.00000000e-04
 1.00000000e-04 1.00000000e-04 9.29148449e-05 8.63316841e-05
 8.02149504e-05 7.45315967e-05 6.92509175e-05 6.43443826e-05
 5.97854833e-05 5.55495891e-05 5.16138146e-05 4.79568958e-05
 4.45590754e-05 4.14019958e-05 3.84686002e-05 3.57430402e-05
 3.32105904e-05 3.08575685e-05 2.86712619e-05 2.66398586e-05
 2.47523833e-05 2.29986385e-05 2.13691493e-05 1.98551120e-05
 1.84483465e-05 1.71412525e-05 1.59267682e-05 1.47983320e-05
 1.37498472e-05 1.27756492e-05 1.18704747e-05 1.10294331e-05
 1.02479807e-05 9.52189535e-06 8.84725430e-06 8.22041261e-06
 7.63798363e-06 7.09682065e-06 6.59399990e-06 6.12680478e-06
 5.69271116e-06 5.28937375e-06 4.91461341e-06 4.56640543e-06
 4.24286853e-06 3.94225471e-06 3.66293985e-06 3.40341488e-06
 3.16227766e-06 2.93822538e-06 2.73004756e-06 2.53661946e-06
 2.35689603e-06 2.18990629e-06 2.03474804e-06 1.89058298e-06
 1.75663225e-06 1.63217213e-06 1.51653020e-06 1.40908169e-06
 1.30924606e-06 1.21648395e-06 1.13029417e-06 1.05021108e-06
 9.75801996e-07 9.06664911e-07 8.42426296e-07 7.82739087e-07
 7.27280809e-07 6.75751836e-07 6.27873770e-07 5.83387940e-07
 5.42054000e-07 5.03648633e-07 4.67964346e-07 4.34808347e-07
 4.04001501e-07 3.75377368e-07 3.48781300e-07 3.24069604e-07
 3.01108770e-07 2.79774746e-07 2.59952272e-07 2.41534250e-07
 2.24421174e-07 2.08520586e-07 1.93746579e-07 1.80019333e-07
 1.67264684e-07 1.55413722e-07 1.44402419e-07 1.34171284e-07
 1.24665040e-07 1.15832329e-07 1.07625429e-07 1.00000000e-07]
[2019-08-12 00:43:11,364-rk0-trainval_siamrcnn_corr.py#239] model prepare done
[2019-08-12 00:43:11,367-rk0-trainval_siamrcnn_corr.py#296] train epoch:0
[2019-08-12 00:43:28,948-rk0-resnet.py<forward>#231] p3 torch.Size([16, 1024, 15, 15])
[2019-08-12 00:43:30,844-rk0-resnet.py<forward>#231] p3 torch.Size([16, 1024, 31, 31])
/cluster/home/u1/.conda/envs/deepimit/lib/python3.6/site-packages/torch/nn/functional.py:52: UserWarning: size_average and reduce args will be deprecated, please use reduction='sum' instead.
  warnings.warn(warning.format(ret))
/cluster/home/u1/.conda/envs/deepimit/lib/python3.6/site-packages/torch/nn/parallel/_functions.py:58: UserWarning: Was asked to gather along dimension 0, but all input tensors were scalars; will instead unsqueeze and return a vector.
  warnings.warn('Was asked to gather along dimension 0, but all '
[2019-08-12 00:43:47,180-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][10/717] lr: 0.000100	batch_time: 0.984662 (3.579886)	data_time: 0.016518 (0.667060)	rpn_cls_loss: 0.000431 (0.000681)	rpn_loc_loss: 0.046211 (0.046114)	kp_hp_loss: 0.528454 (0.532666)	kp_hm_hp_loss: 0.246596 (0.250295)	kp_hp_offset_loss: 0.217049 (0.222475)	kp_loss: 1.115398 (1.130583)	siammask_loss: 1.171283 (1.186602)	kp_avg_acc: 0.874880 (0.874627)
[2019-08-12 00:43:47,182-rk0-log_helper.py# 97] Progress: 10 / 71700 [0%], Speed: 3.580 s/iter, ETA 2:23:17 (D:H:M)

[2019-08-12 00:43:58,961-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][20/717] lr: 0.000100	batch_time: 1.213462 (2.378252)	data_time: 0.089588 (0.421503)	rpn_cls_loss: 0.000696 (0.000569)	rpn_loc_loss: 0.048300 (0.045476)	kp_hp_loss: 0.564724 (0.525913)	kp_hm_hp_loss: 0.306029 (0.242080)	kp_hp_offset_loss: 0.225250 (0.222715)	kp_loss: 1.249018 (1.111748)	siammask_loss: 1.307674 (1.166889)	kp_avg_acc: 0.866489 (0.878277)
[2019-08-12 00:43:58,962-rk0-log_helper.py# 97] Progress: 20 / 71700 [0%], Speed: 2.378 s/iter, ETA 1:23:21 (D:H:M)

[2019-08-12 00:44:11,988-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][30/717] lr: 0.000100	batch_time: 1.077634 (2.019214)	data_time: 0.084507 (0.386154)	rpn_cls_loss: 0.000483 (0.000516)	rpn_loc_loss: 0.053008 (0.045572)	kp_hp_loss: 0.526232 (0.521233)	kp_hm_hp_loss: 0.283345 (0.243614)	kp_hp_offset_loss: 0.217897 (0.222254)	kp_loss: 1.169147 (1.108908)	siammask_loss: 1.233239 (1.164111)	kp_avg_acc: 0.880602 (0.879357)
[2019-08-12 00:44:11,989-rk0-log_helper.py# 97] Progress: 30 / 71700 [0%], Speed: 2.019 s/iter, ETA 1:16:11 (D:H:M)

[2019-08-12 00:44:26,246-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][40/717] lr: 0.000100	batch_time: 2.065503 (1.870512)	data_time: 1.086827 (0.400488)	rpn_cls_loss: 0.000459 (0.000508)	rpn_loc_loss: 0.043662 (0.045467)	kp_hp_loss: 0.555819 (0.523276)	kp_hm_hp_loss: 0.257951 (0.241513)	kp_hp_offset_loss: 0.221358 (0.221970)	kp_loss: 1.164104 (1.107516)	siammask_loss: 1.216958 (1.162583)	kp_avg_acc: 0.872178 (0.881100)
[2019-08-12 00:44:26,247-rk0-log_helper.py# 97] Progress: 40 / 71700 [0%], Speed: 1.871 s/iter, ETA 1:13:14 (D:H:M)

[2019-08-12 00:44:38,449-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][50/717] lr: 0.000100	batch_time: 1.042833 (1.740170)	data_time: 0.022235 (0.364934)	rpn_cls_loss: 0.000804 (0.000513)	rpn_loc_loss: 0.044351 (0.045274)	kp_hp_loss: 0.524825 (0.522170)	kp_hm_hp_loss: 0.234165 (0.238743)	kp_hp_offset_loss: 0.226709 (0.221721)	kp_loss: 1.102781 (1.102005)	siammask_loss: 1.156806 (1.156846)	kp_avg_acc: 0.891183 (0.881420)
[2019-08-12 00:44:38,451-rk0-log_helper.py# 97] Progress: 50 / 71700 [0%], Speed: 1.740 s/iter, ETA 1:10:38 (D:H:M)

slurmstepd: error: *** JOB 24912 ON node11 CANCELLED AT 2019-08-12T00:44:47 ***
