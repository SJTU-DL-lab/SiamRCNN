[2019-08-14 18:31:58,137-rk0-trainval_siamrcnn_corr.py#197] 
PyTorch version: 0.4.1.post2
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: CentOS Linux 7 (Core)
GCC version: (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11)
CMake version: version 2.8.12.2

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: 
GPU 0: GeForce GTX 1080 Ti
GPU 1: GeForce GTX 1080 Ti
GPU 2: GeForce GTX 1080 Ti
GPU 3: GeForce GTX 1080 Ti
GPU 4: GeForce GTX 1080 Ti
GPU 5: GeForce GTX 1080 Ti

Nvidia driver version: 410.48
cuDNN version: Could not collect

Versions of relevant libraries:
[pip] Could not collect
[conda] pytorch                   0.4.1           py36_py35_py27__9.0.176_7.1.2_2    pytorch
[conda] torchvision               0.2.1                    py36_1    pytorch
        OpenCV (3.4.3)
[2019-08-14 18:31:58,138-rk0-trainval_siamrcnn_corr.py#198] Namespace(arch='', batch=128, clip=10.0, config='config.json', debug=False, dense_hp=False, epochs=200, hm_hp=True, hm_hp_weight=1.5, hp_weight=1, log='logs/log_0814.txt', log_dir='board/show_0814', lr=0.001, momentum=0.9, mse_loss=False, not_hm_hp=False, not_reg_bbox=False, not_reg_hp_offset=False, off_weight=1, output_size=56, pretrained='', print_freq=10, reg_bbox=True, reg_hp_offset=True, reg_loss='l1', resume='./snaphot_0811/checkpoint_e99.pth', save_dir='snapshot_0814', save_freq=5, start_epoch=0, weight_decay=0.0001, workers=4)
[2019-08-14 18:31:58,150-rk0-trainval_siamrcnn_corr.py#201] config 
{
    "network": {
        "arch": "Custom"
    },
    "hp": {
        "instance_size": 255,
        "base_size": 8
    },
    "lr": {
        "feature_lr_mult": 1.0,
        "rpn_lr_mult": 1.0,
        "mask_lr_mult": 1.0,
        "type": "log",
        "start_lr": 0.01,
        "end_lr": 1e-07,
        "warmup": {
            "start_lr": 0.001,
            "end_lr": 0.01,
            "type": "step",
            "step": 1,
            "epoch": 5
        }
    },
    "loss": {
        "weight": [
            1.0,
            1.2,
            1.0
        ],
        "reg": {
            "loss": "L1Loss"
        },
        "cls": {
            "split": true
        }
    },
    "train_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/train2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 4,
                "scale": 0.05
            },
            "search": {
                "shift": 0.0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0.15
        }
    },
    "val_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/val2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 0,
                "scale": 0.0
            },
            "search": {
                "shift": 0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0
        }
    },
    "anchors": {
        "stride": 8,
        "ratios": [
            0.33,
            0.5,
            1,
            2,
            3
        ],
        "scales": [
            8
        ],
        "round_dight": 0
    },
    "mask": {},
    "clip": {
        "feature": 10.0,
        "rpn": 10.0,
        "split": false
    }
}
[2019-08-14 18:31:58,264-rk0-trainval_siamrcnn_corr.py#144] build train dataset
[2019-08-14 18:31:58,386-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/train2017_pose_siamfc.json
[2019-08-14 18:32:02,122-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/train2017_pose_siamfc.json loaded.
[2019-08-14 18:32:02,158-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [45900/45900] path {}.{}.{}.jpg
[2019-08-14 18:32:02,225-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 18:32:02,226-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 18:32:02,229-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0.15,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 45900
}
[2019-08-14 18:32:02,296-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 18:32:02,297-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 18:32:02,297-rk0-trainval_siamrcnn_corr.py#148] build val dataset
[2019-08-14 18:32:02,309-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/val2017_pose_siamfc.json
[2019-08-14 18:32:02,511-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/val2017_pose_siamfc.json loaded.
[2019-08-14 18:32:02,514-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [1899/1899] path {}.{}.{}.jpg
[2019-08-14 18:32:02,517-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 18:32:02,518-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 18:32:02,519-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 1899
}
[2019-08-14 18:32:02,523-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 18:32:02,524-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 18:32:02,524-rk0-trainval_siamrcnn_corr.py#159] build dataset done
[2019-08-14 18:32:19,101-rk0-load_helper.py# 40] load pretrained model from ../resnet.model
[2019-08-14 18:32:22,318-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 18:32:22,321-rk0-load_helper.py# 13] [Warning] missing keys: {'layer1.2.bn2.num_batches_tracked', 'layer2.0.downsample.1.num_batches_tracked', 'layer2.1.bn3.num_batches_tracked', 'layer3.2.bn2.num_batches_tracked', 'layer3.4.bn1.num_batches_tracked', 'layer3.1.bn1.num_batches_tracked', 'layer3.0.bn3.num_batches_tracked', 'layer3.3.bn3.num_batches_tracked', 'layer3.4.bn2.num_batches_tracked', 'layer3.0.downsample.1.num_batches_tracked', 'bn1.num_batches_tracked', 'layer3.1.bn2.num_batches_tracked', 'layer2.3.bn1.num_batches_tracked', 'layer1.1.bn3.num_batches_tracked', 'layer1.2.bn1.num_batches_tracked', 'layer1.0.bn2.num_batches_tracked', 'layer3.0.bn1.num_batches_tracked', 'layer3.0.bn2.num_batches_tracked', 'layer3.1.bn3.num_batches_tracked', 'layer2.0.bn3.num_batches_tracked', 'layer3.5.bn2.num_batches_tracked', 'layer3.2.bn3.num_batches_tracked', 'layer2.0.bn2.num_batches_tracked', 'layer2.1.bn2.num_batches_tracked', 'layer1.1.bn2.num_batches_tracked', 'layer1.0.bn1.num_batches_tracked', 'layer3.5.bn1.num_batches_tracked', 'layer2.2.bn1.num_batches_tracked', 'layer1.0.downsample.1.num_batches_tracked', 'layer1.2.bn3.num_batches_tracked', 'layer2.0.bn1.num_batches_tracked', 'layer1.0.bn3.num_batches_tracked', 'layer2.1.bn1.num_batches_tracked', 'layer2.2.bn3.num_batches_tracked', 'layer2.2.bn2.num_batches_tracked', 'layer2.3.bn2.num_batches_tracked', 'layer3.5.bn3.num_batches_tracked', 'layer2.3.bn3.num_batches_tracked', 'layer3.4.bn3.num_batches_tracked', 'layer3.3.bn1.num_batches_tracked', 'layer3.3.bn2.num_batches_tracked', 'layer3.2.bn1.num_batches_tracked', 'layer1.1.bn1.num_batches_tracked'}
[2019-08-14 18:32:22,323-rk0-load_helper.py# 14] missing keys:43
[2019-08-14 18:32:22,324-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'layer4.0.bn2.weight', 'layer4.2.bn3.running_mean', 'layer4.1.bn1.running_mean', 'layer4.1.bn1.weight', 'layer4.1.bn2.running_var', 'layer4.1.bn1.bias', 'layer4.1.bn3.running_mean', 'layer4.0.bn2.running_mean', 'layer4.2.bn3.running_var', 'layer4.2.conv3.weight', 'layer4.1.bn3.bias', 'layer4.1.bn2.running_mean', 'layer4.2.bn2.bias', 'layer4.2.conv1.weight', 'layer4.0.bn3.running_var', 'layer4.2.conv2.weight', 'layer4.0.bn3.running_mean', 'layer4.1.conv3.weight', 'layer4.0.conv3.weight', 'layer4.0.downsample.1.running_mean', 'layer4.1.conv2.weight', 'layer4.1.bn2.bias', 'layer4.2.bn1.running_var', 'layer4.2.bn3.bias', 'layer4.0.downsample.1.weight', 'layer4.0.conv2.weight', 'layer4.1.bn3.weight', 'layer4.0.downsample.1.running_var', 'layer4.0.conv1.weight', 'layer4.0.bn1.bias', 'layer4.0.bn3.weight', 'layer4.2.bn2.weight', 'layer4.0.bn1.running_mean', 'layer4.2.bn2.running_var', 'layer4.0.bn2.bias', 'layer4.0.downsample.1.bias', 'layer4.0.bn3.bias', 'layer4.2.bn1.running_mean', 'layer4.0.downsample.0.weight', 'layer4.1.conv1.weight', 'layer4.1.bn2.weight', 'layer4.2.bn1.bias', 'layer4.2.bn3.weight', 'layer4.0.bn2.running_var', 'layer4.2.bn1.weight', 'layer4.2.bn2.running_mean', 'layer4.1.bn1.running_var', 'layer4.0.bn1.running_var', 'layer4.1.bn3.running_var', 'layer4.0.bn1.weight'}
[2019-08-14 18:32:22,325-rk0-load_helper.py# 17] unused checkpoint keys:50
[2019-08-14 18:32:22,326-rk0-load_helper.py# 18] used keys:215
[2019-08-14 18:32:22,360-rk0-features.py# 66] Current training 0 layers:
	
[2019-08-14 18:32:22,363-rk0-features.py# 66] Current training 3 layers:
	
[2019-08-14 18:32:22,596-rk0-trainval_siamrcnn_corr.py#219] Custom(
  (upSample): UpsamplingBilinear2d(size=[127, 127], mode=bilinear)
  (kp_criterion): PoseLoss(
    (crit_hm_hp): FocalLoss()
    (crit_kp): RegWeightedL1Loss()
    (crit_reg): RegL1Loss()
  )
  (features): ResDown(
    (features): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer2): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer3): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (4): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (5): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
    )
    (downsample): ResDownS(
      (downsample): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (rpn_model): UP(
    (cls): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 10, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (loc): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 20, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (pose_corr): PoseCorr(
    (kp): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (kp_model): Center_pose_head(
    (deconv_layers_new): Sequential(
      (0): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace)
      (3): ConvTranspose2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace)
      (6): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU(inplace)
      (9): ConvTranspose2d(256, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (10): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (11): ReLU(inplace)
      (12): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (13): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (14): ReLU(inplace)
      (15): ConvTranspose2d(64, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (16): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (17): ReLU(inplace)
    )
    (hps): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 34, kernel_size=(1, 1), stride=(1, 1))
    )
    (hm_hp): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 17, kernel_size=(1, 1), stride=(1, 1))
    )
    (hp_offset): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[2019-08-14 18:33:05,080-rk0-trainval_siamrcnn_corr.py#197] 
PyTorch version: 0.4.1.post2
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: CentOS Linux 7 (Core)
GCC version: (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11)
CMake version: version 2.8.12.2

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: 
GPU 0: GeForce GTX 1080 Ti
GPU 1: GeForce GTX 1080 Ti
GPU 2: GeForce GTX 1080 Ti
GPU 3: GeForce GTX 1080 Ti
GPU 4: GeForce GTX 1080 Ti
GPU 5: GeForce GTX 1080 Ti

Nvidia driver version: 410.48
cuDNN version: Could not collect

Versions of relevant libraries:
[pip] Could not collect
[conda] pytorch                   0.4.1           py36_py35_py27__9.0.176_7.1.2_2    pytorch
[conda] torchvision               0.2.1                    py36_1    pytorch
        OpenCV (3.4.3)
[2019-08-14 18:33:05,082-rk0-trainval_siamrcnn_corr.py#198] Namespace(arch='', batch=128, clip=10.0, config='config.json', debug=False, dense_hp=False, epochs=200, hm_hp=True, hm_hp_weight=1.5, hp_weight=1, log='logs/log_0814.txt', log_dir='board/show_0814', lr=0.001, momentum=0.9, mse_loss=False, not_hm_hp=False, not_reg_bbox=False, not_reg_hp_offset=False, off_weight=1, output_size=56, pretrained='', print_freq=10, reg_bbox=True, reg_hp_offset=True, reg_loss='l1', resume='./snapshot_0811/checkpoint_e99.pth', save_dir='snapshot_0814', save_freq=5, start_epoch=0, weight_decay=0.0001, workers=4)
[2019-08-14 18:33:05,084-rk0-trainval_siamrcnn_corr.py#201] config 
{
    "network": {
        "arch": "Custom"
    },
    "hp": {
        "instance_size": 255,
        "base_size": 8
    },
    "lr": {
        "feature_lr_mult": 1.0,
        "rpn_lr_mult": 1.0,
        "mask_lr_mult": 1.0,
        "type": "log",
        "start_lr": 0.01,
        "end_lr": 1e-07,
        "warmup": {
            "start_lr": 0.001,
            "end_lr": 0.01,
            "type": "step",
            "step": 1,
            "epoch": 5
        }
    },
    "loss": {
        "weight": [
            1.0,
            1.2,
            1.0
        ],
        "reg": {
            "loss": "L1Loss"
        },
        "cls": {
            "split": true
        }
    },
    "train_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/train2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 4,
                "scale": 0.05
            },
            "search": {
                "shift": 0.0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0.15
        }
    },
    "val_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/val2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 0,
                "scale": 0.0
            },
            "search": {
                "shift": 0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0
        }
    },
    "anchors": {
        "stride": 8,
        "ratios": [
            0.33,
            0.5,
            1,
            2,
            3
        ],
        "scales": [
            8
        ],
        "round_dight": 0
    },
    "mask": {},
    "clip": {
        "feature": 10.0,
        "rpn": 10.0,
        "split": false
    }
}
[2019-08-14 18:33:05,088-rk0-trainval_siamrcnn_corr.py#144] build train dataset
[2019-08-14 18:33:05,090-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/train2017_pose_siamfc.json
[2019-08-14 18:33:07,910-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/train2017_pose_siamfc.json loaded.
[2019-08-14 18:33:07,946-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [45900/45900] path {}.{}.{}.jpg
[2019-08-14 18:33:08,039-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 18:33:08,056-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 18:33:08,059-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0.15,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 45900
}
[2019-08-14 18:33:08,126-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 18:33:08,127-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 18:33:08,128-rk0-trainval_siamrcnn_corr.py#148] build val dataset
[2019-08-14 18:33:08,129-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/val2017_pose_siamfc.json
[2019-08-14 18:33:08,223-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/val2017_pose_siamfc.json loaded.
[2019-08-14 18:33:08,225-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [1899/1899] path {}.{}.{}.jpg
[2019-08-14 18:33:08,229-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 18:33:08,236-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 18:33:08,237-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 1899
}
[2019-08-14 18:33:08,240-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 18:33:08,258-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 18:33:08,259-rk0-trainval_siamrcnn_corr.py#159] build dataset done
[2019-08-14 18:33:12,561-rk0-load_helper.py# 40] load pretrained model from ../resnet.model
[2019-08-14 18:33:12,920-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 18:33:12,925-rk0-load_helper.py# 13] [Warning] missing keys: {'layer3.3.bn2.num_batches_tracked', 'layer2.0.bn2.num_batches_tracked', 'layer3.2.bn2.num_batches_tracked', 'layer3.4.bn1.num_batches_tracked', 'layer3.2.bn1.num_batches_tracked', 'layer3.0.bn1.num_batches_tracked', 'layer3.4.bn3.num_batches_tracked', 'layer2.3.bn3.num_batches_tracked', 'layer1.1.bn2.num_batches_tracked', 'layer2.1.bn1.num_batches_tracked', 'layer1.0.bn2.num_batches_tracked', 'layer1.0.downsample.1.num_batches_tracked', 'layer2.1.bn2.num_batches_tracked', 'layer2.2.bn1.num_batches_tracked', 'layer2.0.downsample.1.num_batches_tracked', 'layer1.2.bn1.num_batches_tracked', 'layer2.0.bn1.num_batches_tracked', 'layer3.0.bn3.num_batches_tracked', 'layer3.1.bn1.num_batches_tracked', 'layer3.0.bn2.num_batches_tracked', 'layer3.5.bn2.num_batches_tracked', 'layer3.3.bn3.num_batches_tracked', 'layer1.2.bn3.num_batches_tracked', 'layer1.0.bn1.num_batches_tracked', 'layer3.1.bn2.num_batches_tracked', 'layer2.0.bn3.num_batches_tracked', 'layer1.2.bn2.num_batches_tracked', 'layer3.4.bn2.num_batches_tracked', 'layer2.1.bn3.num_batches_tracked', 'layer1.1.bn1.num_batches_tracked', 'layer3.5.bn3.num_batches_tracked', 'layer1.0.bn3.num_batches_tracked', 'layer2.2.bn3.num_batches_tracked', 'bn1.num_batches_tracked', 'layer2.3.bn2.num_batches_tracked', 'layer3.5.bn1.num_batches_tracked', 'layer3.3.bn1.num_batches_tracked', 'layer1.1.bn3.num_batches_tracked', 'layer2.2.bn2.num_batches_tracked', 'layer2.3.bn1.num_batches_tracked', 'layer3.2.bn3.num_batches_tracked', 'layer3.1.bn3.num_batches_tracked', 'layer3.0.downsample.1.num_batches_tracked'}
[2019-08-14 18:33:12,926-rk0-load_helper.py# 14] missing keys:43
[2019-08-14 18:33:12,927-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'layer4.0.conv2.weight', 'layer4.1.bn1.running_mean', 'layer4.0.bn2.weight', 'layer4.1.conv2.weight', 'layer4.2.bn3.running_var', 'layer4.1.conv1.weight', 'layer4.2.bn1.running_mean', 'layer4.1.bn2.running_var', 'layer4.2.conv2.weight', 'layer4.2.bn2.weight', 'layer4.1.bn2.bias', 'layer4.1.bn3.weight', 'layer4.0.conv1.weight', 'layer4.0.downsample.0.weight', 'layer4.0.downsample.1.weight', 'layer4.0.bn1.bias', 'layer4.0.conv3.weight', 'layer4.0.downsample.1.running_mean', 'layer4.0.bn1.weight', 'layer4.0.bn2.running_mean', 'layer4.2.bn1.weight', 'layer4.1.bn3.bias', 'layer4.2.bn3.bias', 'layer4.1.bn2.running_mean', 'layer4.0.bn3.running_var', 'layer4.2.bn1.running_var', 'layer4.1.bn2.weight', 'layer4.2.bn3.running_mean', 'layer4.0.bn3.bias', 'layer4.0.downsample.1.bias', 'layer4.1.bn1.running_var', 'layer4.2.bn2.running_var', 'layer4.0.bn1.running_var', 'layer4.2.conv3.weight', 'layer4.0.bn3.weight', 'layer4.1.conv3.weight', 'layer4.0.bn2.bias', 'layer4.0.bn1.running_mean', 'layer4.2.bn2.running_mean', 'layer4.1.bn1.weight', 'layer4.2.conv1.weight', 'layer4.0.bn3.running_mean', 'layer4.1.bn3.running_mean', 'layer4.0.downsample.1.running_var', 'layer4.2.bn2.bias', 'layer4.2.bn3.weight', 'layer4.1.bn1.bias', 'layer4.0.bn2.running_var', 'layer4.1.bn3.running_var', 'layer4.2.bn1.bias'}
[2019-08-14 18:33:12,927-rk0-load_helper.py# 17] unused checkpoint keys:50
[2019-08-14 18:33:12,928-rk0-load_helper.py# 18] used keys:215
[2019-08-14 18:33:12,990-rk0-features.py# 66] Current training 0 layers:
	
[2019-08-14 18:33:12,992-rk0-features.py# 66] Current training 3 layers:
	
[2019-08-14 18:33:13,179-rk0-trainval_siamrcnn_corr.py#219] Custom(
  (upSample): UpsamplingBilinear2d(size=[127, 127], mode=bilinear)
  (kp_criterion): PoseLoss(
    (crit_hm_hp): FocalLoss()
    (crit_kp): RegWeightedL1Loss()
    (crit_reg): RegL1Loss()
  )
  (features): ResDown(
    (features): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer2): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer3): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (4): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (5): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
    )
    (downsample): ResDownS(
      (downsample): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (rpn_model): UP(
    (cls): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 10, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (loc): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 20, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (pose_corr): PoseCorr(
    (kp): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (kp_model): Center_pose_head(
    (deconv_layers_new): Sequential(
      (0): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace)
      (3): ConvTranspose2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace)
      (6): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU(inplace)
      (9): ConvTranspose2d(256, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (10): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (11): ReLU(inplace)
      (12): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (13): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (14): ReLU(inplace)
      (15): ConvTranspose2d(64, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (16): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (17): ReLU(inplace)
    )
    (hps): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 34, kernel_size=(1, 1), stride=(1, 1))
    )
    (hm_hp): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 17, kernel_size=(1, 1), stride=(1, 1))
    )
    (hp_offset): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[2019-08-14 18:33:13,347-rk0-load_helper.py# 68] restore from ./snapshot_0811/checkpoint_e99.pth
[2019-08-14 18:33:17,125-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 18:33:17,128-rk0-load_helper.py# 13] [Warning] missing keys: {'kp_model.deconv_layers_new.0.conv_offset_mask.bias', 'kp_model.deconv_layers_new.0.conv_offset_mask.weight', 'kp_model.deconv_layers_new.12.conv_offset_mask.weight', 'kp_model.deconv_layers_new.6.bias', 'kp_model.deconv_layers_new.6.conv_offset_mask.weight', 'kp_model.deconv_layers_new.12.bias', 'kp_model.deconv_layers_new.12.conv_offset_mask.bias', 'kp_model.deconv_layers_new.6.conv_offset_mask.bias', 'kp_model.deconv_layers_new.0.bias'}
[2019-08-14 18:33:17,129-rk0-load_helper.py# 14] missing keys:9
[2019-08-14 18:33:17,130-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'features.downsample_p4.downsample.0.weight', 'features.features.layer4.1.conv1.weight', 'features.features.layer4.2.bn2.bias', 'features.features.layer4.1.bn3.num_batches_tracked', 'features.features.layer4.0.bn3.bias', 'features.features.layer4.2.bn2.num_batches_tracked', 'features.features.layer4.2.bn1.running_var', 'features.features.layer4.0.bn1.num_batches_tracked', 'features.features.layer4.1.bn3.weight', 'features.features.layer4.1.conv3.weight', 'features.features.layer4.0.bn3.num_batches_tracked', 'features.features.layer4.2.conv2.weight', 'features.features.layer4.0.bn1.running_var', 'features.features.layer4.1.bn2.num_batches_tracked', 'features.features.layer4.0.bn3.weight', 'features.downsample_p4.downsample.1.weight', 'features.features.layer4.0.downsample.1.num_batches_tracked', 'features.features.layer4.0.downsample.1.running_mean', 'features.features.layer4.1.conv2.weight', 'features.features.layer4.0.conv2.weight', 'features.features.layer4.1.bn3.bias', 'features.features.layer4.2.bn3.bias', 'features.features.layer4.0.downsample.0.weight', 'features.features.layer4.0.bn2.weight', 'features.features.layer4.2.bn3.running_mean', 'features.features.layer4.0.bn2.running_mean', 'features.features.layer4.2.bn3.running_var', 'features.features.layer4.1.bn1.num_batches_tracked', 'features.features.layer4.0.bn1.running_mean', 'features.features.layer4.0.bn1.bias', 'features.features.layer4.2.bn1.running_mean', 'features.features.layer4.1.bn2.bias', 'features.features.layer4.0.bn3.running_var', 'features.features.layer4.0.conv1.weight', 'features.features.layer4.2.bn3.weight', 'features.features.layer4.0.bn1.weight', 'features.features.layer4.0.bn2.bias', 'features.features.layer4.1.bn2.running_var', 'features.features.layer4.0.downsample.1.running_var', 'features.features.layer4.2.bn2.weight', 'features.features.layer4.1.bn1.running_var', 'features.features.layer4.1.bn3.running_var', 'features.features.layer4.1.bn1.weight', 'features.downsample_p4.downsample.1.num_batches_tracked', 'features.features.layer4.1.bn3.running_mean', 'features.features.layer4.0.bn2.running_var', 'features.features.layer4.2.bn2.running_mean', 'features.features.layer4.2.bn1.bias', 'features.features.layer4.0.downsample.1.weight', 'features.downsample_p4.downsample.1.bias', 'features.features.layer4.2.bn1.weight', 'features.features.layer4.0.bn3.running_mean', 'features.features.layer4.2.conv1.weight', 'features.features.layer4.0.bn2.num_batches_tracked', 'features.features.layer4.1.bn1.bias', 'features.features.layer4.2.bn1.num_batches_tracked', 'features.features.layer4.2.bn3.num_batches_tracked', 'features.features.layer4.0.conv3.weight', 'features.downsample_p4.downsample.1.running_mean', 'features.features.layer4.1.bn2.running_mean', 'features.features.layer4.2.conv3.weight', 'features.features.layer4.0.downsample.1.bias', 'features.downsample_p4.downsample.1.running_var', 'features.features.layer4.2.bn2.running_var', 'features.features.layer4.1.bn2.weight', 'features.features.layer4.1.bn1.running_mean'}
[2019-08-14 18:33:17,131-rk0-load_helper.py# 17] unused checkpoint keys:66
[2019-08-14 18:33:17,132-rk0-load_helper.py# 18] used keys:372
[2019-08-14 18:33:17,140-rk0-load_helper.py# 18] used keys:2
[2019-08-14 18:34:16,990-rk0-trainval_siamrcnn_corr.py#197] 
PyTorch version: 0.4.1.post2
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: CentOS Linux 7 (Core)
GCC version: (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11)
CMake version: version 2.8.12.2

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: 
GPU 0: GeForce GTX 1080 Ti
GPU 1: GeForce GTX 1080 Ti
GPU 2: GeForce GTX 1080 Ti
GPU 3: GeForce GTX 1080 Ti
GPU 4: GeForce GTX 1080 Ti
GPU 5: GeForce GTX 1080 Ti

Nvidia driver version: 410.48
cuDNN version: Could not collect

Versions of relevant libraries:
[pip] Could not collect
[conda] pytorch                   0.4.1           py36_py35_py27__9.0.176_7.1.2_2    pytorch
[conda] torchvision               0.2.1                    py36_1    pytorch
        OpenCV (3.4.3)
[2019-08-14 18:34:16,992-rk0-trainval_siamrcnn_corr.py#198] Namespace(arch='', batch=128, clip=10.0, config='config.json', debug=False, dense_hp=False, epochs=200, hm_hp=True, hm_hp_weight=1.5, hp_weight=1, log='logs/log_0814.txt', log_dir='board/show_0814', lr=0.001, momentum=0.9, mse_loss=False, not_hm_hp=False, not_reg_bbox=False, not_reg_hp_offset=False, off_weight=1, output_size=56, pretrained='./snapshot_0811/checkpoint_e99.pth', print_freq=10, reg_bbox=True, reg_hp_offset=True, reg_loss='l1', resume='', save_dir='snapshot_0814', save_freq=5, start_epoch=0, weight_decay=0.0001, workers=4)
[2019-08-14 18:34:16,994-rk0-trainval_siamrcnn_corr.py#201] config 
{
    "network": {
        "arch": "Custom"
    },
    "hp": {
        "instance_size": 255,
        "base_size": 8
    },
    "lr": {
        "feature_lr_mult": 1.0,
        "rpn_lr_mult": 1.0,
        "mask_lr_mult": 1.0,
        "type": "log",
        "start_lr": 0.01,
        "end_lr": 1e-07,
        "warmup": {
            "start_lr": 0.001,
            "end_lr": 0.01,
            "type": "step",
            "step": 1,
            "epoch": 5
        }
    },
    "loss": {
        "weight": [
            1.0,
            1.2,
            1.0
        ],
        "reg": {
            "loss": "L1Loss"
        },
        "cls": {
            "split": true
        }
    },
    "train_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/train2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 4,
                "scale": 0.05
            },
            "search": {
                "shift": 0.0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0.15
        }
    },
    "val_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/val2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 0,
                "scale": 0.0
            },
            "search": {
                "shift": 0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0
        }
    },
    "anchors": {
        "stride": 8,
        "ratios": [
            0.33,
            0.5,
            1,
            2,
            3
        ],
        "scales": [
            8
        ],
        "round_dight": 0
    },
    "mask": {},
    "clip": {
        "feature": 10.0,
        "rpn": 10.0,
        "split": false
    }
}
[2019-08-14 18:34:16,998-rk0-trainval_siamrcnn_corr.py#144] build train dataset
[2019-08-14 18:34:17,000-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/train2017_pose_siamfc.json
[2019-08-14 18:34:19,827-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/train2017_pose_siamfc.json loaded.
[2019-08-14 18:34:19,863-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [45900/45900] path {}.{}.{}.jpg
[2019-08-14 18:34:19,929-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 18:34:19,930-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 18:34:19,933-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0.15,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 45900
}
[2019-08-14 18:34:20,000-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 18:34:20,000-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 18:34:20,001-rk0-trainval_siamrcnn_corr.py#148] build val dataset
[2019-08-14 18:34:20,003-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/val2017_pose_siamfc.json
[2019-08-14 18:34:20,096-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/val2017_pose_siamfc.json loaded.
[2019-08-14 18:34:20,099-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [1899/1899] path {}.{}.{}.jpg
[2019-08-14 18:34:20,102-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 18:34:20,103-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 18:34:20,104-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 1899
}
[2019-08-14 18:34:20,108-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 18:34:20,109-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 18:34:20,109-rk0-trainval_siamrcnn_corr.py#159] build dataset done
[2019-08-14 18:34:24,447-rk0-load_helper.py# 40] load pretrained model from ../resnet.model
[2019-08-14 18:34:24,782-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 18:34:24,784-rk0-load_helper.py# 13] [Warning] missing keys: {'layer3.1.bn1.num_batches_tracked', 'layer3.5.bn1.num_batches_tracked', 'layer1.1.bn1.num_batches_tracked', 'layer3.1.bn3.num_batches_tracked', 'layer1.1.bn3.num_batches_tracked', 'layer1.2.bn2.num_batches_tracked', 'layer1.0.bn3.num_batches_tracked', 'layer3.1.bn2.num_batches_tracked', 'layer2.2.bn1.num_batches_tracked', 'layer2.2.bn2.num_batches_tracked', 'layer3.0.downsample.1.num_batches_tracked', 'layer3.4.bn3.num_batches_tracked', 'layer2.1.bn3.num_batches_tracked', 'layer3.2.bn1.num_batches_tracked', 'layer1.2.bn1.num_batches_tracked', 'layer2.2.bn3.num_batches_tracked', 'layer1.2.bn3.num_batches_tracked', 'layer2.0.bn3.num_batches_tracked', 'layer2.0.downsample.1.num_batches_tracked', 'layer2.1.bn2.num_batches_tracked', 'layer3.0.bn3.num_batches_tracked', 'layer3.0.bn2.num_batches_tracked', 'layer2.3.bn1.num_batches_tracked', 'layer2.3.bn2.num_batches_tracked', 'layer3.3.bn3.num_batches_tracked', 'layer2.0.bn1.num_batches_tracked', 'layer3.5.bn2.num_batches_tracked', 'layer1.1.bn2.num_batches_tracked', 'layer3.2.bn3.num_batches_tracked', 'layer3.4.bn1.num_batches_tracked', 'layer3.4.bn2.num_batches_tracked', 'layer1.0.bn1.num_batches_tracked', 'layer1.0.downsample.1.num_batches_tracked', 'layer3.5.bn3.num_batches_tracked', 'bn1.num_batches_tracked', 'layer3.3.bn2.num_batches_tracked', 'layer2.1.bn1.num_batches_tracked', 'layer1.0.bn2.num_batches_tracked', 'layer3.2.bn2.num_batches_tracked', 'layer3.0.bn1.num_batches_tracked', 'layer2.3.bn3.num_batches_tracked', 'layer3.3.bn1.num_batches_tracked', 'layer2.0.bn2.num_batches_tracked'}
[2019-08-14 18:34:24,785-rk0-load_helper.py# 14] missing keys:43
[2019-08-14 18:34:24,786-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'layer4.2.bn3.weight', 'layer4.2.bn1.bias', 'layer4.0.bn2.bias', 'layer4.2.conv3.weight', 'layer4.1.bn2.running_mean', 'layer4.1.bn2.weight', 'layer4.0.bn1.weight', 'layer4.0.bn1.running_var', 'layer4.1.bn2.bias', 'layer4.2.bn1.running_mean', 'layer4.2.bn3.running_mean', 'layer4.0.bn1.running_mean', 'layer4.2.bn2.running_mean', 'layer4.2.bn2.weight', 'layer4.0.downsample.1.running_mean', 'layer4.0.bn3.weight', 'layer4.0.downsample.1.weight', 'layer4.0.conv3.weight', 'layer4.1.bn1.running_mean', 'layer4.0.bn2.running_var', 'layer4.1.bn1.bias', 'layer4.1.bn1.weight', 'layer4.2.bn3.bias', 'layer4.1.bn3.weight', 'layer4.0.conv2.weight', 'layer4.1.conv2.weight', 'layer4.1.conv1.weight', 'layer4.0.downsample.0.weight', 'layer4.0.bn2.running_mean', 'layer4.2.bn3.running_var', 'layer4.0.downsample.1.bias', 'layer4.1.bn2.running_var', 'layer4.0.bn3.bias', 'layer4.0.bn3.running_mean', 'layer4.2.bn1.running_var', 'layer4.2.conv1.weight', 'layer4.2.bn2.running_var', 'layer4.1.bn1.running_var', 'layer4.0.bn1.bias', 'layer4.1.bn3.running_var', 'layer4.0.bn2.weight', 'layer4.0.conv1.weight', 'layer4.0.bn3.running_var', 'layer4.1.conv3.weight', 'layer4.1.bn3.bias', 'layer4.1.bn3.running_mean', 'layer4.2.bn2.bias', 'layer4.2.bn1.weight', 'layer4.2.conv2.weight', 'layer4.0.downsample.1.running_var'}
[2019-08-14 18:34:24,786-rk0-load_helper.py# 17] unused checkpoint keys:50
[2019-08-14 18:34:24,787-rk0-load_helper.py# 18] used keys:215
[2019-08-14 18:34:24,810-rk0-features.py# 66] Current training 0 layers:
	
[2019-08-14 18:34:24,812-rk0-features.py# 66] Current training 3 layers:
	
[2019-08-14 18:34:24,990-rk0-trainval_siamrcnn_corr.py#219] Custom(
  (upSample): UpsamplingBilinear2d(size=[127, 127], mode=bilinear)
  (kp_criterion): PoseLoss(
    (crit_hm_hp): FocalLoss()
    (crit_kp): RegWeightedL1Loss()
    (crit_reg): RegL1Loss()
  )
  (features): ResDown(
    (features): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer2): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer3): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (4): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (5): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
    )
    (downsample): ResDownS(
      (downsample): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (rpn_model): UP(
    (cls): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 10, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (loc): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 20, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (pose_corr): PoseCorr(
    (kp): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (kp_model): Center_pose_head(
    (deconv_layers_new): Sequential(
      (0): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace)
      (3): ConvTranspose2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace)
      (6): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU(inplace)
      (9): ConvTranspose2d(256, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (10): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (11): ReLU(inplace)
      (12): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (13): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (14): ReLU(inplace)
      (15): ConvTranspose2d(64, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (16): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (17): ReLU(inplace)
    )
    (hps): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 34, kernel_size=(1, 1), stride=(1, 1))
    )
    (hm_hp): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 17, kernel_size=(1, 1), stride=(1, 1))
    )
    (hp_offset): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[2019-08-14 18:34:24,996-rk0-load_helper.py# 40] load pretrained model from ./snapshot_0811/checkpoint_e99.pth
[2019-08-14 18:34:25,388-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 18:34:25,391-rk0-load_helper.py# 13] [Warning] missing keys: {'kp_model.deconv_layers_new.0.conv_offset_mask.weight', 'kp_model.deconv_layers_new.0.conv_offset_mask.bias', 'kp_model.deconv_layers_new.6.conv_offset_mask.weight', 'kp_model.deconv_layers_new.12.bias', 'kp_model.deconv_layers_new.12.conv_offset_mask.bias', 'kp_model.deconv_layers_new.6.conv_offset_mask.bias', 'kp_model.deconv_layers_new.0.bias', 'kp_model.deconv_layers_new.12.conv_offset_mask.weight', 'kp_model.deconv_layers_new.6.bias'}
[2019-08-14 18:34:25,392-rk0-load_helper.py# 14] missing keys:9
[2019-08-14 18:34:25,393-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'features.downsample_p4.downsample.1.bias', 'features.features.layer4.1.conv2.weight', 'features.features.layer4.0.conv2.weight', 'features.features.layer4.0.downsample.1.running_var', 'features.downsample_p4.downsample.0.weight', 'features.features.layer4.0.conv1.weight', 'features.features.layer4.2.bn3.running_mean', 'features.features.layer4.1.bn1.running_mean', 'features.features.layer4.1.bn1.weight', 'features.features.layer4.2.bn1.running_mean', 'features.features.layer4.1.bn2.num_batches_tracked', 'features.features.layer4.0.downsample.1.running_mean', 'features.features.layer4.2.bn3.running_var', 'features.features.layer4.1.bn1.running_var', 'features.features.layer4.2.bn1.running_var', 'features.downsample_p4.downsample.1.running_mean', 'features.features.layer4.1.bn3.running_var', 'features.features.layer4.1.bn3.weight', 'features.features.layer4.1.bn3.bias', 'features.features.layer4.2.bn2.running_var', 'features.features.layer4.0.bn3.weight', 'features.features.layer4.2.bn3.num_batches_tracked', 'features.features.layer4.0.bn1.bias', 'features.features.layer4.1.conv1.weight', 'features.features.layer4.0.bn2.bias', 'features.downsample_p4.downsample.1.running_var', 'features.features.layer4.0.bn2.running_var', 'features.features.layer4.1.bn2.running_mean', 'features.features.layer4.1.conv3.weight', 'features.features.layer4.2.conv3.weight', 'features.features.layer4.1.bn1.bias', 'features.features.layer4.0.bn1.running_var', 'features.features.layer4.1.bn2.weight', 'features.features.layer4.1.bn3.running_mean', 'features.features.layer4.0.downsample.0.weight', 'features.features.layer4.0.downsample.1.bias', 'features.features.layer4.2.bn3.bias', 'features.features.layer4.0.bn3.bias', 'features.features.layer4.2.bn1.num_batches_tracked', 'features.features.layer4.0.bn2.running_mean', 'features.features.layer4.2.bn2.bias', 'features.features.layer4.2.bn1.bias', 'features.features.layer4.0.conv3.weight', 'features.features.layer4.2.conv1.weight', 'features.features.layer4.0.bn1.weight', 'features.features.layer4.1.bn2.running_var', 'features.features.layer4.2.bn3.weight', 'features.features.layer4.1.bn3.num_batches_tracked', 'features.features.layer4.1.bn1.num_batches_tracked', 'features.features.layer4.2.bn2.weight', 'features.features.layer4.2.conv2.weight', 'features.features.layer4.1.bn2.bias', 'features.features.layer4.0.downsample.1.num_batches_tracked', 'features.features.layer4.0.bn3.running_mean', 'features.features.layer4.0.bn1.running_mean', 'features.features.layer4.0.bn1.num_batches_tracked', 'features.features.layer4.0.bn2.num_batches_tracked', 'features.features.layer4.0.bn3.num_batches_tracked', 'features.features.layer4.2.bn1.weight', 'features.features.layer4.0.bn2.weight', 'features.features.layer4.0.bn3.running_var', 'features.downsample_p4.downsample.1.weight', 'features.features.layer4.2.bn2.running_mean', 'features.features.layer4.2.bn2.num_batches_tracked', 'features.downsample_p4.downsample.1.num_batches_tracked', 'features.features.layer4.0.downsample.1.weight'}
[2019-08-14 18:34:25,393-rk0-load_helper.py# 17] unused checkpoint keys:66
[2019-08-14 18:34:25,394-rk0-load_helper.py# 18] used keys:372
[2019-08-14 18:34:25,468-rk0-trainval_siamrcnn_corr.py#237] (WarmUPScheduler) lr spaces: 
[1.00000000e-03 1.58489319e-03 2.51188643e-03 3.98107171e-03
 6.30957344e-03 1.00000000e-02 9.42381613e-03 8.88083105e-03
 8.36913190e-03 7.88691602e-03 7.43248464e-03 7.00423687e-03
 6.60066404e-03 6.22034443e-03 5.86193822e-03 5.52418280e-03
 5.20588830e-03 4.90593341e-03 4.62326145e-03 4.35687658e-03
 4.10584038e-03 3.86926848e-03 3.64632748e-03 3.43623197e-03
 3.23824183e-03 3.05165956e-03 2.87582786e-03 2.71012730e-03
 2.55397414e-03 2.40681827e-03 2.26814128e-03 2.13745464e-03
 2.01429795e-03 1.89823735e-03 1.78886398e-03 1.68579252e-03
 1.58865988e-03 1.49712386e-03 1.41086200e-03 1.32957041e-03
 1.25296271e-03 1.18076902e-03 1.11273501e-03 1.04862101e-03
 9.88201163e-04 9.31262607e-04 8.77604758e-04 8.27038588e-04
 7.79385959e-04 7.34478997e-04 6.92159502e-04 6.52278389e-04
 6.14695160e-04 5.79277417e-04 5.45900387e-04 5.14446487e-04
 4.84804911e-04 4.56871234e-04 4.30547051e-04 4.05739624e-04
 3.82361562e-04 3.60330505e-04 3.39568843e-04 3.20003434e-04
 3.01565353e-04 2.84189644e-04 2.67815095e-04 2.52384021e-04
 2.37842061e-04 2.24137985e-04 2.11223516e-04 1.99053158e-04
 1.87584036e-04 1.76775747e-04 1.66590213e-04 1.56991554e-04
 1.47945954e-04 1.39421547e-04 1.31388302e-04 1.23817920e-04
 1.16683732e-04 1.09960603e-04 1.03624851e-04 9.76541539e-05
 9.20274791e-05 8.67250043e-05 8.17280495e-05 7.70190111e-05
 7.25813000e-05 6.83992826e-05 6.44582263e-05 6.07442473e-05
 5.72442617e-05 5.39459397e-05 5.08376617e-05 4.79084777e-05
 4.51480685e-05 4.25467096e-05 4.00952369e-05 3.77850140e-05
 3.56079025e-05 3.35562326e-05 3.16227766e-05 2.98007232e-05
 2.80836536e-05 2.64655188e-05 2.49406183e-05 2.35035802e-05
 2.21493418e-05 2.08731324e-05 1.96704562e-05 1.85370763e-05
 1.74689999e-05 1.64624643e-05 1.55139236e-05 1.46200364e-05
 1.37776535e-05 1.29838073e-05 1.22357013e-05 1.15306999e-05
 1.08663196e-05 1.02402198e-05 9.65019485e-06 9.09416619e-06
 8.57017501e-06 8.07637535e-06 7.61102764e-06 7.17249250e-06
 6.75922506e-06 6.36976942e-06 6.00275358e-06 5.65688460e-06
 5.33094404e-06 5.02378365e-06 4.73432134e-06 4.46153738e-06
 4.20447080e-06 3.96221597e-06 3.73391948e-06 3.51877706e-06
 3.31603081e-06 3.12496646e-06 2.94491094e-06 2.77522992e-06
 2.61532565e-06 2.46463481e-06 2.32262652e-06 2.18880053e-06
 2.06268538e-06 1.94383677e-06 1.83183603e-06 1.72628860e-06
 1.62682263e-06 1.53308774e-06 1.44475370e-06 1.36150932e-06
 1.28306135e-06 1.20913342e-06 1.13946511e-06 1.07381097e-06
 1.01193971e-06 9.53633378e-07 8.98686561e-07 8.46905692e-07
 7.98108352e-07 7.52122637e-07 7.08786544e-07 6.67947407e-07
 6.29461355e-07 5.93192807e-07 5.59013995e-07 5.26804510e-07
 4.96450884e-07 4.67846185e-07 4.40889643e-07 4.15486293e-07
 3.91546643e-07 3.68986357e-07 3.47725959e-07 3.27690550e-07
 3.08809549e-07 2.91016441e-07 2.74248544e-07 2.58446785e-07
 2.43555498e-07 2.29522223e-07 2.16297523e-07 2.03834809e-07
 1.92090176e-07 1.81022250e-07 1.70592040e-07 1.60762802e-07
 1.51499909e-07 1.42770728e-07 1.34544509e-07 1.26792272e-07
 1.19486706e-07 1.12602075e-07 1.06114125e-07 1.00000000e-07]
[2019-08-14 18:34:25,475-rk0-trainval_siamrcnn_corr.py#239] model prepare done
[2019-08-14 18:34:25,514-rk0-trainval_siamrcnn_corr.py#296] train epoch:0
[2019-08-14 18:35:46,582-rk0-trainval_siamrcnn_corr.py#197] 
PyTorch version: 0.4.1.post2
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: CentOS Linux 7 (Core)
GCC version: (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11)
CMake version: version 2.8.12.2

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: 
GPU 0: GeForce GTX 1080 Ti
GPU 1: GeForce GTX 1080 Ti
GPU 2: GeForce GTX 1080 Ti
GPU 3: GeForce GTX 1080 Ti
GPU 4: GeForce GTX 1080 Ti
GPU 5: GeForce GTX 1080 Ti

Nvidia driver version: 410.48
cuDNN version: Could not collect

Versions of relevant libraries:
[pip] Could not collect
[conda] pytorch                   0.4.1           py36_py35_py27__9.0.176_7.1.2_2    pytorch
[conda] torchvision               0.2.1                    py36_1    pytorch
        OpenCV (3.4.3)
[2019-08-14 18:35:46,584-rk0-trainval_siamrcnn_corr.py#198] Namespace(arch='', batch=128, clip=10.0, config='config.json', debug=False, dense_hp=False, epochs=200, hm_hp=True, hm_hp_weight=1.5, hp_weight=1, log='logs/log_0814.txt', log_dir='board/show_0814', lr=0.001, momentum=0.9, mse_loss=False, not_hm_hp=False, not_reg_bbox=False, not_reg_hp_offset=False, off_weight=1, output_size=56, pretrained='./snapshot_0811/checkpoint_e99.pth', print_freq=10, reg_bbox=True, reg_hp_offset=True, reg_loss='l1', resume='', save_dir='snapshot_0814', save_freq=5, start_epoch=0, weight_decay=0.0001, workers=4)
[2019-08-14 18:35:46,586-rk0-trainval_siamrcnn_corr.py#201] config 
{
    "network": {
        "arch": "Custom"
    },
    "hp": {
        "instance_size": 255,
        "base_size": 8
    },
    "lr": {
        "feature_lr_mult": 1.0,
        "rpn_lr_mult": 1.0,
        "mask_lr_mult": 1.0,
        "type": "log",
        "start_lr": 0.01,
        "end_lr": 1e-07,
        "warmup": {
            "start_lr": 0.001,
            "end_lr": 0.01,
            "type": "step",
            "step": 1,
            "epoch": 5
        }
    },
    "loss": {
        "weight": [
            1.0,
            1.2,
            1.0
        ],
        "reg": {
            "loss": "L1Loss"
        },
        "cls": {
            "split": true
        }
    },
    "train_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/train2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 4,
                "scale": 0.05
            },
            "search": {
                "shift": 0.0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0.15
        }
    },
    "val_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/val2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 0,
                "scale": 0.0
            },
            "search": {
                "shift": 0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0
        }
    },
    "anchors": {
        "stride": 8,
        "ratios": [
            0.33,
            0.5,
            1,
            2,
            3
        ],
        "scales": [
            8
        ],
        "round_dight": 0
    },
    "mask": {},
    "clip": {
        "feature": 10.0,
        "rpn": 10.0,
        "split": false
    }
}
[2019-08-14 18:35:46,590-rk0-trainval_siamrcnn_corr.py#144] build train dataset
[2019-08-14 18:35:46,592-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/train2017_pose_siamfc.json
[2019-08-14 18:35:49,419-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/train2017_pose_siamfc.json loaded.
[2019-08-14 18:35:49,455-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [45900/45900] path {}.{}.{}.jpg
[2019-08-14 18:35:49,522-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 18:35:49,523-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 18:35:49,526-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0.15,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 45900
}
[2019-08-14 18:35:49,593-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 18:35:49,594-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 18:35:49,595-rk0-trainval_siamrcnn_corr.py#148] build val dataset
[2019-08-14 18:35:49,597-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/val2017_pose_siamfc.json
[2019-08-14 18:35:49,691-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/val2017_pose_siamfc.json loaded.
[2019-08-14 18:35:49,694-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [1899/1899] path {}.{}.{}.jpg
[2019-08-14 18:35:49,697-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 18:35:49,698-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 18:35:49,699-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 1899
}
[2019-08-14 18:35:49,703-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 18:35:49,704-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 18:35:49,704-rk0-trainval_siamrcnn_corr.py#159] build dataset done
[2019-08-14 18:35:54,509-rk0-load_helper.py# 40] load pretrained model from ../resnet.model
[2019-08-14 18:35:54,904-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 18:35:54,906-rk0-load_helper.py# 13] [Warning] missing keys: {'layer3.2.bn1.num_batches_tracked', 'layer3.0.bn1.num_batches_tracked', 'layer2.0.downsample.1.num_batches_tracked', 'layer2.2.bn3.num_batches_tracked', 'layer3.0.bn2.num_batches_tracked', 'layer1.1.bn2.num_batches_tracked', 'layer2.1.bn3.num_batches_tracked', 'layer2.2.bn2.num_batches_tracked', 'layer1.0.bn1.num_batches_tracked', 'layer3.0.bn3.num_batches_tracked', 'layer1.0.bn3.num_batches_tracked', 'layer3.5.bn1.num_batches_tracked', 'layer3.0.downsample.1.num_batches_tracked', 'layer3.1.bn2.num_batches_tracked', 'layer3.5.bn3.num_batches_tracked', 'layer1.1.bn1.num_batches_tracked', 'layer3.5.bn2.num_batches_tracked', 'layer1.2.bn1.num_batches_tracked', 'layer1.2.bn2.num_batches_tracked', 'layer2.3.bn2.num_batches_tracked', 'layer3.1.bn1.num_batches_tracked', 'layer2.3.bn3.num_batches_tracked', 'layer1.0.bn2.num_batches_tracked', 'layer2.1.bn2.num_batches_tracked', 'layer3.1.bn3.num_batches_tracked', 'layer3.2.bn2.num_batches_tracked', 'layer3.2.bn3.num_batches_tracked', 'layer2.0.bn3.num_batches_tracked', 'layer1.0.downsample.1.num_batches_tracked', 'layer2.0.bn1.num_batches_tracked', 'layer2.1.bn1.num_batches_tracked', 'layer3.3.bn3.num_batches_tracked', 'layer3.4.bn2.num_batches_tracked', 'layer3.3.bn1.num_batches_tracked', 'layer1.2.bn3.num_batches_tracked', 'layer3.4.bn3.num_batches_tracked', 'layer3.3.bn2.num_batches_tracked', 'layer3.4.bn1.num_batches_tracked', 'layer1.1.bn3.num_batches_tracked', 'bn1.num_batches_tracked', 'layer2.0.bn2.num_batches_tracked', 'layer2.2.bn1.num_batches_tracked', 'layer2.3.bn1.num_batches_tracked'}
[2019-08-14 18:35:54,907-rk0-load_helper.py# 14] missing keys:43
[2019-08-14 18:35:54,908-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'layer4.0.bn1.bias', 'layer4.2.bn3.running_var', 'layer4.0.bn2.running_var', 'layer4.0.bn2.bias', 'layer4.2.bn2.weight', 'layer4.0.conv2.weight', 'layer4.2.bn1.running_var', 'layer4.0.conv1.weight', 'layer4.2.bn3.weight', 'layer4.1.bn1.weight', 'layer4.1.bn2.running_var', 'layer4.2.bn1.bias', 'layer4.2.bn2.running_mean', 'layer4.0.downsample.1.bias', 'layer4.2.bn2.bias', 'layer4.0.downsample.1.running_mean', 'layer4.0.bn3.bias', 'layer4.0.bn1.weight', 'layer4.0.bn3.running_var', 'layer4.2.bn1.running_mean', 'layer4.0.downsample.0.weight', 'layer4.1.conv2.weight', 'layer4.1.bn3.running_var', 'layer4.2.conv1.weight', 'layer4.0.downsample.1.weight', 'layer4.1.bn2.running_mean', 'layer4.0.conv3.weight', 'layer4.1.bn1.bias', 'layer4.1.bn1.running_mean', 'layer4.1.conv3.weight', 'layer4.2.conv2.weight', 'layer4.1.bn2.weight', 'layer4.2.bn3.bias', 'layer4.1.bn3.running_mean', 'layer4.2.bn2.running_var', 'layer4.0.bn1.running_mean', 'layer4.0.bn3.running_mean', 'layer4.0.bn2.running_mean', 'layer4.0.bn3.weight', 'layer4.0.bn2.weight', 'layer4.1.bn3.weight', 'layer4.1.bn2.bias', 'layer4.1.bn1.running_var', 'layer4.0.downsample.1.running_var', 'layer4.1.bn3.bias', 'layer4.0.bn1.running_var', 'layer4.2.bn1.weight', 'layer4.2.conv3.weight', 'layer4.1.conv1.weight', 'layer4.2.bn3.running_mean'}
[2019-08-14 18:35:54,909-rk0-load_helper.py# 17] unused checkpoint keys:50
[2019-08-14 18:35:54,910-rk0-load_helper.py# 18] used keys:215
[2019-08-14 18:35:54,934-rk0-features.py# 66] Current training 0 layers:
	
[2019-08-14 18:35:54,937-rk0-features.py# 66] Current training 3 layers:
	
[2019-08-14 18:35:55,108-rk0-trainval_siamrcnn_corr.py#219] Custom(
  (upSample): UpsamplingBilinear2d(size=[127, 127], mode=bilinear)
  (kp_criterion): PoseLoss(
    (crit_hm_hp): FocalLoss()
    (crit_kp): RegWeightedL1Loss()
    (crit_reg): RegL1Loss()
  )
  (features): ResDown(
    (features): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer2): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer3): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (4): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (5): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
    )
    (downsample): ResDownS(
      (downsample): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (rpn_model): UP(
    (cls): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 10, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (loc): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 20, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (pose_corr): PoseCorr(
    (kp): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (kp_model): Center_pose_head(
    (deconv_layers_new): Sequential(
      (0): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace)
      (3): ConvTranspose2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace)
      (6): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU(inplace)
      (9): ConvTranspose2d(256, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (10): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (11): ReLU(inplace)
      (12): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (13): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (14): ReLU(inplace)
      (15): ConvTranspose2d(64, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (16): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (17): ReLU(inplace)
    )
    (hps): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 34, kernel_size=(1, 1), stride=(1, 1))
    )
    (hm_hp): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 17, kernel_size=(1, 1), stride=(1, 1))
    )
    (hp_offset): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[2019-08-14 18:35:55,115-rk0-load_helper.py# 40] load pretrained model from ./snapshot_0811/checkpoint_e99.pth
[2019-08-14 18:35:55,570-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 18:35:55,573-rk0-load_helper.py# 13] [Warning] missing keys: {'kp_model.deconv_layers_new.6.conv_offset_mask.bias', 'kp_model.deconv_layers_new.12.conv_offset_mask.weight', 'kp_model.deconv_layers_new.12.conv_offset_mask.bias', 'kp_model.deconv_layers_new.6.bias', 'kp_model.deconv_layers_new.0.conv_offset_mask.weight', 'kp_model.deconv_layers_new.0.conv_offset_mask.bias', 'kp_model.deconv_layers_new.12.bias', 'kp_model.deconv_layers_new.0.bias', 'kp_model.deconv_layers_new.6.conv_offset_mask.weight'}
[2019-08-14 18:35:55,574-rk0-load_helper.py# 14] missing keys:9
[2019-08-14 18:35:55,574-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'features.features.layer4.0.conv2.weight', 'features.features.layer4.1.bn2.running_var', 'features.features.layer4.2.bn2.running_mean', 'features.features.layer4.0.downsample.1.weight', 'features.features.layer4.2.bn2.bias', 'features.features.layer4.1.bn3.running_mean', 'features.features.layer4.1.bn3.weight', 'features.downsample_p4.downsample.1.running_mean', 'features.downsample_p4.downsample.1.bias', 'features.features.layer4.2.bn1.bias', 'features.features.layer4.1.bn2.bias', 'features.features.layer4.1.conv2.weight', 'features.features.layer4.2.bn3.weight', 'features.features.layer4.0.bn2.running_mean', 'features.features.layer4.2.conv2.weight', 'features.features.layer4.2.bn1.weight', 'features.features.layer4.0.bn3.running_var', 'features.features.layer4.0.bn1.running_mean', 'features.features.layer4.0.conv3.weight', 'features.features.layer4.1.bn3.running_var', 'features.features.layer4.1.conv1.weight', 'features.features.layer4.1.bn2.num_batches_tracked', 'features.features.layer4.1.bn1.weight', 'features.downsample_p4.downsample.1.weight', 'features.features.layer4.1.bn3.num_batches_tracked', 'features.features.layer4.2.bn3.num_batches_tracked', 'features.features.layer4.0.bn3.num_batches_tracked', 'features.features.layer4.0.bn1.weight', 'features.features.layer4.0.downsample.1.running_var', 'features.features.layer4.0.bn3.weight', 'features.features.layer4.2.conv1.weight', 'features.downsample_p4.downsample.1.num_batches_tracked', 'features.features.layer4.0.bn1.num_batches_tracked', 'features.features.layer4.0.bn3.running_mean', 'features.features.layer4.0.bn2.num_batches_tracked', 'features.features.layer4.1.bn1.running_mean', 'features.features.layer4.2.bn1.running_mean', 'features.features.layer4.0.conv1.weight', 'features.features.layer4.1.bn2.running_mean', 'features.features.layer4.0.bn3.bias', 'features.features.layer4.2.conv3.weight', 'features.features.layer4.2.bn3.running_var', 'features.downsample_p4.downsample.0.weight', 'features.features.layer4.1.bn1.num_batches_tracked', 'features.features.layer4.0.downsample.0.weight', 'features.features.layer4.0.bn2.running_var', 'features.features.layer4.1.bn1.bias', 'features.features.layer4.2.bn2.running_var', 'features.features.layer4.2.bn2.weight', 'features.features.layer4.1.bn1.running_var', 'features.features.layer4.0.downsample.1.num_batches_tracked', 'features.features.layer4.0.bn2.bias', 'features.features.layer4.2.bn3.running_mean', 'features.features.layer4.0.bn2.weight', 'features.features.layer4.0.bn1.bias', 'features.features.layer4.1.conv3.weight', 'features.features.layer4.0.downsample.1.running_mean', 'features.features.layer4.2.bn3.bias', 'features.features.layer4.2.bn2.num_batches_tracked', 'features.features.layer4.2.bn1.num_batches_tracked', 'features.features.layer4.2.bn1.running_var', 'features.features.layer4.1.bn3.bias', 'features.features.layer4.0.bn1.running_var', 'features.features.layer4.1.bn2.weight', 'features.features.layer4.0.downsample.1.bias', 'features.downsample_p4.downsample.1.running_var'}
[2019-08-14 18:35:55,575-rk0-load_helper.py# 17] unused checkpoint keys:66
[2019-08-14 18:35:55,576-rk0-load_helper.py# 18] used keys:372
[2019-08-14 18:35:55,656-rk0-trainval_siamrcnn_corr.py#237] (WarmUPScheduler) lr spaces: 
[1.00000000e-03 1.58489319e-03 2.51188643e-03 3.98107171e-03
 6.30957344e-03 1.00000000e-02 9.42381613e-03 8.88083105e-03
 8.36913190e-03 7.88691602e-03 7.43248464e-03 7.00423687e-03
 6.60066404e-03 6.22034443e-03 5.86193822e-03 5.52418280e-03
 5.20588830e-03 4.90593341e-03 4.62326145e-03 4.35687658e-03
 4.10584038e-03 3.86926848e-03 3.64632748e-03 3.43623197e-03
 3.23824183e-03 3.05165956e-03 2.87582786e-03 2.71012730e-03
 2.55397414e-03 2.40681827e-03 2.26814128e-03 2.13745464e-03
 2.01429795e-03 1.89823735e-03 1.78886398e-03 1.68579252e-03
 1.58865988e-03 1.49712386e-03 1.41086200e-03 1.32957041e-03
 1.25296271e-03 1.18076902e-03 1.11273501e-03 1.04862101e-03
 9.88201163e-04 9.31262607e-04 8.77604758e-04 8.27038588e-04
 7.79385959e-04 7.34478997e-04 6.92159502e-04 6.52278389e-04
 6.14695160e-04 5.79277417e-04 5.45900387e-04 5.14446487e-04
 4.84804911e-04 4.56871234e-04 4.30547051e-04 4.05739624e-04
 3.82361562e-04 3.60330505e-04 3.39568843e-04 3.20003434e-04
 3.01565353e-04 2.84189644e-04 2.67815095e-04 2.52384021e-04
 2.37842061e-04 2.24137985e-04 2.11223516e-04 1.99053158e-04
 1.87584036e-04 1.76775747e-04 1.66590213e-04 1.56991554e-04
 1.47945954e-04 1.39421547e-04 1.31388302e-04 1.23817920e-04
 1.16683732e-04 1.09960603e-04 1.03624851e-04 9.76541539e-05
 9.20274791e-05 8.67250043e-05 8.17280495e-05 7.70190111e-05
 7.25813000e-05 6.83992826e-05 6.44582263e-05 6.07442473e-05
 5.72442617e-05 5.39459397e-05 5.08376617e-05 4.79084777e-05
 4.51480685e-05 4.25467096e-05 4.00952369e-05 3.77850140e-05
 3.56079025e-05 3.35562326e-05 3.16227766e-05 2.98007232e-05
 2.80836536e-05 2.64655188e-05 2.49406183e-05 2.35035802e-05
 2.21493418e-05 2.08731324e-05 1.96704562e-05 1.85370763e-05
 1.74689999e-05 1.64624643e-05 1.55139236e-05 1.46200364e-05
 1.37776535e-05 1.29838073e-05 1.22357013e-05 1.15306999e-05
 1.08663196e-05 1.02402198e-05 9.65019485e-06 9.09416619e-06
 8.57017501e-06 8.07637535e-06 7.61102764e-06 7.17249250e-06
 6.75922506e-06 6.36976942e-06 6.00275358e-06 5.65688460e-06
 5.33094404e-06 5.02378365e-06 4.73432134e-06 4.46153738e-06
 4.20447080e-06 3.96221597e-06 3.73391948e-06 3.51877706e-06
 3.31603081e-06 3.12496646e-06 2.94491094e-06 2.77522992e-06
 2.61532565e-06 2.46463481e-06 2.32262652e-06 2.18880053e-06
 2.06268538e-06 1.94383677e-06 1.83183603e-06 1.72628860e-06
 1.62682263e-06 1.53308774e-06 1.44475370e-06 1.36150932e-06
 1.28306135e-06 1.20913342e-06 1.13946511e-06 1.07381097e-06
 1.01193971e-06 9.53633378e-07 8.98686561e-07 8.46905692e-07
 7.98108352e-07 7.52122637e-07 7.08786544e-07 6.67947407e-07
 6.29461355e-07 5.93192807e-07 5.59013995e-07 5.26804510e-07
 4.96450884e-07 4.67846185e-07 4.40889643e-07 4.15486293e-07
 3.91546643e-07 3.68986357e-07 3.47725959e-07 3.27690550e-07
 3.08809549e-07 2.91016441e-07 2.74248544e-07 2.58446785e-07
 2.43555498e-07 2.29522223e-07 2.16297523e-07 2.03834809e-07
 1.92090176e-07 1.81022250e-07 1.70592040e-07 1.60762802e-07
 1.51499909e-07 1.42770728e-07 1.34544509e-07 1.26792272e-07
 1.19486706e-07 1.12602075e-07 1.06114125e-07 1.00000000e-07]
[2019-08-14 18:35:55,664-rk0-trainval_siamrcnn_corr.py#239] model prepare done
[2019-08-14 18:35:55,667-rk0-trainval_siamrcnn_corr.py#296] train epoch:0
[2019-08-14 18:36:47,883-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][10/358] lr: 0.001000	batch_time: 7.045123 (5.220412)	data_time: 5.838725 (2.079376)	rpn_cls_loss: 0.000585 (0.000424)	rpn_loc_loss: 0.048551 (0.044775)	kp_hp_loss: 0.500646 (0.492190)	kp_hm_hp_loss: 0.201269 (0.207198)	kp_hp_offset_loss: 0.227000 (0.221137)	kp_loss: 1.029549 (1.024125)	siammask_loss: 1.088395 (1.078278)	kp_avg_acc: 0.893653 (0.896709)
[2019-08-14 18:36:47,885-rk0-log_helper.py# 97] Progress: 10 / 71600 [0%], Speed: 5.220 s/iter, ETA 4:07:48 (D:H:M)

[2019-08-14 18:37:17,850-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][20/358] lr: 0.001000	batch_time: 1.202991 (4.107836)	data_time: 0.048537 (1.957551)	rpn_cls_loss: 0.000383 (0.000455)	rpn_loc_loss: 0.042016 (0.045137)	kp_hp_loss: 0.505618 (0.504389)	kp_hm_hp_loss: 0.213385 (0.219308)	kp_hp_offset_loss: 0.226241 (0.221564)	kp_loss: 1.051937 (1.054914)	siammask_loss: 1.102739 (1.109534)	kp_avg_acc: 0.907282 (0.894360)
[2019-08-14 18:37:17,852-rk0-log_helper.py# 97] Progress: 20 / 71600 [0%], Speed: 4.108 s/iter, ETA 3:09:40 (D:H:M)

[2019-08-14 18:37:48,959-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][30/358] lr: 0.001000	batch_time: 5.162653 (3.775104)	data_time: 4.000803 (1.956213)	rpn_cls_loss: 0.000486 (0.000450)	rpn_loc_loss: 0.043203 (0.044797)	kp_hp_loss: 0.563196 (0.510462)	kp_hm_hp_loss: 0.261272 (0.224457)	kp_hp_offset_loss: 0.221894 (0.221896)	kp_loss: 1.176997 (1.069042)	siammask_loss: 1.229327 (1.123248)	kp_avg_acc: 0.873539 (0.890547)
[2019-08-14 18:37:48,960-rk0-log_helper.py# 97] Progress: 30 / 71600 [0%], Speed: 3.775 s/iter, ETA 3:03:03 (D:H:M)

[2019-08-14 18:38:14,143-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][40/358] lr: 0.001000	batch_time: 1.163338 (3.460630)	data_time: 0.039099 (1.811538)	rpn_cls_loss: 0.000455 (0.000441)	rpn_loc_loss: 0.048842 (0.044580)	kp_hp_loss: 0.548625 (0.517585)	kp_hm_hp_loss: 0.256461 (0.228474)	kp_hp_offset_loss: 0.225689 (0.222559)	kp_loss: 1.159007 (1.082856)	siammask_loss: 1.218072 (1.136793)	kp_avg_acc: 0.857213 (0.888710)
[2019-08-14 18:38:14,145-rk0-log_helper.py# 97] Progress: 40 / 71600 [0%], Speed: 3.461 s/iter, ETA 2:20:47 (D:H:M)

[2019-08-14 18:38:43,497-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][50/358] lr: 0.001000	batch_time: 4.702043 (3.355273)	data_time: 3.502576 (1.804341)	rpn_cls_loss: 0.000263 (0.000436)	rpn_loc_loss: 0.040608 (0.044501)	kp_hp_loss: 0.486914 (0.519901)	kp_hm_hp_loss: 0.187989 (0.228836)	kp_hp_offset_loss: 0.221792 (0.222807)	kp_loss: 0.990690 (1.085961)	siammask_loss: 1.039682 (1.139798)	kp_avg_acc: 0.905856 (0.888258)
[2019-08-14 18:38:43,498-rk0-log_helper.py# 97] Progress: 50 / 71600 [0%], Speed: 3.355 s/iter, ETA 2:18:41 (D:H:M)

[2019-08-14 18:39:07,427-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][60/358] lr: 0.001000	batch_time: 1.210292 (3.194682)	data_time: 0.037897 (1.709169)	rpn_cls_loss: 0.000364 (0.000433)	rpn_loc_loss: 0.047377 (0.044421)	kp_hp_loss: 0.543277 (0.520164)	kp_hm_hp_loss: 0.232208 (0.228139)	kp_hp_offset_loss: 0.217902 (0.222923)	kp_loss: 1.109491 (1.085295)	siammask_loss: 1.166707 (1.139032)	kp_avg_acc: 0.875031 (0.888845)
[2019-08-14 18:39:07,428-rk0-log_helper.py# 97] Progress: 60 / 71600 [0%], Speed: 3.195 s/iter, ETA 2:15:29 (D:H:M)

[2019-08-14 18:39:32,741-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][70/358] lr: 0.001000	batch_time: 3.602379 (3.099771)	data_time: 2.454105 (1.662337)	rpn_cls_loss: 0.000299 (0.000445)	rpn_loc_loss: 0.046920 (0.044669)	kp_hp_loss: 0.497194 (0.520831)	kp_hm_hp_loss: 0.192305 (0.230117)	kp_hp_offset_loss: 0.222985 (0.222894)	kp_loss: 1.008636 (1.088900)	siammask_loss: 1.065239 (1.142948)	kp_avg_acc: 0.888745 (0.887104)
[2019-08-14 18:39:32,742-rk0-log_helper.py# 97] Progress: 70 / 71600 [0%], Speed: 3.100 s/iter, ETA 2:13:35 (D:H:M)

[2019-08-14 18:39:51,802-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][80/358] lr: 0.001000	batch_time: 1.242778 (2.950424)	data_time: 0.046796 (1.549972)	rpn_cls_loss: 0.000361 (0.000439)	rpn_loc_loss: 0.052261 (0.044696)	kp_hp_loss: 0.518484 (0.522702)	kp_hm_hp_loss: 0.264483 (0.230826)	kp_hp_offset_loss: 0.219964 (0.222908)	kp_loss: 1.135172 (1.091848)	siammask_loss: 1.198247 (1.145922)	kp_avg_acc: 0.877146 (0.886760)
[2019-08-14 18:39:51,804-rk0-log_helper.py# 97] Progress: 80 / 71600 [0%], Speed: 2.950 s/iter, ETA 2:10:36 (D:H:M)

[2019-08-14 18:40:18,548-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][90/358] lr: 0.001000	batch_time: 3.964272 (2.919622)	data_time: 2.817204 (1.545123)	rpn_cls_loss: 0.000302 (0.000434)	rpn_loc_loss: 0.037962 (0.044581)	kp_hp_loss: 0.561316 (0.523939)	kp_hm_hp_loss: 0.265337 (0.232841)	kp_hp_offset_loss: 0.222475 (0.222954)	kp_loss: 1.181797 (1.096155)	siammask_loss: 1.227654 (1.150086)	kp_avg_acc: 0.869036 (0.885914)
[2019-08-14 18:40:18,549-rk0-log_helper.py# 97] Progress: 90 / 71600 [0%], Speed: 2.920 s/iter, ETA 2:09:59 (D:H:M)

[2019-08-14 18:40:39,941-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][100/358] lr: 0.001000	batch_time: 1.775905 (2.841470)	data_time: 0.652435 (1.475946)	rpn_cls_loss: 0.000297 (0.000430)	rpn_loc_loss: 0.043847 (0.044669)	kp_hp_loss: 0.530592 (0.525093)	kp_hm_hp_loss: 0.248820 (0.233908)	kp_hp_offset_loss: 0.218070 (0.222851)	kp_loss: 1.121892 (1.098806)	siammask_loss: 1.174804 (1.152839)	kp_avg_acc: 0.868642 (0.884946)
[2019-08-14 18:40:39,943-rk0-log_helper.py# 97] Progress: 100 / 71600 [0%], Speed: 2.841 s/iter, ETA 2:08:26 (D:H:M)

[2019-08-14 18:41:01,151-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][110/358] lr: 0.001000	batch_time: 2.687652 (2.775854)	data_time: 1.528838 (1.408096)	rpn_cls_loss: 0.000381 (0.000433)	rpn_loc_loss: 0.047625 (0.044738)	kp_hp_loss: 0.546161 (0.526277)	kp_hm_hp_loss: 0.275085 (0.235172)	kp_hp_offset_loss: 0.220680 (0.222928)	kp_loss: 1.179468 (1.101963)	siammask_loss: 1.236999 (1.156081)	kp_avg_acc: 0.866425 (0.883996)
[2019-08-14 18:41:01,153-rk0-log_helper.py# 97] Progress: 110 / 71600 [0%], Speed: 2.776 s/iter, ETA 2:07:07 (D:H:M)

[2019-08-14 18:41:22,916-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][120/358] lr: 0.001000	batch_time: 1.225180 (2.725804)	data_time: 0.043466 (1.364645)	rpn_cls_loss: 0.000460 (0.000438)	rpn_loc_loss: 0.047869 (0.044870)	kp_hp_loss: 0.537771 (0.528894)	kp_hm_hp_loss: 0.239023 (0.237811)	kp_hp_offset_loss: 0.222106 (0.222839)	kp_loss: 1.118411 (1.108448)	siammask_loss: 1.176314 (1.162730)	kp_avg_acc: 0.866233 (0.882500)
[2019-08-14 18:41:22,918-rk0-log_helper.py# 97] Progress: 120 / 71600 [0%], Speed: 2.726 s/iter, ETA 2:06:07 (D:H:M)

[2019-08-14 18:41:45,668-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][130/358] lr: 0.001000	batch_time: 3.905490 (2.691043)	data_time: 2.734002 (1.333785)	rpn_cls_loss: 0.000443 (0.000441)	rpn_loc_loss: 0.041852 (0.044927)	kp_hp_loss: 0.559675 (0.530208)	kp_hm_hp_loss: 0.270022 (0.239105)	kp_hp_offset_loss: 0.223015 (0.222833)	kp_loss: 1.187723 (1.111698)	siammask_loss: 1.238388 (1.166051)	kp_avg_acc: 0.871128 (0.881610)
[2019-08-14 18:41:45,669-rk0-log_helper.py# 97] Progress: 130 / 71600 [0%], Speed: 2.691 s/iter, ETA 2:05:25 (D:H:M)

[2019-08-14 18:42:05,294-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][140/358] lr: 0.001000	batch_time: 1.179368 (2.638927)	data_time: 0.043765 (1.285340)	rpn_cls_loss: 0.000288 (0.000437)	rpn_loc_loss: 0.047113 (0.045005)	kp_hp_loss: 0.512719 (0.530294)	kp_hm_hp_loss: 0.242815 (0.239802)	kp_hp_offset_loss: 0.225102 (0.222812)	kp_loss: 1.102044 (1.112810)	siammask_loss: 1.158868 (1.167254)	kp_avg_acc: 0.900250 (0.881419)
[2019-08-14 18:42:05,296-rk0-log_helper.py# 97] Progress: 140 / 71600 [0%], Speed: 2.639 s/iter, ETA 2:04:22 (D:H:M)

[2019-08-14 18:42:27,252-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][150/358] lr: 0.001000	batch_time: 4.082096 (2.609306)	data_time: 2.884751 (1.256842)	rpn_cls_loss: 0.000545 (0.000431)	rpn_loc_loss: 0.042096 (0.044972)	kp_hp_loss: 0.596484 (0.531313)	kp_hm_hp_loss: 0.265910 (0.240378)	kp_hp_offset_loss: 0.221894 (0.222750)	kp_loss: 1.217243 (1.114630)	siammask_loss: 1.268303 (1.169026)	kp_avg_acc: 0.857796 (0.880715)
[2019-08-14 18:42:27,254-rk0-log_helper.py# 97] Progress: 150 / 71600 [0%], Speed: 2.609 s/iter, ETA 2:03:47 (D:H:M)

[2019-08-14 18:42:47,021-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][160/358] lr: 0.001000	batch_time: 1.215382 (2.569697)	data_time: 0.040878 (1.222795)	rpn_cls_loss: 0.000448 (0.000426)	rpn_loc_loss: 0.046237 (0.045056)	kp_hp_loss: 0.554127 (0.532236)	kp_hm_hp_loss: 0.244908 (0.240639)	kp_hp_offset_loss: 0.225802 (0.222626)	kp_loss: 1.147290 (1.115821)	siammask_loss: 1.203222 (1.170314)	kp_avg_acc: 0.859115 (0.880536)
[2019-08-14 18:42:47,030-rk0-log_helper.py# 97] Progress: 160 / 71600 [0%], Speed: 2.570 s/iter, ETA 2:02:59 (D:H:M)

[2019-08-14 18:43:10,460-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][170/358] lr: 0.001000	batch_time: 2.677180 (2.556340)	data_time: 1.508271 (1.212621)	rpn_cls_loss: 0.000829 (0.000435)	rpn_loc_loss: 0.044844 (0.045064)	kp_hp_loss: 0.515486 (0.532181)	kp_hm_hp_loss: 0.254622 (0.240719)	kp_hp_offset_loss: 0.221397 (0.222535)	kp_loss: 1.118817 (1.115795)	siammask_loss: 1.173458 (1.170307)	kp_avg_acc: 0.865848 (0.880575)
[2019-08-14 18:43:10,461-rk0-log_helper.py# 97] Progress: 170 / 71600 [0%], Speed: 2.556 s/iter, ETA 2:02:43 (D:H:M)

[2019-08-14 18:43:33,382-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][180/358] lr: 0.001000	batch_time: 1.239453 (2.541598)	data_time: 0.036147 (1.201244)	rpn_cls_loss: 0.000548 (0.000433)	rpn_loc_loss: 0.044662 (0.045103)	kp_hp_loss: 0.563133 (0.532750)	kp_hm_hp_loss: 0.268664 (0.241259)	kp_hp_offset_loss: 0.221364 (0.222573)	kp_loss: 1.187493 (1.117212)	siammask_loss: 1.241636 (1.171769)	kp_avg_acc: 0.881003 (0.880354)
[2019-08-14 18:43:33,383-rk0-log_helper.py# 97] Progress: 180 / 71600 [0%], Speed: 2.542 s/iter, ETA 2:02:25 (D:H:M)

[2019-08-14 18:44:00,933-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][190/358] lr: 0.001000	batch_time: 5.119912 (2.552765)	data_time: 3.085351 (1.205063)	rpn_cls_loss: 0.000373 (0.000439)	rpn_loc_loss: 0.048789 (0.045208)	kp_hp_loss: 0.526510 (0.533650)	kp_hm_hp_loss: 0.249892 (0.242621)	kp_hp_offset_loss: 0.223674 (0.222665)	kp_loss: 1.125022 (1.120245)	siammask_loss: 1.183942 (1.174934)	kp_avg_acc: 0.871701 (0.879668)
[2019-08-14 18:44:01,001-rk0-log_helper.py# 97] Progress: 190 / 71600 [0%], Speed: 2.553 s/iter, ETA 2:02:38 (D:H:M)

[2019-08-14 18:44:27,885-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][200/358] lr: 0.001000	batch_time: 1.206820 (2.559824)	data_time: 0.049682 (1.214866)	rpn_cls_loss: 0.000503 (0.000441)	rpn_loc_loss: 0.043876 (0.045223)	kp_hp_loss: 0.562791 (0.534132)	kp_hm_hp_loss: 0.258037 (0.243469)	kp_hp_offset_loss: 0.221869 (0.222646)	kp_loss: 1.171717 (1.121981)	siammask_loss: 1.224871 (1.176690)	kp_avg_acc: 0.877174 (0.879287)
[2019-08-14 18:44:27,984-rk0-log_helper.py# 97] Progress: 200 / 71600 [0%], Speed: 2.560 s/iter, ETA 2:02:46 (D:H:M)

[2019-08-14 18:44:55,885-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][210/358] lr: 0.001000	batch_time: 3.667174 (2.571204)	data_time: 2.520948 (1.229168)	rpn_cls_loss: 0.000964 (0.000441)	rpn_loc_loss: 0.049814 (0.045158)	kp_hp_loss: 0.547617 (0.534300)	kp_hm_hp_loss: 0.263576 (0.244130)	kp_hp_offset_loss: 0.229998 (0.222701)	kp_loss: 1.172979 (1.123196)	siammask_loss: 1.233720 (1.177827)	kp_avg_acc: 0.860551 (0.878646)
[2019-08-14 18:44:55,886-rk0-log_helper.py# 97] Progress: 210 / 71600 [0%], Speed: 2.571 s/iter, ETA 2:02:59 (D:H:M)

[2019-08-14 18:45:16,544-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][220/358] lr: 0.001000	batch_time: 1.150833 (2.548182)	data_time: 0.035712 (1.210431)	rpn_cls_loss: 0.000321 (0.000441)	rpn_loc_loss: 0.046724 (0.045231)	kp_hp_loss: 0.580760 (0.535034)	kp_hm_hp_loss: 0.277171 (0.244825)	kp_hp_offset_loss: 0.223913 (0.222795)	kp_loss: 1.220429 (1.125067)	siammask_loss: 1.276819 (1.179785)	kp_avg_acc: 0.859099 (0.878234)
[2019-08-14 18:45:16,551-rk0-log_helper.py# 97] Progress: 220 / 71600 [0%], Speed: 2.548 s/iter, ETA 2:02:31 (D:H:M)

[2019-08-14 18:45:48,195-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][230/358] lr: 0.001000	batch_time: 3.623672 (2.574950)	data_time: 1.071046 (1.233392)	rpn_cls_loss: 0.000275 (0.000440)	rpn_loc_loss: 0.046313 (0.045164)	kp_hp_loss: 0.515721 (0.535136)	kp_hm_hp_loss: 0.236658 (0.244968)	kp_hp_offset_loss: 0.219648 (0.222790)	kp_loss: 1.090355 (1.125377)	siammask_loss: 1.146207 (1.180015)	kp_avg_acc: 0.872573 (0.878132)
[2019-08-14 18:45:48,435-rk0-log_helper.py# 97] Progress: 230 / 71600 [0%], Speed: 2.575 s/iter, ETA 2:03:02 (D:H:M)

[2019-08-14 18:46:19,208-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][240/358] lr: 0.001000	batch_time: 1.187244 (2.596822)	data_time: 0.034831 (1.253370)	rpn_cls_loss: 0.000428 (0.000443)	rpn_loc_loss: 0.048239 (0.045272)	kp_hp_loss: 0.592255 (0.536128)	kp_hm_hp_loss: 0.315767 (0.246553)	kp_hp_offset_loss: 0.223491 (0.222869)	kp_loss: 1.289396 (1.128825)	siammask_loss: 1.347711 (1.183595)	kp_avg_acc: 0.852056 (0.877303)
[2019-08-14 18:46:19,209-rk0-log_helper.py# 97] Progress: 240 / 71600 [0%], Speed: 2.597 s/iter, ETA 2:03:28 (D:H:M)

[2019-08-14 18:46:44,643-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][250/358] lr: 0.001000	batch_time: 1.162618 (2.594642)	data_time: 0.068527 (1.251902)	rpn_cls_loss: 0.000311 (0.000443)	rpn_loc_loss: 0.044970 (0.045266)	kp_hp_loss: 0.598243 (0.536557)	kp_hm_hp_loss: 0.284276 (0.247338)	kp_hp_offset_loss: 0.223034 (0.222926)	kp_loss: 1.247692 (1.130490)	siammask_loss: 1.301966 (1.185253)	kp_avg_acc: 0.856326 (0.876786)
[2019-08-14 18:46:44,645-rk0-log_helper.py# 97] Progress: 250 / 71600 [0%], Speed: 2.595 s/iter, ETA 2:03:25 (D:H:M)

[2019-08-14 18:47:06,618-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][260/358] lr: 0.001000	batch_time: 1.201715 (2.579313)	data_time: 0.035625 (1.239088)	rpn_cls_loss: 0.000408 (0.000443)	rpn_loc_loss: 0.039405 (0.045272)	kp_hp_loss: 0.531771 (0.537035)	kp_hm_hp_loss: 0.231944 (0.247955)	kp_hp_offset_loss: 0.219812 (0.222907)	kp_loss: 1.099499 (1.131874)	siammask_loss: 1.147193 (1.186644)	kp_avg_acc: 0.893505 (0.876321)
[2019-08-14 18:47:06,619-rk0-log_helper.py# 97] Progress: 260 / 71600 [0%], Speed: 2.579 s/iter, ETA 2:03:06 (D:H:M)

[2019-08-14 19:37:06,175-rk0-trainval_siamrcnn_corr.py#197] 
PyTorch version: 0.4.1.post2
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: CentOS Linux 7 (Core)
GCC version: (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11)
CMake version: version 2.8.12.2

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: 
GPU 0: GeForce GTX 1080 Ti
GPU 1: GeForce GTX 1080 Ti
GPU 2: GeForce GTX 1080 Ti
GPU 3: GeForce GTX 1080 Ti
GPU 4: GeForce GTX 1080 Ti
GPU 5: GeForce GTX 1080 Ti

Nvidia driver version: 410.48
cuDNN version: Could not collect

Versions of relevant libraries:
[pip] Could not collect
[conda] pytorch                   0.4.1           py36_py35_py27__9.0.176_7.1.2_2    pytorch
[conda] torchvision               0.2.1                    py36_1    pytorch
        OpenCV (3.4.3)
[2019-08-14 19:37:06,194-rk0-trainval_siamrcnn_corr.py#198] Namespace(arch='', batch=96, clip=10.0, config='config.json', debug=False, dense_hp=False, epochs=200, hm_hp=True, hm_hp_weight=1.5, hp_weight=1, log='logs/log_0814.txt', log_dir='board/show_0814', lr=0.001, momentum=0.9, mse_loss=False, not_hm_hp=False, not_reg_bbox=False, not_reg_hp_offset=False, off_weight=1, output_size=56, pretrained='./snapshot_0811/checkpoint_e99.pth', print_freq=10, reg_bbox=True, reg_hp_offset=True, reg_loss='l1', resume='', save_dir='snapshot_0814', save_freq=5, start_epoch=0, weight_decay=0.0001, workers=4)
[2019-08-14 19:37:06,212-rk0-trainval_siamrcnn_corr.py#201] config 
{
    "network": {
        "arch": "Custom"
    },
    "hp": {
        "instance_size": 255,
        "base_size": 8
    },
    "lr": {
        "feature_lr_mult": 1.0,
        "rpn_lr_mult": 1.0,
        "mask_lr_mult": 1.0,
        "type": "log",
        "start_lr": 0.01,
        "end_lr": 1e-07,
        "warmup": {
            "start_lr": 0.001,
            "end_lr": 0.01,
            "type": "step",
            "step": 1,
            "epoch": 5
        }
    },
    "loss": {
        "weight": [
            1.0,
            1.2,
            1.0
        ],
        "reg": {
            "loss": "L1Loss"
        },
        "cls": {
            "split": true
        }
    },
    "train_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/train2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 4,
                "scale": 0.05
            },
            "search": {
                "shift": 0.0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0.15
        }
    },
    "val_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/val2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 0,
                "scale": 0.0
            },
            "search": {
                "shift": 0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0
        }
    },
    "anchors": {
        "stride": 8,
        "ratios": [
            0.33,
            0.5,
            1,
            2,
            3
        ],
        "scales": [
            8
        ],
        "round_dight": 0
    },
    "mask": {},
    "clip": {
        "feature": 10.0,
        "rpn": 10.0,
        "split": false
    }
}
[2019-08-14 19:37:06,341-rk0-trainval_siamrcnn_corr.py#144] build train dataset
[2019-08-14 19:37:06,440-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/train2017_pose_siamfc.json
[2019-08-14 19:37:10,120-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/train2017_pose_siamfc.json loaded.
[2019-08-14 19:37:10,157-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [45900/45900] path {}.{}.{}.jpg
[2019-08-14 19:37:10,226-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 19:37:10,226-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 19:37:10,229-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0.15,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 45900
}
[2019-08-14 19:37:10,297-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 19:37:10,298-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 19:37:10,299-rk0-trainval_siamrcnn_corr.py#148] build val dataset
[2019-08-14 19:37:10,315-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/val2017_pose_siamfc.json
[2019-08-14 19:37:10,469-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/val2017_pose_siamfc.json loaded.
[2019-08-14 19:37:10,472-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [1899/1899] path {}.{}.{}.jpg
[2019-08-14 19:37:10,475-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 19:37:10,476-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 19:37:10,476-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 1899
}
[2019-08-14 19:37:10,480-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 19:37:10,480-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 19:37:10,481-rk0-trainval_siamrcnn_corr.py#159] build dataset done
[2019-08-14 19:37:35,428-rk0-load_helper.py# 40] load pretrained model from ../resnet.model
[2019-08-14 19:37:37,314-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 19:37:37,316-rk0-load_helper.py# 13] [Warning] missing keys: {'layer1.0.bn3.num_batches_tracked', 'bn1.num_batches_tracked', 'layer2.1.bn3.num_batches_tracked', 'layer1.2.bn3.num_batches_tracked', 'layer3.0.bn3.num_batches_tracked', 'layer2.2.bn2.num_batches_tracked', 'layer3.1.bn1.num_batches_tracked', 'layer3.3.bn3.num_batches_tracked', 'layer1.0.downsample.1.num_batches_tracked', 'layer3.0.downsample.1.num_batches_tracked', 'layer3.5.bn3.num_batches_tracked', 'layer3.1.bn3.num_batches_tracked', 'layer2.1.bn1.num_batches_tracked', 'layer1.0.bn2.num_batches_tracked', 'layer3.3.bn1.num_batches_tracked', 'layer2.0.bn1.num_batches_tracked', 'layer3.0.bn2.num_batches_tracked', 'layer3.3.bn2.num_batches_tracked', 'layer3.2.bn2.num_batches_tracked', 'layer3.0.bn1.num_batches_tracked', 'layer2.2.bn1.num_batches_tracked', 'layer3.5.bn2.num_batches_tracked', 'layer1.2.bn1.num_batches_tracked', 'layer2.1.bn2.num_batches_tracked', 'layer1.0.bn1.num_batches_tracked', 'layer3.5.bn1.num_batches_tracked', 'layer3.4.bn1.num_batches_tracked', 'layer1.2.bn2.num_batches_tracked', 'layer2.3.bn2.num_batches_tracked', 'layer3.4.bn2.num_batches_tracked', 'layer2.3.bn1.num_batches_tracked', 'layer3.1.bn2.num_batches_tracked', 'layer1.1.bn2.num_batches_tracked', 'layer2.0.downsample.1.num_batches_tracked', 'layer3.4.bn3.num_batches_tracked', 'layer2.0.bn3.num_batches_tracked', 'layer2.3.bn3.num_batches_tracked', 'layer1.1.bn3.num_batches_tracked', 'layer2.2.bn3.num_batches_tracked', 'layer3.2.bn3.num_batches_tracked', 'layer2.0.bn2.num_batches_tracked', 'layer1.1.bn1.num_batches_tracked', 'layer3.2.bn1.num_batches_tracked'}
[2019-08-14 19:37:37,317-rk0-load_helper.py# 14] missing keys:43
[2019-08-14 19:37:37,318-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'layer4.0.bn3.running_mean', 'layer4.1.conv2.weight', 'layer4.0.bn2.running_mean', 'layer4.0.conv1.weight', 'layer4.0.conv2.weight', 'layer4.0.bn1.weight', 'layer4.0.bn2.weight', 'layer4.2.conv1.weight', 'layer4.1.bn3.running_mean', 'layer4.2.bn1.running_mean', 'layer4.1.bn3.weight', 'layer4.0.bn2.running_var', 'layer4.2.bn3.bias', 'layer4.0.downsample.1.running_mean', 'layer4.0.bn1.bias', 'layer4.0.bn2.bias', 'layer4.0.conv3.weight', 'layer4.2.conv3.weight', 'layer4.0.downsample.1.running_var', 'layer4.1.conv3.weight', 'layer4.2.bn2.weight', 'layer4.0.downsample.1.weight', 'layer4.1.bn3.bias', 'layer4.0.bn3.weight', 'layer4.1.conv1.weight', 'layer4.2.bn3.running_var', 'layer4.2.bn3.weight', 'layer4.1.bn2.running_mean', 'layer4.1.bn1.bias', 'layer4.0.bn3.running_var', 'layer4.2.conv2.weight', 'layer4.1.bn1.weight', 'layer4.0.bn1.running_mean', 'layer4.2.bn3.running_mean', 'layer4.1.bn3.running_var', 'layer4.0.bn3.bias', 'layer4.2.bn2.running_mean', 'layer4.2.bn2.bias', 'layer4.0.bn1.running_var', 'layer4.1.bn1.running_mean', 'layer4.1.bn1.running_var', 'layer4.1.bn2.weight', 'layer4.0.downsample.0.weight', 'layer4.0.downsample.1.bias', 'layer4.1.bn2.bias', 'layer4.2.bn1.weight', 'layer4.2.bn2.running_var', 'layer4.2.bn1.running_var', 'layer4.1.bn2.running_var', 'layer4.2.bn1.bias'}
[2019-08-14 19:37:37,319-rk0-load_helper.py# 17] unused checkpoint keys:50
[2019-08-14 19:37:37,320-rk0-load_helper.py# 18] used keys:215
[2019-08-14 19:37:37,345-rk0-features.py# 66] Current training 0 layers:
	
[2019-08-14 19:37:37,347-rk0-features.py# 66] Current training 3 layers:
	
[2019-08-14 19:37:37,524-rk0-trainval_siamrcnn_corr.py#219] Custom(
  (dpooling): ModulatedDeformRoIPoolingPack(
    (offset_fc): Sequential(
      (0): Linear(in_features=1568, out_features=1024, bias=True)
      (1): ReLU(inplace)
      (2): Linear(in_features=1024, out_features=1024, bias=True)
      (3): ReLU(inplace)
      (4): Linear(in_features=1024, out_features=98, bias=True)
    )
    (mask_fc): Sequential(
      (0): Linear(in_features=1568, out_features=1024, bias=True)
      (1): ReLU(inplace)
      (2): Linear(in_features=1024, out_features=49, bias=True)
      (3): Sigmoid()
    )
  )
  (upSample): UpsamplingBilinear2d(size=[127, 127], mode=bilinear)
  (kp_criterion): PoseLoss(
    (crit_hm_hp): FocalLoss()
    (crit_kp): RegWeightedL1Loss()
    (crit_reg): RegL1Loss()
  )
  (features): ResDown(
    (features): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer2): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer3): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (4): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (5): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
    )
    (downsample): ResDownS(
      (downsample): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (rpn_model): UP(
    (cls): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 10, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (loc): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 20, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (pose_corr): PoseCorr(
    (kp): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (kp_model): Center_pose_head(
    (deconv_layers_new): Sequential(
      (0): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace)
      (3): ConvTranspose2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace)
      (6): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU(inplace)
      (9): ConvTranspose2d(256, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (10): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (11): ReLU(inplace)
      (12): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (13): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (14): ReLU(inplace)
      (15): ConvTranspose2d(64, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (16): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (17): ReLU(inplace)
    )
    (hps): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 34, kernel_size=(1, 1), stride=(1, 1))
    )
    (hm_hp): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 17, kernel_size=(1, 1), stride=(1, 1))
    )
    (hp_offset): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[2019-08-14 19:37:37,531-rk0-load_helper.py# 40] load pretrained model from ./snapshot_0811/checkpoint_e99.pth
[2019-08-14 19:37:39,470-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 19:37:39,474-rk0-load_helper.py# 13] [Warning] missing keys: {'dpooling.offset_fc.2.bias', 'kp_model.deconv_layers_new.0.conv_offset_mask.weight', 'dpooling.mask_fc.0.weight', 'kp_model.deconv_layers_new.6.conv_offset_mask.weight', 'kp_model.deconv_layers_new.6.bias', 'kp_model.deconv_layers_new.12.bias', 'dpooling.offset_fc.4.weight', 'dpooling.offset_fc.0.bias', 'kp_model.deconv_layers_new.12.conv_offset_mask.weight', 'dpooling.offset_fc.0.weight', 'kp_model.deconv_layers_new.0.conv_offset_mask.bias', 'dpooling.mask_fc.2.bias', 'kp_model.deconv_layers_new.0.bias', 'dpooling.mask_fc.2.weight', 'kp_model.deconv_layers_new.6.conv_offset_mask.bias', 'dpooling.offset_fc.2.weight', 'dpooling.mask_fc.0.bias', 'dpooling.offset_fc.4.bias', 'kp_model.deconv_layers_new.12.conv_offset_mask.bias'}
[2019-08-14 19:37:39,475-rk0-load_helper.py# 14] missing keys:19
[2019-08-14 19:37:39,476-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'features.features.layer4.2.bn2.bias', 'features.features.layer4.2.bn3.num_batches_tracked', 'features.features.layer4.2.bn3.weight', 'features.features.layer4.0.downsample.1.weight', 'features.features.layer4.0.conv1.weight', 'features.features.layer4.1.bn3.weight', 'features.features.layer4.2.bn1.running_var', 'features.downsample_p4.downsample.1.weight', 'features.features.layer4.2.bn2.weight', 'features.features.layer4.1.bn2.num_batches_tracked', 'features.features.layer4.0.bn3.weight', 'features.features.layer4.2.conv1.weight', 'features.downsample_p4.downsample.1.bias', 'features.features.layer4.0.bn2.running_var', 'features.features.layer4.1.bn3.bias', 'features.features.layer4.2.bn1.running_mean', 'features.features.layer4.0.bn2.bias', 'features.features.layer4.2.bn2.running_var', 'features.features.layer4.0.bn2.running_mean', 'features.features.layer4.1.bn2.weight', 'features.features.layer4.1.bn3.running_var', 'features.features.layer4.2.bn1.bias', 'features.features.layer4.1.bn1.running_var', 'features.features.layer4.1.conv3.weight', 'features.features.layer4.2.bn3.running_var', 'features.features.layer4.1.bn1.num_batches_tracked', 'features.features.layer4.0.bn1.num_batches_tracked', 'features.features.layer4.1.bn3.num_batches_tracked', 'features.features.layer4.2.bn1.num_batches_tracked', 'features.features.layer4.2.bn2.running_mean', 'features.features.layer4.0.bn3.running_mean', 'features.features.layer4.2.conv2.weight', 'features.features.layer4.0.conv2.weight', 'features.features.layer4.0.bn3.num_batches_tracked', 'features.features.layer4.0.bn1.running_mean', 'features.features.layer4.1.conv1.weight', 'features.features.layer4.0.bn1.weight', 'features.features.layer4.0.downsample.0.weight', 'features.features.layer4.0.downsample.1.bias', 'features.downsample_p4.downsample.1.running_mean', 'features.features.layer4.2.conv3.weight', 'features.features.layer4.2.bn3.running_mean', 'features.features.layer4.0.bn1.bias', 'features.features.layer4.0.downsample.1.running_var', 'features.features.layer4.1.bn2.running_mean', 'features.features.layer4.0.bn2.num_batches_tracked', 'features.features.layer4.1.bn1.bias', 'features.features.layer4.1.bn1.weight', 'features.features.layer4.0.bn2.weight', 'features.features.layer4.1.bn3.running_mean', 'features.features.layer4.0.bn3.bias', 'features.features.layer4.1.conv2.weight', 'features.features.layer4.0.downsample.1.num_batches_tracked', 'features.features.layer4.1.bn2.bias', 'features.features.layer4.1.bn2.running_var', 'features.features.layer4.0.bn3.running_var', 'features.downsample_p4.downsample.0.weight', 'features.features.layer4.2.bn1.weight', 'features.features.layer4.1.bn1.running_mean', 'features.downsample_p4.downsample.1.running_var', 'features.features.layer4.0.bn1.running_var', 'features.features.layer4.2.bn2.num_batches_tracked', 'features.features.layer4.0.downsample.1.running_mean', 'features.downsample_p4.downsample.1.num_batches_tracked', 'features.features.layer4.2.bn3.bias', 'features.features.layer4.0.conv3.weight'}
[2019-08-14 19:37:39,477-rk0-load_helper.py# 17] unused checkpoint keys:66
[2019-08-14 19:37:39,478-rk0-load_helper.py# 18] used keys:372
[2019-08-14 19:37:39,567-rk0-trainval_siamrcnn_corr.py#237] (WarmUPScheduler) lr spaces: 
[1.00000000e-03 1.58489319e-03 2.51188643e-03 3.98107171e-03
 6.30957344e-03 1.00000000e-02 9.42381613e-03 8.88083105e-03
 8.36913190e-03 7.88691602e-03 7.43248464e-03 7.00423687e-03
 6.60066404e-03 6.22034443e-03 5.86193822e-03 5.52418280e-03
 5.20588830e-03 4.90593341e-03 4.62326145e-03 4.35687658e-03
 4.10584038e-03 3.86926848e-03 3.64632748e-03 3.43623197e-03
 3.23824183e-03 3.05165956e-03 2.87582786e-03 2.71012730e-03
 2.55397414e-03 2.40681827e-03 2.26814128e-03 2.13745464e-03
 2.01429795e-03 1.89823735e-03 1.78886398e-03 1.68579252e-03
 1.58865988e-03 1.49712386e-03 1.41086200e-03 1.32957041e-03
 1.25296271e-03 1.18076902e-03 1.11273501e-03 1.04862101e-03
 9.88201163e-04 9.31262607e-04 8.77604758e-04 8.27038588e-04
 7.79385959e-04 7.34478997e-04 6.92159502e-04 6.52278389e-04
 6.14695160e-04 5.79277417e-04 5.45900387e-04 5.14446487e-04
 4.84804911e-04 4.56871234e-04 4.30547051e-04 4.05739624e-04
 3.82361562e-04 3.60330505e-04 3.39568843e-04 3.20003434e-04
 3.01565353e-04 2.84189644e-04 2.67815095e-04 2.52384021e-04
 2.37842061e-04 2.24137985e-04 2.11223516e-04 1.99053158e-04
 1.87584036e-04 1.76775747e-04 1.66590213e-04 1.56991554e-04
 1.47945954e-04 1.39421547e-04 1.31388302e-04 1.23817920e-04
 1.16683732e-04 1.09960603e-04 1.03624851e-04 9.76541539e-05
 9.20274791e-05 8.67250043e-05 8.17280495e-05 7.70190111e-05
 7.25813000e-05 6.83992826e-05 6.44582263e-05 6.07442473e-05
 5.72442617e-05 5.39459397e-05 5.08376617e-05 4.79084777e-05
 4.51480685e-05 4.25467096e-05 4.00952369e-05 3.77850140e-05
 3.56079025e-05 3.35562326e-05 3.16227766e-05 2.98007232e-05
 2.80836536e-05 2.64655188e-05 2.49406183e-05 2.35035802e-05
 2.21493418e-05 2.08731324e-05 1.96704562e-05 1.85370763e-05
 1.74689999e-05 1.64624643e-05 1.55139236e-05 1.46200364e-05
 1.37776535e-05 1.29838073e-05 1.22357013e-05 1.15306999e-05
 1.08663196e-05 1.02402198e-05 9.65019485e-06 9.09416619e-06
 8.57017501e-06 8.07637535e-06 7.61102764e-06 7.17249250e-06
 6.75922506e-06 6.36976942e-06 6.00275358e-06 5.65688460e-06
 5.33094404e-06 5.02378365e-06 4.73432134e-06 4.46153738e-06
 4.20447080e-06 3.96221597e-06 3.73391948e-06 3.51877706e-06
 3.31603081e-06 3.12496646e-06 2.94491094e-06 2.77522992e-06
 2.61532565e-06 2.46463481e-06 2.32262652e-06 2.18880053e-06
 2.06268538e-06 1.94383677e-06 1.83183603e-06 1.72628860e-06
 1.62682263e-06 1.53308774e-06 1.44475370e-06 1.36150932e-06
 1.28306135e-06 1.20913342e-06 1.13946511e-06 1.07381097e-06
 1.01193971e-06 9.53633378e-07 8.98686561e-07 8.46905692e-07
 7.98108352e-07 7.52122637e-07 7.08786544e-07 6.67947407e-07
 6.29461355e-07 5.93192807e-07 5.59013995e-07 5.26804510e-07
 4.96450884e-07 4.67846185e-07 4.40889643e-07 4.15486293e-07
 3.91546643e-07 3.68986357e-07 3.47725959e-07 3.27690550e-07
 3.08809549e-07 2.91016441e-07 2.74248544e-07 2.58446785e-07
 2.43555498e-07 2.29522223e-07 2.16297523e-07 2.03834809e-07
 1.92090176e-07 1.81022250e-07 1.70592040e-07 1.60762802e-07
 1.51499909e-07 1.42770728e-07 1.34544509e-07 1.26792272e-07
 1.19486706e-07 1.12602075e-07 1.06114125e-07 1.00000000e-07]
[2019-08-14 19:37:39,648-rk0-trainval_siamrcnn_corr.py#239] model prepare done
[2019-08-14 19:37:39,653-rk0-trainval_siamrcnn_corr.py#296] train epoch:0
[2019-08-14 19:42:05,244-rk0-trainval_siamrcnn_corr.py#197] 
PyTorch version: 0.4.1.post2
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: CentOS Linux 7 (Core)
GCC version: (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11)
CMake version: version 2.8.12.2

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: 
GPU 0: GeForce GTX 1080 Ti
GPU 1: GeForce GTX 1080 Ti
GPU 2: GeForce GTX 1080 Ti
GPU 3: GeForce GTX 1080 Ti
GPU 4: GeForce GTX 1080 Ti
GPU 5: GeForce GTX 1080 Ti

Nvidia driver version: 410.48
cuDNN version: Could not collect

Versions of relevant libraries:
[pip] Could not collect
[conda] pytorch                   0.4.1           py36_py35_py27__9.0.176_7.1.2_2    pytorch
[conda] torchvision               0.2.1                    py36_1    pytorch
        OpenCV (3.4.3)
[2019-08-14 19:42:05,246-rk0-trainval_siamrcnn_corr.py#198] Namespace(arch='', batch=96, clip=10.0, config='config.json', debug=False, dense_hp=False, epochs=200, hm_hp=True, hm_hp_weight=1.5, hp_weight=1, log='logs/log_0814.txt', log_dir='board/show_0814', lr=0.001, momentum=0.9, mse_loss=False, not_hm_hp=False, not_reg_bbox=False, not_reg_hp_offset=False, off_weight=1, output_size=56, pretrained='./snapshot_0811/checkpoint_e99.pth', print_freq=10, reg_bbox=True, reg_hp_offset=True, reg_loss='l1', resume='', save_dir='snapshot_0814', save_freq=5, start_epoch=0, weight_decay=0.0001, workers=4)
[2019-08-14 19:42:05,248-rk0-trainval_siamrcnn_corr.py#201] config 
{
    "network": {
        "arch": "Custom"
    },
    "hp": {
        "instance_size": 255,
        "base_size": 8
    },
    "lr": {
        "feature_lr_mult": 1.0,
        "rpn_lr_mult": 1.0,
        "mask_lr_mult": 1.0,
        "type": "log",
        "start_lr": 0.01,
        "end_lr": 1e-07,
        "warmup": {
            "start_lr": 0.001,
            "end_lr": 0.01,
            "type": "step",
            "step": 1,
            "epoch": 5
        }
    },
    "loss": {
        "weight": [
            1.0,
            1.2,
            1.0
        ],
        "reg": {
            "loss": "L1Loss"
        },
        "cls": {
            "split": true
        }
    },
    "train_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/train2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 4,
                "scale": 0.05
            },
            "search": {
                "shift": 0.0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0.15
        }
    },
    "val_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/val2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 0,
                "scale": 0.0
            },
            "search": {
                "shift": 0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0
        }
    },
    "anchors": {
        "stride": 8,
        "ratios": [
            0.33,
            0.5,
            1,
            2,
            3
        ],
        "scales": [
            8
        ],
        "round_dight": 0
    },
    "mask": {},
    "clip": {
        "feature": 10.0,
        "rpn": 10.0,
        "split": false
    }
}
[2019-08-14 19:42:05,252-rk0-trainval_siamrcnn_corr.py#144] build train dataset
[2019-08-14 19:42:05,255-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/train2017_pose_siamfc.json
[2019-08-14 19:42:08,106-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/train2017_pose_siamfc.json loaded.
[2019-08-14 19:42:08,141-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [45900/45900] path {}.{}.{}.jpg
[2019-08-14 19:42:08,207-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 19:42:08,208-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 19:42:08,211-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0.15,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 45900
}
[2019-08-14 19:42:08,276-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 19:42:08,277-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 19:42:08,278-rk0-trainval_siamrcnn_corr.py#148] build val dataset
[2019-08-14 19:42:08,279-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/val2017_pose_siamfc.json
[2019-08-14 19:42:08,372-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/val2017_pose_siamfc.json loaded.
[2019-08-14 19:42:08,375-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [1899/1899] path {}.{}.{}.jpg
[2019-08-14 19:42:08,378-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 19:42:08,379-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 19:42:08,380-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 1899
}
[2019-08-14 19:42:08,383-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 19:42:08,384-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 19:42:08,384-rk0-trainval_siamrcnn_corr.py#159] build dataset done
[2019-08-14 19:42:13,087-rk0-load_helper.py# 40] load pretrained model from ../resnet.model
[2019-08-14 19:42:13,528-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 19:42:13,530-rk0-load_helper.py# 13] [Warning] missing keys: {'layer2.1.bn3.num_batches_tracked', 'layer1.0.bn1.num_batches_tracked', 'layer1.0.downsample.1.num_batches_tracked', 'layer2.1.bn1.num_batches_tracked', 'layer3.1.bn2.num_batches_tracked', 'layer3.5.bn3.num_batches_tracked', 'layer3.2.bn1.num_batches_tracked', 'layer3.3.bn1.num_batches_tracked', 'layer2.3.bn2.num_batches_tracked', 'layer1.2.bn2.num_batches_tracked', 'layer2.1.bn2.num_batches_tracked', 'layer2.2.bn3.num_batches_tracked', 'layer3.5.bn2.num_batches_tracked', 'layer2.0.bn1.num_batches_tracked', 'layer2.0.bn2.num_batches_tracked', 'layer3.2.bn2.num_batches_tracked', 'layer2.0.bn3.num_batches_tracked', 'layer3.4.bn3.num_batches_tracked', 'layer3.0.bn3.num_batches_tracked', 'layer2.2.bn1.num_batches_tracked', 'layer1.1.bn3.num_batches_tracked', 'bn1.num_batches_tracked', 'layer3.4.bn1.num_batches_tracked', 'layer3.0.downsample.1.num_batches_tracked', 'layer3.1.bn3.num_batches_tracked', 'layer1.0.bn2.num_batches_tracked', 'layer1.0.bn3.num_batches_tracked', 'layer1.1.bn1.num_batches_tracked', 'layer2.2.bn2.num_batches_tracked', 'layer3.3.bn3.num_batches_tracked', 'layer3.0.bn2.num_batches_tracked', 'layer3.3.bn2.num_batches_tracked', 'layer3.0.bn1.num_batches_tracked', 'layer3.2.bn3.num_batches_tracked', 'layer1.2.bn1.num_batches_tracked', 'layer3.4.bn2.num_batches_tracked', 'layer1.1.bn2.num_batches_tracked', 'layer3.1.bn1.num_batches_tracked', 'layer2.0.downsample.1.num_batches_tracked', 'layer3.5.bn1.num_batches_tracked', 'layer2.3.bn3.num_batches_tracked', 'layer1.2.bn3.num_batches_tracked', 'layer2.3.bn1.num_batches_tracked'}
[2019-08-14 19:42:13,531-rk0-load_helper.py# 14] missing keys:43
[2019-08-14 19:42:13,532-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'layer4.0.downsample.0.weight', 'layer4.0.downsample.1.running_mean', 'layer4.2.bn3.bias', 'layer4.1.bn1.running_mean', 'layer4.2.bn1.bias', 'layer4.0.bn1.bias', 'layer4.2.bn3.weight', 'layer4.1.bn3.bias', 'layer4.0.bn2.weight', 'layer4.1.conv2.weight', 'layer4.1.bn1.running_var', 'layer4.1.bn2.running_var', 'layer4.1.bn3.weight', 'layer4.2.conv2.weight', 'layer4.2.bn2.weight', 'layer4.0.downsample.1.running_var', 'layer4.0.bn3.running_var', 'layer4.0.conv2.weight', 'layer4.1.bn2.bias', 'layer4.2.bn2.bias', 'layer4.1.bn1.weight', 'layer4.1.bn1.bias', 'layer4.0.bn1.running_mean', 'layer4.1.conv1.weight', 'layer4.0.bn2.running_mean', 'layer4.2.conv3.weight', 'layer4.1.bn3.running_mean', 'layer4.2.bn3.running_mean', 'layer4.2.bn1.running_var', 'layer4.2.bn1.weight', 'layer4.0.downsample.1.bias', 'layer4.2.conv1.weight', 'layer4.0.conv3.weight', 'layer4.0.bn2.bias', 'layer4.0.conv1.weight', 'layer4.0.bn2.running_var', 'layer4.2.bn1.running_mean', 'layer4.2.bn2.running_var', 'layer4.1.bn3.running_var', 'layer4.0.bn1.weight', 'layer4.2.bn3.running_var', 'layer4.0.bn3.bias', 'layer4.1.bn2.running_mean', 'layer4.2.bn2.running_mean', 'layer4.0.bn1.running_var', 'layer4.1.conv3.weight', 'layer4.1.bn2.weight', 'layer4.0.downsample.1.weight', 'layer4.0.bn3.weight', 'layer4.0.bn3.running_mean'}
[2019-08-14 19:42:13,533-rk0-load_helper.py# 17] unused checkpoint keys:50
[2019-08-14 19:42:13,534-rk0-load_helper.py# 18] used keys:215
[2019-08-14 19:42:13,558-rk0-features.py# 66] Current training 0 layers:
	
[2019-08-14 19:42:13,560-rk0-features.py# 66] Current training 3 layers:
	
[2019-08-14 19:42:13,751-rk0-trainval_siamrcnn_corr.py#219] Custom(
  (dpooling): ModulatedDeformRoIPoolingPack(
    (offset_fc): Sequential(
      (0): Linear(in_features=1568, out_features=1024, bias=True)
      (1): ReLU(inplace)
      (2): Linear(in_features=1024, out_features=1024, bias=True)
      (3): ReLU(inplace)
      (4): Linear(in_features=1024, out_features=98, bias=True)
    )
    (mask_fc): Sequential(
      (0): Linear(in_features=1568, out_features=1024, bias=True)
      (1): ReLU(inplace)
      (2): Linear(in_features=1024, out_features=49, bias=True)
      (3): Sigmoid()
    )
  )
  (upSample): UpsamplingBilinear2d(size=[127, 127], mode=bilinear)
  (kp_criterion): PoseLoss(
    (crit_hm_hp): FocalLoss()
    (crit_kp): RegWeightedL1Loss()
    (crit_reg): RegL1Loss()
  )
  (features): ResDown(
    (features): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer2): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer3): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (4): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (5): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
    )
    (downsample): ResDownS(
      (downsample): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (rpn_model): UP(
    (cls): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 10, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (loc): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 20, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (pose_corr): PoseCorr(
    (kp): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (kp_model): Center_pose_head(
    (deconv_layers_new): Sequential(
      (0): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace)
      (3): ConvTranspose2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace)
      (6): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU(inplace)
      (9): ConvTranspose2d(256, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (10): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (11): ReLU(inplace)
      (12): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (13): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (14): ReLU(inplace)
      (15): ConvTranspose2d(64, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (16): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (17): ReLU(inplace)
    )
    (hps): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 34, kernel_size=(1, 1), stride=(1, 1))
    )
    (hm_hp): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 17, kernel_size=(1, 1), stride=(1, 1))
    )
    (hp_offset): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[2019-08-14 19:42:13,760-rk0-load_helper.py# 40] load pretrained model from ./snapshot_0811/checkpoint_e99.pth
[2019-08-14 19:42:14,174-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 19:42:14,176-rk0-load_helper.py# 13] [Warning] missing keys: {'kp_model.deconv_layers_new.0.conv_offset_mask.bias', 'kp_model.deconv_layers_new.0.conv_offset_mask.weight', 'dpooling.offset_fc.4.bias', 'dpooling.mask_fc.0.weight', 'kp_model.deconv_layers_new.6.bias', 'kp_model.deconv_layers_new.12.conv_offset_mask.weight', 'dpooling.offset_fc.2.weight', 'kp_model.deconv_layers_new.6.conv_offset_mask.weight', 'dpooling.offset_fc.0.bias', 'dpooling.mask_fc.2.weight', 'dpooling.offset_fc.0.weight', 'kp_model.deconv_layers_new.6.conv_offset_mask.bias', 'kp_model.deconv_layers_new.12.conv_offset_mask.bias', 'kp_model.deconv_layers_new.12.bias', 'dpooling.mask_fc.0.bias', 'dpooling.mask_fc.2.bias', 'dpooling.offset_fc.4.weight', 'kp_model.deconv_layers_new.0.bias', 'dpooling.offset_fc.2.bias'}
[2019-08-14 19:42:14,177-rk0-load_helper.py# 14] missing keys:19
[2019-08-14 19:42:14,178-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'features.features.layer4.1.bn2.bias', 'features.features.layer4.2.bn3.weight', 'features.features.layer4.1.bn1.running_mean', 'features.features.layer4.0.downsample.1.running_var', 'features.features.layer4.1.bn2.running_mean', 'features.features.layer4.2.bn2.weight', 'features.features.layer4.1.conv3.weight', 'features.features.layer4.0.bn2.running_mean', 'features.features.layer4.2.bn3.bias', 'features.features.layer4.0.downsample.1.bias', 'features.features.layer4.0.downsample.1.running_mean', 'features.features.layer4.2.bn1.num_batches_tracked', 'features.features.layer4.1.bn2.running_var', 'features.downsample_p4.downsample.0.weight', 'features.downsample_p4.downsample.1.running_mean', 'features.features.layer4.1.bn2.num_batches_tracked', 'features.features.layer4.1.bn1.weight', 'features.features.layer4.1.conv1.weight', 'features.features.layer4.0.bn3.num_batches_tracked', 'features.features.layer4.1.bn1.running_var', 'features.downsample_p4.downsample.1.running_var', 'features.features.layer4.0.downsample.1.weight', 'features.features.layer4.1.bn3.running_var', 'features.features.layer4.2.bn2.num_batches_tracked', 'features.features.layer4.2.bn1.running_var', 'features.features.layer4.0.bn3.bias', 'features.features.layer4.2.bn1.bias', 'features.features.layer4.0.bn2.running_var', 'features.features.layer4.0.conv3.weight', 'features.features.layer4.2.conv2.weight', 'features.features.layer4.1.bn3.running_mean', 'features.features.layer4.0.downsample.0.weight', 'features.features.layer4.2.bn3.num_batches_tracked', 'features.features.layer4.1.bn1.num_batches_tracked', 'features.features.layer4.2.conv1.weight', 'features.features.layer4.0.bn2.num_batches_tracked', 'features.features.layer4.0.bn1.weight', 'features.features.layer4.0.bn1.num_batches_tracked', 'features.features.layer4.2.bn1.weight', 'features.features.layer4.2.bn2.bias', 'features.features.layer4.0.bn3.running_var', 'features.features.layer4.1.bn2.weight', 'features.features.layer4.0.bn1.running_mean', 'features.downsample_p4.downsample.1.num_batches_tracked', 'features.features.layer4.0.bn2.bias', 'features.features.layer4.0.downsample.1.num_batches_tracked', 'features.features.layer4.0.bn3.weight', 'features.downsample_p4.downsample.1.weight', 'features.features.layer4.0.bn2.weight', 'features.downsample_p4.downsample.1.bias', 'features.features.layer4.1.bn3.weight', 'features.features.layer4.0.conv2.weight', 'features.features.layer4.1.conv2.weight', 'features.features.layer4.0.bn1.running_var', 'features.features.layer4.1.bn3.bias', 'features.features.layer4.1.bn3.num_batches_tracked', 'features.features.layer4.2.bn3.running_var', 'features.features.layer4.0.bn1.bias', 'features.features.layer4.1.bn1.bias', 'features.features.layer4.2.bn2.running_mean', 'features.features.layer4.2.bn2.running_var', 'features.features.layer4.2.conv3.weight', 'features.features.layer4.0.bn3.running_mean', 'features.features.layer4.2.bn3.running_mean', 'features.features.layer4.0.conv1.weight', 'features.features.layer4.2.bn1.running_mean'}
[2019-08-14 19:42:14,179-rk0-load_helper.py# 17] unused checkpoint keys:66
[2019-08-14 19:42:14,179-rk0-load_helper.py# 18] used keys:372
[2019-08-14 19:42:14,254-rk0-trainval_siamrcnn_corr.py#237] (WarmUPScheduler) lr spaces: 
[1.00000000e-03 1.58489319e-03 2.51188643e-03 3.98107171e-03
 6.30957344e-03 1.00000000e-02 9.42381613e-03 8.88083105e-03
 8.36913190e-03 7.88691602e-03 7.43248464e-03 7.00423687e-03
 6.60066404e-03 6.22034443e-03 5.86193822e-03 5.52418280e-03
 5.20588830e-03 4.90593341e-03 4.62326145e-03 4.35687658e-03
 4.10584038e-03 3.86926848e-03 3.64632748e-03 3.43623197e-03
 3.23824183e-03 3.05165956e-03 2.87582786e-03 2.71012730e-03
 2.55397414e-03 2.40681827e-03 2.26814128e-03 2.13745464e-03
 2.01429795e-03 1.89823735e-03 1.78886398e-03 1.68579252e-03
 1.58865988e-03 1.49712386e-03 1.41086200e-03 1.32957041e-03
 1.25296271e-03 1.18076902e-03 1.11273501e-03 1.04862101e-03
 9.88201163e-04 9.31262607e-04 8.77604758e-04 8.27038588e-04
 7.79385959e-04 7.34478997e-04 6.92159502e-04 6.52278389e-04
 6.14695160e-04 5.79277417e-04 5.45900387e-04 5.14446487e-04
 4.84804911e-04 4.56871234e-04 4.30547051e-04 4.05739624e-04
 3.82361562e-04 3.60330505e-04 3.39568843e-04 3.20003434e-04
 3.01565353e-04 2.84189644e-04 2.67815095e-04 2.52384021e-04
 2.37842061e-04 2.24137985e-04 2.11223516e-04 1.99053158e-04
 1.87584036e-04 1.76775747e-04 1.66590213e-04 1.56991554e-04
 1.47945954e-04 1.39421547e-04 1.31388302e-04 1.23817920e-04
 1.16683732e-04 1.09960603e-04 1.03624851e-04 9.76541539e-05
 9.20274791e-05 8.67250043e-05 8.17280495e-05 7.70190111e-05
 7.25813000e-05 6.83992826e-05 6.44582263e-05 6.07442473e-05
 5.72442617e-05 5.39459397e-05 5.08376617e-05 4.79084777e-05
 4.51480685e-05 4.25467096e-05 4.00952369e-05 3.77850140e-05
 3.56079025e-05 3.35562326e-05 3.16227766e-05 2.98007232e-05
 2.80836536e-05 2.64655188e-05 2.49406183e-05 2.35035802e-05
 2.21493418e-05 2.08731324e-05 1.96704562e-05 1.85370763e-05
 1.74689999e-05 1.64624643e-05 1.55139236e-05 1.46200364e-05
 1.37776535e-05 1.29838073e-05 1.22357013e-05 1.15306999e-05
 1.08663196e-05 1.02402198e-05 9.65019485e-06 9.09416619e-06
 8.57017501e-06 8.07637535e-06 7.61102764e-06 7.17249250e-06
 6.75922506e-06 6.36976942e-06 6.00275358e-06 5.65688460e-06
 5.33094404e-06 5.02378365e-06 4.73432134e-06 4.46153738e-06
 4.20447080e-06 3.96221597e-06 3.73391948e-06 3.51877706e-06
 3.31603081e-06 3.12496646e-06 2.94491094e-06 2.77522992e-06
 2.61532565e-06 2.46463481e-06 2.32262652e-06 2.18880053e-06
 2.06268538e-06 1.94383677e-06 1.83183603e-06 1.72628860e-06
 1.62682263e-06 1.53308774e-06 1.44475370e-06 1.36150932e-06
 1.28306135e-06 1.20913342e-06 1.13946511e-06 1.07381097e-06
 1.01193971e-06 9.53633378e-07 8.98686561e-07 8.46905692e-07
 7.98108352e-07 7.52122637e-07 7.08786544e-07 6.67947407e-07
 6.29461355e-07 5.93192807e-07 5.59013995e-07 5.26804510e-07
 4.96450884e-07 4.67846185e-07 4.40889643e-07 4.15486293e-07
 3.91546643e-07 3.68986357e-07 3.47725959e-07 3.27690550e-07
 3.08809549e-07 2.91016441e-07 2.74248544e-07 2.58446785e-07
 2.43555498e-07 2.29522223e-07 2.16297523e-07 2.03834809e-07
 1.92090176e-07 1.81022250e-07 1.70592040e-07 1.60762802e-07
 1.51499909e-07 1.42770728e-07 1.34544509e-07 1.26792272e-07
 1.19486706e-07 1.12602075e-07 1.06114125e-07 1.00000000e-07]
[2019-08-14 19:42:14,261-rk0-trainval_siamrcnn_corr.py#239] model prepare done
[2019-08-14 19:42:14,264-rk0-trainval_siamrcnn_corr.py#296] train epoch:0
[2019-08-14 19:47:53,803-rk0-trainval_siamrcnn_corr.py#197] 
PyTorch version: 0.4.1.post2
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: CentOS Linux 7 (Core)
GCC version: (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11)
CMake version: version 2.8.12.2

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: 
GPU 0: GeForce GTX 1080 Ti
GPU 1: GeForce GTX 1080 Ti
GPU 2: GeForce GTX 1080 Ti
GPU 3: GeForce GTX 1080 Ti
GPU 4: GeForce GTX 1080 Ti
GPU 5: GeForce GTX 1080 Ti

Nvidia driver version: 410.48
cuDNN version: Could not collect

Versions of relevant libraries:
[pip] Could not collect
[conda] pytorch                   0.4.1           py36_py35_py27__9.0.176_7.1.2_2    pytorch
[conda] torchvision               0.2.1                    py36_1    pytorch
        OpenCV (3.4.3)
[2019-08-14 19:47:53,804-rk0-trainval_siamrcnn_corr.py#198] Namespace(arch='', batch=96, clip=10.0, config='config.json', debug=False, dense_hp=False, epochs=200, hm_hp=True, hm_hp_weight=1.5, hp_weight=1, log='logs/log_0814.txt', log_dir='board/show_0814', lr=0.001, momentum=0.9, mse_loss=False, not_hm_hp=False, not_reg_bbox=False, not_reg_hp_offset=False, off_weight=1, output_size=56, pretrained='./snapshot_0811/checkpoint_e99.pth', print_freq=10, reg_bbox=True, reg_hp_offset=True, reg_loss='l1', resume='', save_dir='snapshot_0814', save_freq=5, start_epoch=0, weight_decay=0.0001, workers=4)
[2019-08-14 19:47:53,806-rk0-trainval_siamrcnn_corr.py#201] config 
{
    "network": {
        "arch": "Custom"
    },
    "hp": {
        "instance_size": 255,
        "base_size": 8
    },
    "lr": {
        "feature_lr_mult": 1.0,
        "rpn_lr_mult": 1.0,
        "mask_lr_mult": 1.0,
        "type": "log",
        "start_lr": 0.01,
        "end_lr": 1e-07,
        "warmup": {
            "start_lr": 0.001,
            "end_lr": 0.01,
            "type": "step",
            "step": 1,
            "epoch": 5
        }
    },
    "loss": {
        "weight": [
            1.0,
            1.2,
            1.0
        ],
        "reg": {
            "loss": "L1Loss"
        },
        "cls": {
            "split": true
        }
    },
    "train_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/train2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 4,
                "scale": 0.05
            },
            "search": {
                "shift": 0.0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0.15
        }
    },
    "val_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/val2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 0,
                "scale": 0.0
            },
            "search": {
                "shift": 0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0
        }
    },
    "anchors": {
        "stride": 8,
        "ratios": [
            0.33,
            0.5,
            1,
            2,
            3
        ],
        "scales": [
            8
        ],
        "round_dight": 0
    },
    "mask": {},
    "clip": {
        "feature": 10.0,
        "rpn": 10.0,
        "split": false
    }
}
[2019-08-14 19:47:53,862-rk0-trainval_siamrcnn_corr.py#144] build train dataset
[2019-08-14 19:47:53,879-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/train2017_pose_siamfc.json
[2019-08-14 19:47:56,835-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/train2017_pose_siamfc.json loaded.
[2019-08-14 19:47:56,871-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [45900/45900] path {}.{}.{}.jpg
[2019-08-14 19:47:56,938-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 19:47:56,939-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 19:47:56,942-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0.15,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 45900
}
[2019-08-14 19:47:57,009-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 19:47:57,010-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 19:47:57,011-rk0-trainval_siamrcnn_corr.py#148] build val dataset
[2019-08-14 19:47:57,012-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/val2017_pose_siamfc.json
[2019-08-14 19:47:57,106-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/val2017_pose_siamfc.json loaded.
[2019-08-14 19:47:57,109-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [1899/1899] path {}.{}.{}.jpg
[2019-08-14 19:47:57,112-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 19:47:57,113-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 19:47:57,113-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 1899
}
[2019-08-14 19:47:57,117-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 19:47:57,118-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 19:47:57,118-rk0-trainval_siamrcnn_corr.py#159] build dataset done
[2019-08-14 19:48:02,612-rk0-load_helper.py# 40] load pretrained model from ../resnet.model
[2019-08-14 19:48:03,045-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 19:48:03,047-rk0-load_helper.py# 13] [Warning] missing keys: {'layer3.4.bn2.num_batches_tracked', 'layer2.3.bn3.num_batches_tracked', 'layer2.0.bn1.num_batches_tracked', 'layer3.2.bn1.num_batches_tracked', 'layer3.5.bn1.num_batches_tracked', 'layer2.1.bn2.num_batches_tracked', 'layer2.2.bn3.num_batches_tracked', 'layer1.1.bn3.num_batches_tracked', 'layer3.0.bn3.num_batches_tracked', 'layer3.1.bn3.num_batches_tracked', 'layer1.2.bn1.num_batches_tracked', 'layer3.1.bn1.num_batches_tracked', 'layer2.2.bn1.num_batches_tracked', 'layer1.0.downsample.1.num_batches_tracked', 'layer2.0.downsample.1.num_batches_tracked', 'layer2.3.bn1.num_batches_tracked', 'layer3.5.bn2.num_batches_tracked', 'layer2.1.bn1.num_batches_tracked', 'layer3.0.bn1.num_batches_tracked', 'layer3.3.bn3.num_batches_tracked', 'layer3.3.bn1.num_batches_tracked', 'layer1.2.bn3.num_batches_tracked', 'layer1.2.bn2.num_batches_tracked', 'layer2.3.bn2.num_batches_tracked', 'layer1.0.bn3.num_batches_tracked', 'layer3.4.bn3.num_batches_tracked', 'layer2.0.bn2.num_batches_tracked', 'layer2.1.bn3.num_batches_tracked', 'bn1.num_batches_tracked', 'layer3.2.bn3.num_batches_tracked', 'layer3.5.bn3.num_batches_tracked', 'layer1.0.bn2.num_batches_tracked', 'layer2.2.bn2.num_batches_tracked', 'layer1.1.bn1.num_batches_tracked', 'layer2.0.bn3.num_batches_tracked', 'layer3.0.downsample.1.num_batches_tracked', 'layer1.0.bn1.num_batches_tracked', 'layer3.3.bn2.num_batches_tracked', 'layer3.4.bn1.num_batches_tracked', 'layer3.1.bn2.num_batches_tracked', 'layer1.1.bn2.num_batches_tracked', 'layer3.2.bn2.num_batches_tracked', 'layer3.0.bn2.num_batches_tracked'}
[2019-08-14 19:48:03,048-rk0-load_helper.py# 14] missing keys:43
[2019-08-14 19:48:03,048-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'layer4.2.bn1.bias', 'layer4.0.bn2.running_mean', 'layer4.2.bn3.weight', 'layer4.2.bn2.weight', 'layer4.0.bn1.running_var', 'layer4.1.bn1.weight', 'layer4.1.conv3.weight', 'layer4.0.bn3.weight', 'layer4.0.bn1.running_mean', 'layer4.1.conv1.weight', 'layer4.1.bn2.weight', 'layer4.0.conv1.weight', 'layer4.1.bn1.running_mean', 'layer4.0.downsample.1.running_mean', 'layer4.0.bn2.running_var', 'layer4.1.bn3.running_var', 'layer4.0.downsample.1.bias', 'layer4.0.bn1.weight', 'layer4.0.downsample.0.weight', 'layer4.0.conv2.weight', 'layer4.1.bn2.running_var', 'layer4.1.bn2.running_mean', 'layer4.0.bn1.bias', 'layer4.2.bn2.running_mean', 'layer4.2.bn3.running_mean', 'layer4.2.bn3.running_var', 'layer4.1.bn1.bias', 'layer4.2.conv3.weight', 'layer4.2.conv1.weight', 'layer4.1.bn2.bias', 'layer4.0.conv3.weight', 'layer4.1.conv2.weight', 'layer4.0.bn3.running_var', 'layer4.1.bn3.running_mean', 'layer4.1.bn1.running_var', 'layer4.0.downsample.1.weight', 'layer4.0.bn3.running_mean', 'layer4.2.bn3.bias', 'layer4.2.bn1.running_var', 'layer4.0.downsample.1.running_var', 'layer4.2.conv2.weight', 'layer4.0.bn2.weight', 'layer4.1.bn3.bias', 'layer4.2.bn1.weight', 'layer4.0.bn3.bias', 'layer4.2.bn2.bias', 'layer4.0.bn2.bias', 'layer4.2.bn2.running_var', 'layer4.1.bn3.weight', 'layer4.2.bn1.running_mean'}
[2019-08-14 19:48:03,049-rk0-load_helper.py# 17] unused checkpoint keys:50
[2019-08-14 19:48:03,050-rk0-load_helper.py# 18] used keys:215
[2019-08-14 19:48:03,074-rk0-features.py# 66] Current training 0 layers:
	
[2019-08-14 19:48:03,076-rk0-features.py# 66] Current training 3 layers:
	
[2019-08-14 19:48:03,284-rk0-trainval_siamrcnn_corr.py#219] Custom(
  (dpooling): ModulatedDeformRoIPoolingPack(
    (offset_fc): Sequential(
      (0): Linear(in_features=1568, out_features=1024, bias=True)
      (1): ReLU(inplace)
      (2): Linear(in_features=1024, out_features=1024, bias=True)
      (3): ReLU(inplace)
      (4): Linear(in_features=1024, out_features=98, bias=True)
    )
    (mask_fc): Sequential(
      (0): Linear(in_features=1568, out_features=1024, bias=True)
      (1): ReLU(inplace)
      (2): Linear(in_features=1024, out_features=49, bias=True)
      (3): Sigmoid()
    )
  )
  (upSample): UpsamplingBilinear2d(size=[127, 127], mode=bilinear)
  (kp_criterion): PoseLoss(
    (crit_hm_hp): FocalLoss()
    (crit_kp): RegWeightedL1Loss()
    (crit_reg): RegL1Loss()
  )
  (features): ResDown(
    (features): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer2): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer3): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (4): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (5): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
    )
    (downsample): ResDownS(
      (downsample): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (rpn_model): UP(
    (cls): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 10, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (loc): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 20, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (pose_corr): PoseCorr(
    (kp): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (kp_model): Center_pose_head(
    (deconv_layers_new): Sequential(
      (0): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace)
      (3): ConvTranspose2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace)
      (6): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU(inplace)
      (9): ConvTranspose2d(256, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (10): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (11): ReLU(inplace)
      (12): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (13): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (14): ReLU(inplace)
      (15): ConvTranspose2d(64, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (16): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (17): ReLU(inplace)
    )
    (hps): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 34, kernel_size=(1, 1), stride=(1, 1))
    )
    (hm_hp): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 17, kernel_size=(1, 1), stride=(1, 1))
    )
    (hp_offset): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[2019-08-14 19:48:03,292-rk0-load_helper.py# 40] load pretrained model from ./snapshot_0811/checkpoint_e99.pth
[2019-08-14 19:48:03,689-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 19:48:03,691-rk0-load_helper.py# 13] [Warning] missing keys: {'kp_model.deconv_layers_new.0.bias', 'kp_model.deconv_layers_new.6.conv_offset_mask.bias', 'kp_model.deconv_layers_new.6.bias', 'dpooling.offset_fc.0.bias', 'dpooling.offset_fc.0.weight', 'kp_model.deconv_layers_new.12.bias', 'dpooling.offset_fc.2.bias', 'kp_model.deconv_layers_new.12.conv_offset_mask.bias', 'dpooling.mask_fc.2.bias', 'dpooling.mask_fc.0.bias', 'kp_model.deconv_layers_new.6.conv_offset_mask.weight', 'dpooling.offset_fc.4.bias', 'kp_model.deconv_layers_new.12.conv_offset_mask.weight', 'dpooling.offset_fc.4.weight', 'dpooling.offset_fc.2.weight', 'dpooling.mask_fc.0.weight', 'kp_model.deconv_layers_new.0.conv_offset_mask.bias', 'dpooling.mask_fc.2.weight', 'kp_model.deconv_layers_new.0.conv_offset_mask.weight'}
[2019-08-14 19:48:03,692-rk0-load_helper.py# 14] missing keys:19
[2019-08-14 19:48:03,693-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'features.features.layer4.2.bn1.num_batches_tracked', 'features.features.layer4.2.bn3.num_batches_tracked', 'features.features.layer4.0.conv1.weight', 'features.features.layer4.0.bn3.weight', 'features.features.layer4.1.bn3.bias', 'features.features.layer4.2.conv1.weight', 'features.features.layer4.2.bn2.weight', 'features.features.layer4.1.bn2.bias', 'features.features.layer4.2.conv2.weight', 'features.features.layer4.2.bn2.bias', 'features.features.layer4.1.bn1.running_mean', 'features.features.layer4.0.bn1.weight', 'features.features.layer4.0.downsample.1.bias', 'features.features.layer4.0.bn3.bias', 'features.features.layer4.0.bn1.bias', 'features.features.layer4.1.bn3.weight', 'features.features.layer4.0.bn1.running_mean', 'features.features.layer4.1.bn2.num_batches_tracked', 'features.downsample_p4.downsample.1.bias', 'features.features.layer4.2.bn1.weight', 'features.features.layer4.2.bn1.bias', 'features.features.layer4.0.conv3.weight', 'features.features.layer4.2.bn2.running_var', 'features.features.layer4.0.bn3.running_var', 'features.downsample_p4.downsample.0.weight', 'features.features.layer4.2.conv3.weight', 'features.features.layer4.0.downsample.1.running_var', 'features.features.layer4.0.downsample.1.running_mean', 'features.features.layer4.2.bn3.running_var', 'features.downsample_p4.downsample.1.running_var', 'features.features.layer4.0.downsample.0.weight', 'features.features.layer4.1.conv1.weight', 'features.features.layer4.1.bn2.weight', 'features.features.layer4.1.bn3.num_batches_tracked', 'features.features.layer4.0.downsample.1.num_batches_tracked', 'features.downsample_p4.downsample.1.running_mean', 'features.features.layer4.1.conv3.weight', 'features.features.layer4.1.bn2.running_var', 'features.features.layer4.0.bn1.running_var', 'features.features.layer4.2.bn3.running_mean', 'features.features.layer4.2.bn3.weight', 'features.features.layer4.2.bn2.running_mean', 'features.downsample_p4.downsample.1.weight', 'features.features.layer4.1.bn1.bias', 'features.features.layer4.1.bn1.weight', 'features.features.layer4.0.bn1.num_batches_tracked', 'features.features.layer4.0.bn2.num_batches_tracked', 'features.features.layer4.2.bn1.running_mean', 'features.features.layer4.1.bn2.running_mean', 'features.features.layer4.0.bn2.bias', 'features.features.layer4.1.bn3.running_var', 'features.features.layer4.0.bn3.running_mean', 'features.features.layer4.2.bn1.running_var', 'features.downsample_p4.downsample.1.num_batches_tracked', 'features.features.layer4.0.bn2.weight', 'features.features.layer4.1.bn3.running_mean', 'features.features.layer4.1.conv2.weight', 'features.features.layer4.0.bn3.num_batches_tracked', 'features.features.layer4.0.conv2.weight', 'features.features.layer4.1.bn1.num_batches_tracked', 'features.features.layer4.0.downsample.1.weight', 'features.features.layer4.0.bn2.running_mean', 'features.features.layer4.2.bn2.num_batches_tracked', 'features.features.layer4.1.bn1.running_var', 'features.features.layer4.2.bn3.bias', 'features.features.layer4.0.bn2.running_var'}
[2019-08-14 19:48:03,693-rk0-load_helper.py# 17] unused checkpoint keys:66
[2019-08-14 19:48:03,694-rk0-load_helper.py# 18] used keys:372
[2019-08-14 19:48:03,756-rk0-trainval_siamrcnn_corr.py#237] (WarmUPScheduler) lr spaces: 
[1.00000000e-03 1.58489319e-03 2.51188643e-03 3.98107171e-03
 6.30957344e-03 1.00000000e-02 9.42381613e-03 8.88083105e-03
 8.36913190e-03 7.88691602e-03 7.43248464e-03 7.00423687e-03
 6.60066404e-03 6.22034443e-03 5.86193822e-03 5.52418280e-03
 5.20588830e-03 4.90593341e-03 4.62326145e-03 4.35687658e-03
 4.10584038e-03 3.86926848e-03 3.64632748e-03 3.43623197e-03
 3.23824183e-03 3.05165956e-03 2.87582786e-03 2.71012730e-03
 2.55397414e-03 2.40681827e-03 2.26814128e-03 2.13745464e-03
 2.01429795e-03 1.89823735e-03 1.78886398e-03 1.68579252e-03
 1.58865988e-03 1.49712386e-03 1.41086200e-03 1.32957041e-03
 1.25296271e-03 1.18076902e-03 1.11273501e-03 1.04862101e-03
 9.88201163e-04 9.31262607e-04 8.77604758e-04 8.27038588e-04
 7.79385959e-04 7.34478997e-04 6.92159502e-04 6.52278389e-04
 6.14695160e-04 5.79277417e-04 5.45900387e-04 5.14446487e-04
 4.84804911e-04 4.56871234e-04 4.30547051e-04 4.05739624e-04
 3.82361562e-04 3.60330505e-04 3.39568843e-04 3.20003434e-04
 3.01565353e-04 2.84189644e-04 2.67815095e-04 2.52384021e-04
 2.37842061e-04 2.24137985e-04 2.11223516e-04 1.99053158e-04
 1.87584036e-04 1.76775747e-04 1.66590213e-04 1.56991554e-04
 1.47945954e-04 1.39421547e-04 1.31388302e-04 1.23817920e-04
 1.16683732e-04 1.09960603e-04 1.03624851e-04 9.76541539e-05
 9.20274791e-05 8.67250043e-05 8.17280495e-05 7.70190111e-05
 7.25813000e-05 6.83992826e-05 6.44582263e-05 6.07442473e-05
 5.72442617e-05 5.39459397e-05 5.08376617e-05 4.79084777e-05
 4.51480685e-05 4.25467096e-05 4.00952369e-05 3.77850140e-05
 3.56079025e-05 3.35562326e-05 3.16227766e-05 2.98007232e-05
 2.80836536e-05 2.64655188e-05 2.49406183e-05 2.35035802e-05
 2.21493418e-05 2.08731324e-05 1.96704562e-05 1.85370763e-05
 1.74689999e-05 1.64624643e-05 1.55139236e-05 1.46200364e-05
 1.37776535e-05 1.29838073e-05 1.22357013e-05 1.15306999e-05
 1.08663196e-05 1.02402198e-05 9.65019485e-06 9.09416619e-06
 8.57017501e-06 8.07637535e-06 7.61102764e-06 7.17249250e-06
 6.75922506e-06 6.36976942e-06 6.00275358e-06 5.65688460e-06
 5.33094404e-06 5.02378365e-06 4.73432134e-06 4.46153738e-06
 4.20447080e-06 3.96221597e-06 3.73391948e-06 3.51877706e-06
 3.31603081e-06 3.12496646e-06 2.94491094e-06 2.77522992e-06
 2.61532565e-06 2.46463481e-06 2.32262652e-06 2.18880053e-06
 2.06268538e-06 1.94383677e-06 1.83183603e-06 1.72628860e-06
 1.62682263e-06 1.53308774e-06 1.44475370e-06 1.36150932e-06
 1.28306135e-06 1.20913342e-06 1.13946511e-06 1.07381097e-06
 1.01193971e-06 9.53633378e-07 8.98686561e-07 8.46905692e-07
 7.98108352e-07 7.52122637e-07 7.08786544e-07 6.67947407e-07
 6.29461355e-07 5.93192807e-07 5.59013995e-07 5.26804510e-07
 4.96450884e-07 4.67846185e-07 4.40889643e-07 4.15486293e-07
 3.91546643e-07 3.68986357e-07 3.47725959e-07 3.27690550e-07
 3.08809549e-07 2.91016441e-07 2.74248544e-07 2.58446785e-07
 2.43555498e-07 2.29522223e-07 2.16297523e-07 2.03834809e-07
 1.92090176e-07 1.81022250e-07 1.70592040e-07 1.60762802e-07
 1.51499909e-07 1.42770728e-07 1.34544509e-07 1.26792272e-07
 1.19486706e-07 1.12602075e-07 1.06114125e-07 1.00000000e-07]
[2019-08-14 19:48:03,763-rk0-trainval_siamrcnn_corr.py#239] model prepare done
[2019-08-14 19:48:03,777-rk0-trainval_siamrcnn_corr.py#296] train epoch:0
[2019-08-14 19:50:53,871-rk0-trainval_siamrcnn_corr.py#197] 
PyTorch version: 0.4.1.post2
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: CentOS Linux 7 (Core)
GCC version: (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11)
CMake version: version 2.8.12.2

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: 
GPU 0: GeForce GTX 1080 Ti
GPU 1: GeForce GTX 1080 Ti
GPU 2: GeForce GTX 1080 Ti
GPU 3: GeForce GTX 1080 Ti
GPU 4: GeForce GTX 1080 Ti
GPU 5: GeForce GTX 1080 Ti

Nvidia driver version: 410.48
cuDNN version: Could not collect

Versions of relevant libraries:
[pip] Could not collect
[conda] pytorch                   0.4.1           py36_py35_py27__9.0.176_7.1.2_2    pytorch
[conda] torchvision               0.2.1                    py36_1    pytorch
        OpenCV (3.4.3)
[2019-08-14 19:50:53,873-rk0-trainval_siamrcnn_corr.py#198] Namespace(arch='', batch=96, clip=10.0, config='config.json', debug=False, dense_hp=False, epochs=200, hm_hp=True, hm_hp_weight=1.5, hp_weight=1, log='logs/log_0814.txt', log_dir='board/show_0814', lr=0.001, momentum=0.9, mse_loss=False, not_hm_hp=False, not_reg_bbox=False, not_reg_hp_offset=False, off_weight=1, output_size=56, pretrained='./snapshot_0811/checkpoint_e99.pth', print_freq=10, reg_bbox=True, reg_hp_offset=True, reg_loss='l1', resume='', save_dir='snapshot_0814', save_freq=5, start_epoch=0, weight_decay=0.0001, workers=4)
[2019-08-14 19:50:53,875-rk0-trainval_siamrcnn_corr.py#201] config 
{
    "network": {
        "arch": "Custom"
    },
    "hp": {
        "instance_size": 255,
        "base_size": 8
    },
    "lr": {
        "feature_lr_mult": 1.0,
        "rpn_lr_mult": 1.0,
        "mask_lr_mult": 1.0,
        "type": "log",
        "start_lr": 0.01,
        "end_lr": 1e-07,
        "warmup": {
            "start_lr": 0.001,
            "end_lr": 0.01,
            "type": "step",
            "step": 1,
            "epoch": 5
        }
    },
    "loss": {
        "weight": [
            1.0,
            1.2,
            1.0
        ],
        "reg": {
            "loss": "L1Loss"
        },
        "cls": {
            "split": true
        }
    },
    "train_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/train2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 4,
                "scale": 0.05
            },
            "search": {
                "shift": 0.0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0.15
        }
    },
    "val_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/val2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 0,
                "scale": 0.0
            },
            "search": {
                "shift": 0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0
        }
    },
    "anchors": {
        "stride": 8,
        "ratios": [
            0.33,
            0.5,
            1,
            2,
            3
        ],
        "scales": [
            8
        ],
        "round_dight": 0
    },
    "mask": {},
    "clip": {
        "feature": 10.0,
        "rpn": 10.0,
        "split": false
    }
}
[2019-08-14 19:50:53,879-rk0-trainval_siamrcnn_corr.py#144] build train dataset
[2019-08-14 19:50:53,882-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/train2017_pose_siamfc.json
[2019-08-14 19:50:56,830-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/train2017_pose_siamfc.json loaded.
[2019-08-14 19:50:57,425-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [45900/45900] path {}.{}.{}.jpg
[2019-08-14 19:50:57,531-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 19:50:58,813-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 19:50:58,816-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0.15,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 45900
}
[2019-08-14 19:50:58,883-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 19:50:58,884-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 19:50:58,885-rk0-trainval_siamrcnn_corr.py#148] build val dataset
[2019-08-14 19:50:58,886-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/val2017_pose_siamfc.json
[2019-08-14 19:50:58,979-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/val2017_pose_siamfc.json loaded.
[2019-08-14 19:50:59,487-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [1899/1899] path {}.{}.{}.jpg
[2019-08-14 19:50:59,492-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 19:50:59,493-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 19:50:59,494-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 1899
}
[2019-08-14 19:50:59,498-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 19:50:59,499-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 19:50:59,499-rk0-trainval_siamrcnn_corr.py#159] build dataset done
[2019-08-14 19:51:05,205-rk0-load_helper.py# 40] load pretrained model from ../resnet.model
[2019-08-14 19:51:05,545-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 19:51:05,547-rk0-load_helper.py# 13] [Warning] missing keys: {'layer1.0.bn2.num_batches_tracked', 'layer2.1.bn1.num_batches_tracked', 'layer2.3.bn2.num_batches_tracked', 'layer1.0.bn1.num_batches_tracked', 'layer1.0.downsample.1.num_batches_tracked', 'layer2.2.bn2.num_batches_tracked', 'layer3.0.downsample.1.num_batches_tracked', 'layer2.2.bn1.num_batches_tracked', 'layer2.3.bn1.num_batches_tracked', 'layer1.2.bn3.num_batches_tracked', 'layer3.0.bn2.num_batches_tracked', 'layer3.0.bn3.num_batches_tracked', 'layer3.4.bn3.num_batches_tracked', 'layer2.0.bn3.num_batches_tracked', 'layer2.1.bn3.num_batches_tracked', 'layer1.1.bn1.num_batches_tracked', 'layer3.2.bn3.num_batches_tracked', 'layer1.0.bn3.num_batches_tracked', 'layer3.5.bn1.num_batches_tracked', 'layer1.2.bn1.num_batches_tracked', 'layer3.2.bn1.num_batches_tracked', 'layer3.1.bn2.num_batches_tracked', 'layer3.3.bn2.num_batches_tracked', 'layer2.0.downsample.1.num_batches_tracked', 'layer3.3.bn3.num_batches_tracked', 'layer1.2.bn2.num_batches_tracked', 'layer3.3.bn1.num_batches_tracked', 'layer3.0.bn1.num_batches_tracked', 'layer3.4.bn1.num_batches_tracked', 'layer3.5.bn3.num_batches_tracked', 'layer3.2.bn2.num_batches_tracked', 'layer3.5.bn2.num_batches_tracked', 'layer1.1.bn2.num_batches_tracked', 'layer2.0.bn1.num_batches_tracked', 'layer3.1.bn3.num_batches_tracked', 'layer3.1.bn1.num_batches_tracked', 'layer2.3.bn3.num_batches_tracked', 'bn1.num_batches_tracked', 'layer3.4.bn2.num_batches_tracked', 'layer2.0.bn2.num_batches_tracked', 'layer1.1.bn3.num_batches_tracked', 'layer2.1.bn2.num_batches_tracked', 'layer2.2.bn3.num_batches_tracked'}
[2019-08-14 19:51:05,548-rk0-load_helper.py# 14] missing keys:43
[2019-08-14 19:51:05,549-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'layer4.1.bn1.weight', 'layer4.1.bn3.running_mean', 'layer4.0.bn1.bias', 'layer4.1.conv2.weight', 'layer4.1.bn2.bias', 'layer4.2.bn1.weight', 'layer4.2.conv1.weight', 'layer4.2.bn2.running_mean', 'layer4.0.downsample.1.running_mean', 'layer4.2.bn1.bias', 'layer4.1.bn2.weight', 'layer4.0.conv3.weight', 'layer4.0.bn2.bias', 'layer4.0.bn2.running_var', 'layer4.1.bn1.bias', 'layer4.0.bn1.running_mean', 'layer4.1.bn3.bias', 'layer4.2.bn1.running_mean', 'layer4.1.conv1.weight', 'layer4.0.bn1.weight', 'layer4.1.bn3.weight', 'layer4.0.bn3.running_mean', 'layer4.2.bn2.running_var', 'layer4.2.bn3.weight', 'layer4.2.bn3.running_mean', 'layer4.1.bn1.running_mean', 'layer4.0.bn2.weight', 'layer4.2.bn1.running_var', 'layer4.2.bn3.bias', 'layer4.2.conv3.weight', 'layer4.1.conv3.weight', 'layer4.0.conv2.weight', 'layer4.0.downsample.1.running_var', 'layer4.2.bn2.bias', 'layer4.0.bn3.bias', 'layer4.0.bn1.running_var', 'layer4.1.bn2.running_var', 'layer4.0.conv1.weight', 'layer4.0.downsample.0.weight', 'layer4.0.downsample.1.weight', 'layer4.1.bn1.running_var', 'layer4.1.bn2.running_mean', 'layer4.0.bn3.weight', 'layer4.0.bn3.running_var', 'layer4.0.bn2.running_mean', 'layer4.2.conv2.weight', 'layer4.2.bn3.running_var', 'layer4.1.bn3.running_var', 'layer4.0.downsample.1.bias', 'layer4.2.bn2.weight'}
[2019-08-14 19:51:05,550-rk0-load_helper.py# 17] unused checkpoint keys:50
[2019-08-14 19:51:05,551-rk0-load_helper.py# 18] used keys:215
[2019-08-14 19:51:05,574-rk0-features.py# 66] Current training 0 layers:
	
[2019-08-14 19:51:05,591-rk0-features.py# 66] Current training 3 layers:
	
[2019-08-14 19:51:05,784-rk0-trainval_siamrcnn_corr.py#219] Custom(
  (dpooling): ModulatedDeformRoIPoolingPack(
    (offset_fc): Sequential(
      (0): Linear(in_features=25088, out_features=1024, bias=True)
      (1): ReLU(inplace)
      (2): Linear(in_features=1024, out_features=1024, bias=True)
      (3): ReLU(inplace)
      (4): Linear(in_features=1024, out_features=98, bias=True)
    )
    (mask_fc): Sequential(
      (0): Linear(in_features=25088, out_features=1024, bias=True)
      (1): ReLU(inplace)
      (2): Linear(in_features=1024, out_features=49, bias=True)
      (3): Sigmoid()
    )
  )
  (upSample): UpsamplingBilinear2d(size=[127, 127], mode=bilinear)
  (kp_criterion): PoseLoss(
    (crit_hm_hp): FocalLoss()
    (crit_kp): RegWeightedL1Loss()
    (crit_reg): RegL1Loss()
  )
  (features): ResDown(
    (features): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer2): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer3): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (4): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (5): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
    )
    (downsample): ResDownS(
      (downsample): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (rpn_model): UP(
    (cls): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 10, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (loc): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 20, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (pose_corr): PoseCorr(
    (kp): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (kp_model): Center_pose_head(
    (deconv_layers_new): Sequential(
      (0): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace)
      (3): ConvTranspose2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace)
      (6): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU(inplace)
      (9): ConvTranspose2d(256, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (10): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (11): ReLU(inplace)
      (12): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (13): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (14): ReLU(inplace)
      (15): ConvTranspose2d(64, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (16): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (17): ReLU(inplace)
    )
    (hps): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 34, kernel_size=(1, 1), stride=(1, 1))
    )
    (hm_hp): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 17, kernel_size=(1, 1), stride=(1, 1))
    )
    (hp_offset): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[2019-08-14 19:51:05,790-rk0-load_helper.py# 40] load pretrained model from ./snapshot_0811/checkpoint_e99.pth
[2019-08-14 19:51:06,175-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 19:51:06,178-rk0-load_helper.py# 13] [Warning] missing keys: {'kp_model.deconv_layers_new.12.bias', 'dpooling.offset_fc.2.weight', 'dpooling.offset_fc.0.weight', 'dpooling.mask_fc.0.weight', 'kp_model.deconv_layers_new.6.conv_offset_mask.bias', 'kp_model.deconv_layers_new.12.conv_offset_mask.weight', 'dpooling.mask_fc.0.bias', 'dpooling.mask_fc.2.weight', 'dpooling.offset_fc.4.bias', 'kp_model.deconv_layers_new.0.conv_offset_mask.weight', 'kp_model.deconv_layers_new.0.bias', 'dpooling.offset_fc.0.bias', 'dpooling.mask_fc.2.bias', 'kp_model.deconv_layers_new.12.conv_offset_mask.bias', 'dpooling.offset_fc.4.weight', 'kp_model.deconv_layers_new.0.conv_offset_mask.bias', 'dpooling.offset_fc.2.bias', 'kp_model.deconv_layers_new.6.conv_offset_mask.weight', 'kp_model.deconv_layers_new.6.bias'}
[2019-08-14 19:51:06,179-rk0-load_helper.py# 14] missing keys:19
[2019-08-14 19:51:06,180-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'features.features.layer4.0.downsample.0.weight', 'features.features.layer4.1.conv1.weight', 'features.downsample_p4.downsample.1.num_batches_tracked', 'features.features.layer4.1.bn3.running_var', 'features.features.layer4.0.conv2.weight', 'features.downsample_p4.downsample.1.running_mean', 'features.features.layer4.2.bn2.bias', 'features.features.layer4.2.bn2.running_var', 'features.features.layer4.1.bn2.weight', 'features.features.layer4.0.bn2.num_batches_tracked', 'features.downsample_p4.downsample.1.weight', 'features.features.layer4.2.bn1.num_batches_tracked', 'features.features.layer4.0.bn1.running_mean', 'features.features.layer4.0.bn3.num_batches_tracked', 'features.features.layer4.2.bn3.weight', 'features.features.layer4.2.bn2.running_mean', 'features.features.layer4.2.bn3.num_batches_tracked', 'features.features.layer4.2.bn1.running_var', 'features.features.layer4.1.bn2.running_var', 'features.features.layer4.2.conv1.weight', 'features.features.layer4.0.bn3.weight', 'features.features.layer4.1.bn3.running_mean', 'features.downsample_p4.downsample.0.weight', 'features.features.layer4.1.bn3.bias', 'features.features.layer4.0.bn3.bias', 'features.features.layer4.1.bn2.running_mean', 'features.features.layer4.1.bn1.running_mean', 'features.downsample_p4.downsample.1.bias', 'features.features.layer4.2.bn3.running_mean', 'features.features.layer4.2.conv3.weight', 'features.features.layer4.0.bn3.running_var', 'features.features.layer4.0.downsample.1.bias', 'features.features.layer4.0.bn3.running_mean', 'features.features.layer4.1.bn2.bias', 'features.features.layer4.2.bn1.weight', 'features.features.layer4.2.bn1.running_mean', 'features.features.layer4.2.bn1.bias', 'features.features.layer4.1.conv2.weight', 'features.features.layer4.2.bn2.weight', 'features.features.layer4.0.bn2.bias', 'features.features.layer4.0.conv3.weight', 'features.features.layer4.1.bn1.num_batches_tracked', 'features.features.layer4.1.bn1.running_var', 'features.features.layer4.0.bn2.running_mean', 'features.features.layer4.0.bn2.weight', 'features.features.layer4.0.conv1.weight', 'features.features.layer4.1.bn1.bias', 'features.downsample_p4.downsample.1.running_var', 'features.features.layer4.0.bn1.bias', 'features.features.layer4.2.bn3.running_var', 'features.features.layer4.0.downsample.1.weight', 'features.features.layer4.0.bn1.num_batches_tracked', 'features.features.layer4.0.bn2.running_var', 'features.features.layer4.2.conv2.weight', 'features.features.layer4.0.downsample.1.running_var', 'features.features.layer4.1.bn3.num_batches_tracked', 'features.features.layer4.0.bn1.running_var', 'features.features.layer4.1.conv3.weight', 'features.features.layer4.2.bn2.num_batches_tracked', 'features.features.layer4.0.bn1.weight', 'features.features.layer4.2.bn3.bias', 'features.features.layer4.1.bn3.weight', 'features.features.layer4.1.bn2.num_batches_tracked', 'features.features.layer4.0.downsample.1.running_mean', 'features.features.layer4.1.bn1.weight', 'features.features.layer4.0.downsample.1.num_batches_tracked'}
[2019-08-14 19:51:06,181-rk0-load_helper.py# 17] unused checkpoint keys:66
[2019-08-14 19:51:06,182-rk0-load_helper.py# 18] used keys:372
[2019-08-14 19:51:06,255-rk0-trainval_siamrcnn_corr.py#237] (WarmUPScheduler) lr spaces: 
[1.00000000e-03 1.58489319e-03 2.51188643e-03 3.98107171e-03
 6.30957344e-03 1.00000000e-02 9.42381613e-03 8.88083105e-03
 8.36913190e-03 7.88691602e-03 7.43248464e-03 7.00423687e-03
 6.60066404e-03 6.22034443e-03 5.86193822e-03 5.52418280e-03
 5.20588830e-03 4.90593341e-03 4.62326145e-03 4.35687658e-03
 4.10584038e-03 3.86926848e-03 3.64632748e-03 3.43623197e-03
 3.23824183e-03 3.05165956e-03 2.87582786e-03 2.71012730e-03
 2.55397414e-03 2.40681827e-03 2.26814128e-03 2.13745464e-03
 2.01429795e-03 1.89823735e-03 1.78886398e-03 1.68579252e-03
 1.58865988e-03 1.49712386e-03 1.41086200e-03 1.32957041e-03
 1.25296271e-03 1.18076902e-03 1.11273501e-03 1.04862101e-03
 9.88201163e-04 9.31262607e-04 8.77604758e-04 8.27038588e-04
 7.79385959e-04 7.34478997e-04 6.92159502e-04 6.52278389e-04
 6.14695160e-04 5.79277417e-04 5.45900387e-04 5.14446487e-04
 4.84804911e-04 4.56871234e-04 4.30547051e-04 4.05739624e-04
 3.82361562e-04 3.60330505e-04 3.39568843e-04 3.20003434e-04
 3.01565353e-04 2.84189644e-04 2.67815095e-04 2.52384021e-04
 2.37842061e-04 2.24137985e-04 2.11223516e-04 1.99053158e-04
 1.87584036e-04 1.76775747e-04 1.66590213e-04 1.56991554e-04
 1.47945954e-04 1.39421547e-04 1.31388302e-04 1.23817920e-04
 1.16683732e-04 1.09960603e-04 1.03624851e-04 9.76541539e-05
 9.20274791e-05 8.67250043e-05 8.17280495e-05 7.70190111e-05
 7.25813000e-05 6.83992826e-05 6.44582263e-05 6.07442473e-05
 5.72442617e-05 5.39459397e-05 5.08376617e-05 4.79084777e-05
 4.51480685e-05 4.25467096e-05 4.00952369e-05 3.77850140e-05
 3.56079025e-05 3.35562326e-05 3.16227766e-05 2.98007232e-05
 2.80836536e-05 2.64655188e-05 2.49406183e-05 2.35035802e-05
 2.21493418e-05 2.08731324e-05 1.96704562e-05 1.85370763e-05
 1.74689999e-05 1.64624643e-05 1.55139236e-05 1.46200364e-05
 1.37776535e-05 1.29838073e-05 1.22357013e-05 1.15306999e-05
 1.08663196e-05 1.02402198e-05 9.65019485e-06 9.09416619e-06
 8.57017501e-06 8.07637535e-06 7.61102764e-06 7.17249250e-06
 6.75922506e-06 6.36976942e-06 6.00275358e-06 5.65688460e-06
 5.33094404e-06 5.02378365e-06 4.73432134e-06 4.46153738e-06
 4.20447080e-06 3.96221597e-06 3.73391948e-06 3.51877706e-06
 3.31603081e-06 3.12496646e-06 2.94491094e-06 2.77522992e-06
 2.61532565e-06 2.46463481e-06 2.32262652e-06 2.18880053e-06
 2.06268538e-06 1.94383677e-06 1.83183603e-06 1.72628860e-06
 1.62682263e-06 1.53308774e-06 1.44475370e-06 1.36150932e-06
 1.28306135e-06 1.20913342e-06 1.13946511e-06 1.07381097e-06
 1.01193971e-06 9.53633378e-07 8.98686561e-07 8.46905692e-07
 7.98108352e-07 7.52122637e-07 7.08786544e-07 6.67947407e-07
 6.29461355e-07 5.93192807e-07 5.59013995e-07 5.26804510e-07
 4.96450884e-07 4.67846185e-07 4.40889643e-07 4.15486293e-07
 3.91546643e-07 3.68986357e-07 3.47725959e-07 3.27690550e-07
 3.08809549e-07 2.91016441e-07 2.74248544e-07 2.58446785e-07
 2.43555498e-07 2.29522223e-07 2.16297523e-07 2.03834809e-07
 1.92090176e-07 1.81022250e-07 1.70592040e-07 1.60762802e-07
 1.51499909e-07 1.42770728e-07 1.34544509e-07 1.26792272e-07
 1.19486706e-07 1.12602075e-07 1.06114125e-07 1.00000000e-07]
[2019-08-14 19:51:06,263-rk0-trainval_siamrcnn_corr.py#239] model prepare done
[2019-08-14 19:51:06,266-rk0-trainval_siamrcnn_corr.py#296] train epoch:0
[2019-08-14 19:53:55,845-rk0-trainval_siamrcnn_corr.py#197] 
PyTorch version: 0.4.1.post2
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: CentOS Linux 7 (Core)
GCC version: (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11)
CMake version: version 2.8.12.2

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: 
GPU 0: GeForce GTX 1080 Ti
GPU 1: GeForce GTX 1080 Ti
GPU 2: GeForce GTX 1080 Ti
GPU 3: GeForce GTX 1080 Ti
GPU 4: GeForce GTX 1080 Ti
GPU 5: GeForce GTX 1080 Ti

Nvidia driver version: 410.48
cuDNN version: Could not collect

Versions of relevant libraries:
[pip] Could not collect
[conda] pytorch                   0.4.1           py36_py35_py27__9.0.176_7.1.2_2    pytorch
[conda] torchvision               0.2.1                    py36_1    pytorch
        OpenCV (3.4.3)
[2019-08-14 19:53:55,846-rk0-trainval_siamrcnn_corr.py#198] Namespace(arch='', batch=96, clip=10.0, config='config.json', debug=False, dense_hp=False, epochs=200, hm_hp=True, hm_hp_weight=1.5, hp_weight=1, log='logs/log_0814.txt', log_dir='board/show_0814', lr=0.001, momentum=0.9, mse_loss=False, not_hm_hp=False, not_reg_bbox=False, not_reg_hp_offset=False, off_weight=1, output_size=56, pretrained='./snapshot_0811/checkpoint_e99.pth', print_freq=10, reg_bbox=True, reg_hp_offset=True, reg_loss='l1', resume='', save_dir='snapshot_0814', save_freq=5, start_epoch=0, weight_decay=0.0001, workers=4)
[2019-08-14 19:53:55,848-rk0-trainval_siamrcnn_corr.py#201] config 
{
    "network": {
        "arch": "Custom"
    },
    "hp": {
        "instance_size": 255,
        "base_size": 8
    },
    "lr": {
        "feature_lr_mult": 1.0,
        "rpn_lr_mult": 1.0,
        "mask_lr_mult": 1.0,
        "type": "log",
        "start_lr": 0.01,
        "end_lr": 1e-07,
        "warmup": {
            "start_lr": 0.001,
            "end_lr": 0.01,
            "type": "step",
            "step": 1,
            "epoch": 5
        }
    },
    "loss": {
        "weight": [
            1.0,
            1.2,
            1.0
        ],
        "reg": {
            "loss": "L1Loss"
        },
        "cls": {
            "split": true
        }
    },
    "train_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/train2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 4,
                "scale": 0.05
            },
            "search": {
                "shift": 0.0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0.15
        }
    },
    "val_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/val2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 0,
                "scale": 0.0
            },
            "search": {
                "shift": 0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0
        }
    },
    "anchors": {
        "stride": 8,
        "ratios": [
            0.33,
            0.5,
            1,
            2,
            3
        ],
        "scales": [
            8
        ],
        "round_dight": 0
    },
    "mask": {},
    "clip": {
        "feature": 10.0,
        "rpn": 10.0,
        "split": false
    }
}
[2019-08-14 19:53:55,853-rk0-trainval_siamrcnn_corr.py#144] build train dataset
[2019-08-14 19:53:55,856-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/train2017_pose_siamfc.json
[2019-08-14 19:53:58,690-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/train2017_pose_siamfc.json loaded.
[2019-08-14 19:53:58,726-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [45900/45900] path {}.{}.{}.jpg
[2019-08-14 19:53:58,798-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 19:53:58,799-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 19:53:58,802-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0.15,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 45900
}
[2019-08-14 19:53:58,870-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 19:53:58,871-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 19:53:58,872-rk0-trainval_siamrcnn_corr.py#148] build val dataset
[2019-08-14 19:53:58,873-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/val2017_pose_siamfc.json
[2019-08-14 19:53:58,966-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/val2017_pose_siamfc.json loaded.
[2019-08-14 19:53:58,968-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [1899/1899] path {}.{}.{}.jpg
[2019-08-14 19:53:58,972-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 19:53:58,973-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 19:53:58,974-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 1899
}
[2019-08-14 19:53:58,977-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 19:53:58,978-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 19:53:58,979-rk0-trainval_siamrcnn_corr.py#159] build dataset done
[2019-08-14 19:54:04,474-rk0-load_helper.py# 40] load pretrained model from ../resnet.model
[2019-08-14 19:54:04,796-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 19:54:04,804-rk0-load_helper.py# 13] [Warning] missing keys: {'layer2.1.bn1.num_batches_tracked', 'layer1.2.bn3.num_batches_tracked', 'layer1.1.bn3.num_batches_tracked', 'layer3.0.bn2.num_batches_tracked', 'bn1.num_batches_tracked', 'layer3.0.downsample.1.num_batches_tracked', 'layer2.2.bn2.num_batches_tracked', 'layer2.1.bn2.num_batches_tracked', 'layer1.0.downsample.1.num_batches_tracked', 'layer2.2.bn3.num_batches_tracked', 'layer2.1.bn3.num_batches_tracked', 'layer1.1.bn1.num_batches_tracked', 'layer3.4.bn2.num_batches_tracked', 'layer3.5.bn2.num_batches_tracked', 'layer2.0.bn2.num_batches_tracked', 'layer2.3.bn3.num_batches_tracked', 'layer3.1.bn1.num_batches_tracked', 'layer1.0.bn3.num_batches_tracked', 'layer3.2.bn2.num_batches_tracked', 'layer1.2.bn2.num_batches_tracked', 'layer3.1.bn2.num_batches_tracked', 'layer3.2.bn1.num_batches_tracked', 'layer1.0.bn2.num_batches_tracked', 'layer2.0.downsample.1.num_batches_tracked', 'layer2.2.bn1.num_batches_tracked', 'layer3.3.bn3.num_batches_tracked', 'layer3.2.bn3.num_batches_tracked', 'layer3.5.bn3.num_batches_tracked', 'layer3.4.bn1.num_batches_tracked', 'layer1.2.bn1.num_batches_tracked', 'layer2.0.bn3.num_batches_tracked', 'layer3.0.bn3.num_batches_tracked', 'layer3.0.bn1.num_batches_tracked', 'layer3.3.bn1.num_batches_tracked', 'layer3.3.bn2.num_batches_tracked', 'layer2.3.bn1.num_batches_tracked', 'layer3.1.bn3.num_batches_tracked', 'layer2.0.bn1.num_batches_tracked', 'layer3.4.bn3.num_batches_tracked', 'layer2.3.bn2.num_batches_tracked', 'layer3.5.bn1.num_batches_tracked', 'layer1.1.bn2.num_batches_tracked', 'layer1.0.bn1.num_batches_tracked'}
[2019-08-14 19:54:04,805-rk0-load_helper.py# 14] missing keys:43
[2019-08-14 19:54:04,806-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'layer4.1.bn3.bias', 'layer4.0.bn2.running_mean', 'layer4.1.bn1.weight', 'layer4.1.conv3.weight', 'layer4.2.bn1.running_var', 'layer4.0.bn3.running_mean', 'layer4.0.bn3.running_var', 'layer4.2.bn2.running_var', 'layer4.2.bn3.bias', 'layer4.2.conv1.weight', 'layer4.1.bn2.running_mean', 'layer4.0.bn3.weight', 'layer4.1.bn1.running_var', 'layer4.2.bn2.weight', 'layer4.0.downsample.1.running_var', 'layer4.1.bn2.bias', 'layer4.1.bn3.weight', 'layer4.1.bn3.running_mean', 'layer4.0.downsample.0.weight', 'layer4.2.bn1.running_mean', 'layer4.1.bn3.running_var', 'layer4.2.bn3.running_mean', 'layer4.0.downsample.1.running_mean', 'layer4.2.bn3.weight', 'layer4.0.bn2.running_var', 'layer4.1.bn2.running_var', 'layer4.2.conv3.weight', 'layer4.1.bn2.weight', 'layer4.2.bn2.running_mean', 'layer4.0.bn1.running_mean', 'layer4.0.bn1.weight', 'layer4.2.conv2.weight', 'layer4.0.conv1.weight', 'layer4.1.bn1.running_mean', 'layer4.2.bn3.running_var', 'layer4.1.bn1.bias', 'layer4.1.conv2.weight', 'layer4.0.bn2.weight', 'layer4.0.bn1.bias', 'layer4.0.conv2.weight', 'layer4.0.bn1.running_var', 'layer4.1.conv1.weight', 'layer4.2.bn1.bias', 'layer4.0.bn3.bias', 'layer4.0.conv3.weight', 'layer4.2.bn2.bias', 'layer4.0.downsample.1.weight', 'layer4.0.downsample.1.bias', 'layer4.2.bn1.weight', 'layer4.0.bn2.bias'}
[2019-08-14 19:54:04,807-rk0-load_helper.py# 17] unused checkpoint keys:50
[2019-08-14 19:54:04,808-rk0-load_helper.py# 18] used keys:215
[2019-08-14 19:54:04,832-rk0-features.py# 66] Current training 0 layers:
	
[2019-08-14 19:54:04,834-rk0-features.py# 66] Current training 3 layers:
	
[2019-08-14 19:54:05,024-rk0-trainval_siamrcnn_corr.py#219] Custom(
  (dpooling): ModulatedDeformRoIPoolingPack(
    (offset_fc): Sequential(
      (0): Linear(in_features=25088, out_features=1024, bias=True)
      (1): ReLU(inplace)
      (2): Linear(in_features=1024, out_features=1024, bias=True)
      (3): ReLU(inplace)
      (4): Linear(in_features=1024, out_features=98, bias=True)
    )
    (mask_fc): Sequential(
      (0): Linear(in_features=25088, out_features=1024, bias=True)
      (1): ReLU(inplace)
      (2): Linear(in_features=1024, out_features=49, bias=True)
      (3): Sigmoid()
    )
  )
  (upSample): UpsamplingBilinear2d(size=[127, 127], mode=bilinear)
  (kp_criterion): PoseLoss(
    (crit_hm_hp): FocalLoss()
    (crit_kp): RegWeightedL1Loss()
    (crit_reg): RegL1Loss()
  )
  (features): ResDown(
    (features): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer2): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer3): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (4): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (5): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
    )
    (downsample): ResDownS(
      (downsample): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (rpn_model): UP(
    (cls): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 10, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (loc): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 20, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (pose_corr): PoseCorr(
    (kp): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (kp_model): Center_pose_head(
    (deconv_layers_new): Sequential(
      (0): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace)
      (3): ConvTranspose2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace)
      (6): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU(inplace)
      (9): ConvTranspose2d(256, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (10): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (11): ReLU(inplace)
      (12): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (13): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (14): ReLU(inplace)
      (15): ConvTranspose2d(64, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (16): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (17): ReLU(inplace)
    )
    (hps): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 34, kernel_size=(1, 1), stride=(1, 1))
    )
    (hm_hp): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 17, kernel_size=(1, 1), stride=(1, 1))
    )
    (hp_offset): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[2019-08-14 19:54:05,031-rk0-load_helper.py# 40] load pretrained model from ./snapshot_0811/checkpoint_e99.pth
[2019-08-14 19:54:05,371-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 19:54:05,373-rk0-load_helper.py# 13] [Warning] missing keys: {'dpooling.offset_fc.0.weight', 'dpooling.offset_fc.0.bias', 'dpooling.offset_fc.2.bias', 'kp_model.deconv_layers_new.0.conv_offset_mask.weight', 'kp_model.deconv_layers_new.6.bias', 'kp_model.deconv_layers_new.12.conv_offset_mask.bias', 'dpooling.offset_fc.4.weight', 'dpooling.mask_fc.2.bias', 'dpooling.mask_fc.0.weight', 'kp_model.deconv_layers_new.6.conv_offset_mask.bias', 'kp_model.deconv_layers_new.6.conv_offset_mask.weight', 'dpooling.offset_fc.4.bias', 'kp_model.deconv_layers_new.0.conv_offset_mask.bias', 'dpooling.offset_fc.2.weight', 'kp_model.deconv_layers_new.12.conv_offset_mask.weight', 'kp_model.deconv_layers_new.0.bias', 'dpooling.mask_fc.2.weight', 'kp_model.deconv_layers_new.12.bias', 'dpooling.mask_fc.0.bias'}
[2019-08-14 19:54:05,374-rk0-load_helper.py# 14] missing keys:19
[2019-08-14 19:54:05,375-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'features.features.layer4.0.conv3.weight', 'features.features.layer4.0.bn2.weight', 'features.features.layer4.1.bn1.weight', 'features.features.layer4.2.conv1.weight', 'features.features.layer4.0.downsample.1.num_batches_tracked', 'features.features.layer4.2.bn3.num_batches_tracked', 'features.features.layer4.2.bn3.bias', 'features.features.layer4.0.conv1.weight', 'features.features.layer4.0.bn2.running_mean', 'features.features.layer4.2.bn2.running_mean', 'features.features.layer4.1.bn3.bias', 'features.features.layer4.2.bn1.running_var', 'features.features.layer4.1.bn3.num_batches_tracked', 'features.features.layer4.1.bn3.running_var', 'features.features.layer4.1.conv1.weight', 'features.features.layer4.0.bn3.running_var', 'features.features.layer4.1.bn3.weight', 'features.features.layer4.2.conv3.weight', 'features.features.layer4.0.downsample.1.running_mean', 'features.features.layer4.1.conv3.weight', 'features.features.layer4.1.bn1.bias', 'features.features.layer4.2.bn3.weight', 'features.features.layer4.0.bn2.bias', 'features.features.layer4.0.bn1.weight', 'features.features.layer4.0.bn3.bias', 'features.features.layer4.1.bn2.bias', 'features.features.layer4.2.conv2.weight', 'features.features.layer4.1.bn1.running_var', 'features.downsample_p4.downsample.1.running_var', 'features.features.layer4.2.bn1.bias', 'features.downsample_p4.downsample.0.weight', 'features.features.layer4.0.bn1.running_mean', 'features.features.layer4.0.bn1.bias', 'features.features.layer4.1.bn2.weight', 'features.features.layer4.1.bn2.running_mean', 'features.features.layer4.0.bn2.num_batches_tracked', 'features.downsample_p4.downsample.1.weight', 'features.features.layer4.2.bn1.weight', 'features.features.layer4.2.bn2.running_var', 'features.features.layer4.0.downsample.1.weight', 'features.downsample_p4.downsample.1.num_batches_tracked', 'features.features.layer4.2.bn2.num_batches_tracked', 'features.downsample_p4.downsample.1.bias', 'features.features.layer4.0.conv2.weight', 'features.features.layer4.2.bn1.num_batches_tracked', 'features.features.layer4.2.bn2.bias', 'features.features.layer4.0.bn3.weight', 'features.features.layer4.2.bn3.running_var', 'features.features.layer4.0.bn3.num_batches_tracked', 'features.features.layer4.0.bn1.running_var', 'features.features.layer4.1.bn3.running_mean', 'features.features.layer4.0.bn3.running_mean', 'features.features.layer4.1.bn1.running_mean', 'features.features.layer4.1.bn2.running_var', 'features.features.layer4.0.bn1.num_batches_tracked', 'features.features.layer4.1.bn2.num_batches_tracked', 'features.features.layer4.1.conv2.weight', 'features.features.layer4.2.bn1.running_mean', 'features.features.layer4.2.bn2.weight', 'features.features.layer4.1.bn1.num_batches_tracked', 'features.features.layer4.2.bn3.running_mean', 'features.features.layer4.0.downsample.1.bias', 'features.features.layer4.0.bn2.running_var', 'features.features.layer4.0.downsample.1.running_var', 'features.features.layer4.0.downsample.0.weight', 'features.downsample_p4.downsample.1.running_mean'}
[2019-08-14 19:54:05,376-rk0-load_helper.py# 17] unused checkpoint keys:66
[2019-08-14 19:54:05,376-rk0-load_helper.py# 18] used keys:372
[2019-08-14 19:54:05,439-rk0-trainval_siamrcnn_corr.py#237] (WarmUPScheduler) lr spaces: 
[1.00000000e-03 1.58489319e-03 2.51188643e-03 3.98107171e-03
 6.30957344e-03 1.00000000e-02 9.42381613e-03 8.88083105e-03
 8.36913190e-03 7.88691602e-03 7.43248464e-03 7.00423687e-03
 6.60066404e-03 6.22034443e-03 5.86193822e-03 5.52418280e-03
 5.20588830e-03 4.90593341e-03 4.62326145e-03 4.35687658e-03
 4.10584038e-03 3.86926848e-03 3.64632748e-03 3.43623197e-03
 3.23824183e-03 3.05165956e-03 2.87582786e-03 2.71012730e-03
 2.55397414e-03 2.40681827e-03 2.26814128e-03 2.13745464e-03
 2.01429795e-03 1.89823735e-03 1.78886398e-03 1.68579252e-03
 1.58865988e-03 1.49712386e-03 1.41086200e-03 1.32957041e-03
 1.25296271e-03 1.18076902e-03 1.11273501e-03 1.04862101e-03
 9.88201163e-04 9.31262607e-04 8.77604758e-04 8.27038588e-04
 7.79385959e-04 7.34478997e-04 6.92159502e-04 6.52278389e-04
 6.14695160e-04 5.79277417e-04 5.45900387e-04 5.14446487e-04
 4.84804911e-04 4.56871234e-04 4.30547051e-04 4.05739624e-04
 3.82361562e-04 3.60330505e-04 3.39568843e-04 3.20003434e-04
 3.01565353e-04 2.84189644e-04 2.67815095e-04 2.52384021e-04
 2.37842061e-04 2.24137985e-04 2.11223516e-04 1.99053158e-04
 1.87584036e-04 1.76775747e-04 1.66590213e-04 1.56991554e-04
 1.47945954e-04 1.39421547e-04 1.31388302e-04 1.23817920e-04
 1.16683732e-04 1.09960603e-04 1.03624851e-04 9.76541539e-05
 9.20274791e-05 8.67250043e-05 8.17280495e-05 7.70190111e-05
 7.25813000e-05 6.83992826e-05 6.44582263e-05 6.07442473e-05
 5.72442617e-05 5.39459397e-05 5.08376617e-05 4.79084777e-05
 4.51480685e-05 4.25467096e-05 4.00952369e-05 3.77850140e-05
 3.56079025e-05 3.35562326e-05 3.16227766e-05 2.98007232e-05
 2.80836536e-05 2.64655188e-05 2.49406183e-05 2.35035802e-05
 2.21493418e-05 2.08731324e-05 1.96704562e-05 1.85370763e-05
 1.74689999e-05 1.64624643e-05 1.55139236e-05 1.46200364e-05
 1.37776535e-05 1.29838073e-05 1.22357013e-05 1.15306999e-05
 1.08663196e-05 1.02402198e-05 9.65019485e-06 9.09416619e-06
 8.57017501e-06 8.07637535e-06 7.61102764e-06 7.17249250e-06
 6.75922506e-06 6.36976942e-06 6.00275358e-06 5.65688460e-06
 5.33094404e-06 5.02378365e-06 4.73432134e-06 4.46153738e-06
 4.20447080e-06 3.96221597e-06 3.73391948e-06 3.51877706e-06
 3.31603081e-06 3.12496646e-06 2.94491094e-06 2.77522992e-06
 2.61532565e-06 2.46463481e-06 2.32262652e-06 2.18880053e-06
 2.06268538e-06 1.94383677e-06 1.83183603e-06 1.72628860e-06
 1.62682263e-06 1.53308774e-06 1.44475370e-06 1.36150932e-06
 1.28306135e-06 1.20913342e-06 1.13946511e-06 1.07381097e-06
 1.01193971e-06 9.53633378e-07 8.98686561e-07 8.46905692e-07
 7.98108352e-07 7.52122637e-07 7.08786544e-07 6.67947407e-07
 6.29461355e-07 5.93192807e-07 5.59013995e-07 5.26804510e-07
 4.96450884e-07 4.67846185e-07 4.40889643e-07 4.15486293e-07
 3.91546643e-07 3.68986357e-07 3.47725959e-07 3.27690550e-07
 3.08809549e-07 2.91016441e-07 2.74248544e-07 2.58446785e-07
 2.43555498e-07 2.29522223e-07 2.16297523e-07 2.03834809e-07
 1.92090176e-07 1.81022250e-07 1.70592040e-07 1.60762802e-07
 1.51499909e-07 1.42770728e-07 1.34544509e-07 1.26792272e-07
 1.19486706e-07 1.12602075e-07 1.06114125e-07 1.00000000e-07]
[2019-08-14 19:54:05,446-rk0-trainval_siamrcnn_corr.py#239] model prepare done
[2019-08-14 19:54:05,449-rk0-trainval_siamrcnn_corr.py#296] train epoch:0
[2019-08-14 19:57:36,416-rk0-trainval_siamrcnn_corr.py#197] 
PyTorch version: 0.4.1.post2
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: CentOS Linux 7 (Core)
GCC version: (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11)
CMake version: version 2.8.12.2

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: 
GPU 0: GeForce GTX 1080 Ti
GPU 1: GeForce GTX 1080 Ti
GPU 2: GeForce GTX 1080 Ti
GPU 3: GeForce GTX 1080 Ti
GPU 4: GeForce GTX 1080 Ti
GPU 5: GeForce GTX 1080 Ti

Nvidia driver version: 410.48
cuDNN version: Could not collect

Versions of relevant libraries:
[pip] Could not collect
[conda] pytorch                   0.4.1           py36_py35_py27__9.0.176_7.1.2_2    pytorch
[conda] torchvision               0.2.1                    py36_1    pytorch
        OpenCV (3.4.3)
[2019-08-14 19:57:36,417-rk0-trainval_siamrcnn_corr.py#198] Namespace(arch='', batch=96, clip=10.0, config='config.json', debug=False, dense_hp=False, epochs=200, hm_hp=True, hm_hp_weight=1.5, hp_weight=1, log='logs/log_0814.txt', log_dir='board/show_0814', lr=0.001, momentum=0.9, mse_loss=False, not_hm_hp=False, not_reg_bbox=False, not_reg_hp_offset=False, off_weight=1, output_size=56, pretrained='./snapshot_0811/checkpoint_e99.pth', print_freq=10, reg_bbox=True, reg_hp_offset=True, reg_loss='l1', resume='', save_dir='snapshot_0814', save_freq=5, start_epoch=0, weight_decay=0.0001, workers=4)
[2019-08-14 19:57:36,419-rk0-trainval_siamrcnn_corr.py#201] config 
{
    "network": {
        "arch": "Custom"
    },
    "hp": {
        "instance_size": 255,
        "base_size": 8
    },
    "lr": {
        "feature_lr_mult": 1.0,
        "rpn_lr_mult": 1.0,
        "mask_lr_mult": 1.0,
        "type": "log",
        "start_lr": 0.01,
        "end_lr": 1e-07,
        "warmup": {
            "start_lr": 0.001,
            "end_lr": 0.01,
            "type": "step",
            "step": 1,
            "epoch": 5
        }
    },
    "loss": {
        "weight": [
            1.0,
            1.2,
            1.0
        ],
        "reg": {
            "loss": "L1Loss"
        },
        "cls": {
            "split": true
        }
    },
    "train_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/train2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 4,
                "scale": 0.05
            },
            "search": {
                "shift": 0.0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0.15
        }
    },
    "val_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/val2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 0,
                "scale": 0.0
            },
            "search": {
                "shift": 0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0
        }
    },
    "anchors": {
        "stride": 8,
        "ratios": [
            0.33,
            0.5,
            1,
            2,
            3
        ],
        "scales": [
            8
        ],
        "round_dight": 0
    },
    "mask": {},
    "clip": {
        "feature": 10.0,
        "rpn": 10.0,
        "split": false
    }
}
[2019-08-14 19:57:36,429-rk0-trainval_siamrcnn_corr.py#144] build train dataset
[2019-08-14 19:57:36,432-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/train2017_pose_siamfc.json
[2019-08-14 19:57:39,252-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/train2017_pose_siamfc.json loaded.
[2019-08-14 19:57:39,287-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [45900/45900] path {}.{}.{}.jpg
[2019-08-14 19:57:39,354-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 19:57:39,355-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 19:57:39,358-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0.15,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 45900
}
[2019-08-14 19:57:39,425-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 19:57:39,425-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 19:57:39,426-rk0-trainval_siamrcnn_corr.py#148] build val dataset
[2019-08-14 19:57:39,428-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/val2017_pose_siamfc.json
[2019-08-14 19:57:39,521-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/val2017_pose_siamfc.json loaded.
[2019-08-14 19:57:39,524-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [1899/1899] path {}.{}.{}.jpg
[2019-08-14 19:57:39,528-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 19:57:39,528-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 19:57:39,529-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 1899
}
[2019-08-14 19:57:39,533-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 19:57:39,534-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 19:57:39,535-rk0-trainval_siamrcnn_corr.py#159] build dataset done
[2019-08-14 19:57:46,994-rk0-load_helper.py# 40] load pretrained model from ../resnet.model
[2019-08-14 19:57:47,594-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 19:57:47,619-rk0-load_helper.py# 13] [Warning] missing keys: {'bn1.num_batches_tracked', 'layer3.4.bn2.num_batches_tracked', 'layer1.1.bn3.num_batches_tracked', 'layer2.1.bn2.num_batches_tracked', 'layer3.0.bn3.num_batches_tracked', 'layer3.5.bn2.num_batches_tracked', 'layer2.2.bn1.num_batches_tracked', 'layer1.0.downsample.1.num_batches_tracked', 'layer3.3.bn2.num_batches_tracked', 'layer3.5.bn1.num_batches_tracked', 'layer2.3.bn3.num_batches_tracked', 'layer3.3.bn3.num_batches_tracked', 'layer3.1.bn1.num_batches_tracked', 'layer1.0.bn2.num_batches_tracked', 'layer1.2.bn3.num_batches_tracked', 'layer2.0.bn3.num_batches_tracked', 'layer2.3.bn1.num_batches_tracked', 'layer3.3.bn1.num_batches_tracked', 'layer3.0.bn2.num_batches_tracked', 'layer3.0.downsample.1.num_batches_tracked', 'layer1.0.bn1.num_batches_tracked', 'layer1.0.bn3.num_batches_tracked', 'layer1.2.bn1.num_batches_tracked', 'layer3.2.bn1.num_batches_tracked', 'layer3.1.bn3.num_batches_tracked', 'layer3.0.bn1.num_batches_tracked', 'layer3.5.bn3.num_batches_tracked', 'layer1.1.bn2.num_batches_tracked', 'layer2.3.bn2.num_batches_tracked', 'layer3.4.bn3.num_batches_tracked', 'layer3.4.bn1.num_batches_tracked', 'layer1.1.bn1.num_batches_tracked', 'layer2.0.bn1.num_batches_tracked', 'layer1.2.bn2.num_batches_tracked', 'layer2.1.bn1.num_batches_tracked', 'layer3.1.bn2.num_batches_tracked', 'layer3.2.bn2.num_batches_tracked', 'layer2.1.bn3.num_batches_tracked', 'layer3.2.bn3.num_batches_tracked', 'layer2.2.bn2.num_batches_tracked', 'layer2.0.downsample.1.num_batches_tracked', 'layer2.0.bn2.num_batches_tracked', 'layer2.2.bn3.num_batches_tracked'}
[2019-08-14 19:57:47,620-rk0-load_helper.py# 14] missing keys:43
[2019-08-14 19:57:47,620-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'layer4.0.bn1.weight', 'layer4.2.bn3.running_var', 'layer4.0.bn2.running_mean', 'layer4.0.bn3.bias', 'layer4.2.bn3.running_mean', 'layer4.2.bn2.running_mean', 'layer4.0.downsample.1.weight', 'layer4.1.bn1.weight', 'layer4.0.conv2.weight', 'layer4.2.conv2.weight', 'layer4.2.conv3.weight', 'layer4.2.bn1.weight', 'layer4.0.downsample.0.weight', 'layer4.1.bn1.running_var', 'layer4.2.bn2.weight', 'layer4.1.bn1.bias', 'layer4.2.bn3.bias', 'layer4.1.bn2.bias', 'layer4.0.bn2.running_var', 'layer4.2.conv1.weight', 'layer4.1.bn3.weight', 'layer4.1.bn2.running_var', 'layer4.0.bn1.bias', 'layer4.2.bn1.running_var', 'layer4.0.downsample.1.bias', 'layer4.0.bn2.weight', 'layer4.0.conv1.weight', 'layer4.1.conv2.weight', 'layer4.0.downsample.1.running_mean', 'layer4.0.conv3.weight', 'layer4.0.bn3.running_var', 'layer4.0.bn3.running_mean', 'layer4.0.downsample.1.running_var', 'layer4.1.bn1.running_mean', 'layer4.1.bn3.bias', 'layer4.1.conv1.weight', 'layer4.0.bn2.bias', 'layer4.2.bn2.running_var', 'layer4.2.bn1.bias', 'layer4.0.bn1.running_var', 'layer4.2.bn2.bias', 'layer4.1.bn2.weight', 'layer4.1.bn2.running_mean', 'layer4.2.bn1.running_mean', 'layer4.0.bn1.running_mean', 'layer4.1.bn3.running_var', 'layer4.2.bn3.weight', 'layer4.1.conv3.weight', 'layer4.1.bn3.running_mean', 'layer4.0.bn3.weight'}
[2019-08-14 19:57:47,692-rk0-load_helper.py# 17] unused checkpoint keys:50
[2019-08-14 19:57:47,693-rk0-load_helper.py# 18] used keys:215
[2019-08-14 19:57:47,748-rk0-features.py# 66] Current training 0 layers:
	
[2019-08-14 19:57:47,763-rk0-features.py# 66] Current training 3 layers:
	
[2019-08-14 19:57:48,440-rk0-trainval_siamrcnn_corr.py#219] Custom(
  (upSample): UpsamplingBilinear2d(size=[127, 127], mode=bilinear)
  (kp_criterion): PoseLoss(
    (crit_hm_hp): FocalLoss()
    (crit_kp): RegWeightedL1Loss()
    (crit_reg): RegL1Loss()
  )
  (features): ResDown(
    (features): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer2): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer3): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (4): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (5): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
    )
    (downsample): ResDownS(
      (downsample): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (rpn_model): UP(
    (cls): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 10, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (loc): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 20, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (pose_corr): PoseCorr(
    (kp): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (kp_model): Center_pose_head(
    (deconv_layers_new): Sequential(
      (0): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace)
      (3): ConvTranspose2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace)
      (6): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU(inplace)
      (9): ConvTranspose2d(256, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (10): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (11): ReLU(inplace)
      (12): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (13): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (14): ReLU(inplace)
      (15): ConvTranspose2d(64, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (16): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (17): ReLU(inplace)
    )
    (hps): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 34, kernel_size=(1, 1), stride=(1, 1))
    )
    (hm_hp): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 17, kernel_size=(1, 1), stride=(1, 1))
    )
    (hp_offset): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (dpooling): ModulatedDeformRoIPoolingPack(
    (offset_fc): Sequential(
      (0): Linear(in_features=25088, out_features=1024, bias=True)
      (1): ReLU(inplace)
      (2): Linear(in_features=1024, out_features=1024, bias=True)
      (3): ReLU(inplace)
      (4): Linear(in_features=1024, out_features=98, bias=True)
    )
    (mask_fc): Sequential(
      (0): Linear(in_features=25088, out_features=1024, bias=True)
      (1): ReLU(inplace)
      (2): Linear(in_features=1024, out_features=49, bias=True)
      (3): Sigmoid()
    )
  )
)
[2019-08-14 19:57:48,446-rk0-load_helper.py# 40] load pretrained model from ./snapshot_0811/checkpoint_e99.pth
[2019-08-14 19:57:48,837-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 19:57:48,839-rk0-load_helper.py# 13] [Warning] missing keys: {'dpooling.offset_fc.2.bias', 'kp_model.deconv_layers_new.12.conv_offset_mask.weight', 'dpooling.mask_fc.2.weight', 'dpooling.offset_fc.0.weight', 'dpooling.mask_fc.0.bias', 'kp_model.deconv_layers_new.6.conv_offset_mask.weight', 'kp_model.deconv_layers_new.0.bias', 'dpooling.offset_fc.4.weight', 'dpooling.offset_fc.4.bias', 'kp_model.deconv_layers_new.12.bias', 'kp_model.deconv_layers_new.0.conv_offset_mask.bias', 'dpooling.mask_fc.0.weight', 'kp_model.deconv_layers_new.12.conv_offset_mask.bias', 'dpooling.mask_fc.2.bias', 'kp_model.deconv_layers_new.6.conv_offset_mask.bias', 'kp_model.deconv_layers_new.0.conv_offset_mask.weight', 'dpooling.offset_fc.0.bias', 'dpooling.offset_fc.2.weight', 'kp_model.deconv_layers_new.6.bias'}
[2019-08-14 19:57:48,840-rk0-load_helper.py# 14] missing keys:19
[2019-08-14 19:57:48,841-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'features.features.layer4.1.bn3.running_var', 'features.features.layer4.0.downsample.1.running_var', 'features.features.layer4.1.conv3.weight', 'features.features.layer4.0.bn3.running_mean', 'features.features.layer4.0.bn1.weight', 'features.features.layer4.0.downsample.1.running_mean', 'features.features.layer4.2.conv2.weight', 'features.downsample_p4.downsample.1.bias', 'features.features.layer4.1.bn2.num_batches_tracked', 'features.features.layer4.2.bn3.num_batches_tracked', 'features.features.layer4.2.bn1.bias', 'features.features.layer4.0.bn3.bias', 'features.features.layer4.2.bn3.running_mean', 'features.features.layer4.0.downsample.1.bias', 'features.features.layer4.1.conv1.weight', 'features.features.layer4.1.bn2.bias', 'features.features.layer4.2.bn2.num_batches_tracked', 'features.features.layer4.2.bn3.running_var', 'features.features.layer4.2.conv1.weight', 'features.features.layer4.1.bn2.weight', 'features.downsample_p4.downsample.1.weight', 'features.features.layer4.1.bn3.num_batches_tracked', 'features.features.layer4.1.bn1.weight', 'features.features.layer4.0.bn2.bias', 'features.features.layer4.1.bn2.running_var', 'features.features.layer4.2.bn1.running_mean', 'features.features.layer4.1.bn1.num_batches_tracked', 'features.features.layer4.0.bn2.num_batches_tracked', 'features.features.layer4.0.bn2.running_mean', 'features.features.layer4.0.bn3.num_batches_tracked', 'features.features.layer4.1.bn3.weight', 'features.features.layer4.0.conv2.weight', 'features.features.layer4.0.bn3.weight', 'features.features.layer4.0.conv3.weight', 'features.features.layer4.2.bn2.bias', 'features.features.layer4.2.conv3.weight', 'features.features.layer4.1.bn1.bias', 'features.features.layer4.0.bn1.running_mean', 'features.features.layer4.2.bn2.weight', 'features.features.layer4.0.bn1.num_batches_tracked', 'features.features.layer4.2.bn1.running_var', 'features.features.layer4.2.bn3.weight', 'features.features.layer4.0.conv1.weight', 'features.downsample_p4.downsample.1.num_batches_tracked', 'features.features.layer4.2.bn1.num_batches_tracked', 'features.features.layer4.2.bn2.running_mean', 'features.features.layer4.0.bn2.running_var', 'features.features.layer4.0.bn3.running_var', 'features.features.layer4.1.bn1.running_var', 'features.features.layer4.1.bn3.bias', 'features.features.layer4.1.bn2.running_mean', 'features.features.layer4.0.bn1.bias', 'features.features.layer4.0.downsample.1.num_batches_tracked', 'features.features.layer4.0.downsample.0.weight', 'features.downsample_p4.downsample.1.running_mean', 'features.features.layer4.0.bn2.weight', 'features.features.layer4.0.bn1.running_var', 'features.features.layer4.1.bn1.running_mean', 'features.features.layer4.1.bn3.running_mean', 'features.downsample_p4.downsample.1.running_var', 'features.downsample_p4.downsample.0.weight', 'features.features.layer4.1.conv2.weight', 'features.features.layer4.2.bn3.bias', 'features.features.layer4.0.downsample.1.weight', 'features.features.layer4.2.bn1.weight', 'features.features.layer4.2.bn2.running_var'}
[2019-08-14 19:57:48,842-rk0-load_helper.py# 17] unused checkpoint keys:66
[2019-08-14 19:57:48,842-rk0-load_helper.py# 18] used keys:372
[2019-08-14 19:57:48,962-rk0-trainval_siamrcnn_corr.py#237] (WarmUPScheduler) lr spaces: 
[1.00000000e-03 1.58489319e-03 2.51188643e-03 3.98107171e-03
 6.30957344e-03 1.00000000e-02 9.42381613e-03 8.88083105e-03
 8.36913190e-03 7.88691602e-03 7.43248464e-03 7.00423687e-03
 6.60066404e-03 6.22034443e-03 5.86193822e-03 5.52418280e-03
 5.20588830e-03 4.90593341e-03 4.62326145e-03 4.35687658e-03
 4.10584038e-03 3.86926848e-03 3.64632748e-03 3.43623197e-03
 3.23824183e-03 3.05165956e-03 2.87582786e-03 2.71012730e-03
 2.55397414e-03 2.40681827e-03 2.26814128e-03 2.13745464e-03
 2.01429795e-03 1.89823735e-03 1.78886398e-03 1.68579252e-03
 1.58865988e-03 1.49712386e-03 1.41086200e-03 1.32957041e-03
 1.25296271e-03 1.18076902e-03 1.11273501e-03 1.04862101e-03
 9.88201163e-04 9.31262607e-04 8.77604758e-04 8.27038588e-04
 7.79385959e-04 7.34478997e-04 6.92159502e-04 6.52278389e-04
 6.14695160e-04 5.79277417e-04 5.45900387e-04 5.14446487e-04
 4.84804911e-04 4.56871234e-04 4.30547051e-04 4.05739624e-04
 3.82361562e-04 3.60330505e-04 3.39568843e-04 3.20003434e-04
 3.01565353e-04 2.84189644e-04 2.67815095e-04 2.52384021e-04
 2.37842061e-04 2.24137985e-04 2.11223516e-04 1.99053158e-04
 1.87584036e-04 1.76775747e-04 1.66590213e-04 1.56991554e-04
 1.47945954e-04 1.39421547e-04 1.31388302e-04 1.23817920e-04
 1.16683732e-04 1.09960603e-04 1.03624851e-04 9.76541539e-05
 9.20274791e-05 8.67250043e-05 8.17280495e-05 7.70190111e-05
 7.25813000e-05 6.83992826e-05 6.44582263e-05 6.07442473e-05
 5.72442617e-05 5.39459397e-05 5.08376617e-05 4.79084777e-05
 4.51480685e-05 4.25467096e-05 4.00952369e-05 3.77850140e-05
 3.56079025e-05 3.35562326e-05 3.16227766e-05 2.98007232e-05
 2.80836536e-05 2.64655188e-05 2.49406183e-05 2.35035802e-05
 2.21493418e-05 2.08731324e-05 1.96704562e-05 1.85370763e-05
 1.74689999e-05 1.64624643e-05 1.55139236e-05 1.46200364e-05
 1.37776535e-05 1.29838073e-05 1.22357013e-05 1.15306999e-05
 1.08663196e-05 1.02402198e-05 9.65019485e-06 9.09416619e-06
 8.57017501e-06 8.07637535e-06 7.61102764e-06 7.17249250e-06
 6.75922506e-06 6.36976942e-06 6.00275358e-06 5.65688460e-06
 5.33094404e-06 5.02378365e-06 4.73432134e-06 4.46153738e-06
 4.20447080e-06 3.96221597e-06 3.73391948e-06 3.51877706e-06
 3.31603081e-06 3.12496646e-06 2.94491094e-06 2.77522992e-06
 2.61532565e-06 2.46463481e-06 2.32262652e-06 2.18880053e-06
 2.06268538e-06 1.94383677e-06 1.83183603e-06 1.72628860e-06
 1.62682263e-06 1.53308774e-06 1.44475370e-06 1.36150932e-06
 1.28306135e-06 1.20913342e-06 1.13946511e-06 1.07381097e-06
 1.01193971e-06 9.53633378e-07 8.98686561e-07 8.46905692e-07
 7.98108352e-07 7.52122637e-07 7.08786544e-07 6.67947407e-07
 6.29461355e-07 5.93192807e-07 5.59013995e-07 5.26804510e-07
 4.96450884e-07 4.67846185e-07 4.40889643e-07 4.15486293e-07
 3.91546643e-07 3.68986357e-07 3.47725959e-07 3.27690550e-07
 3.08809549e-07 2.91016441e-07 2.74248544e-07 2.58446785e-07
 2.43555498e-07 2.29522223e-07 2.16297523e-07 2.03834809e-07
 1.92090176e-07 1.81022250e-07 1.70592040e-07 1.60762802e-07
 1.51499909e-07 1.42770728e-07 1.34544509e-07 1.26792272e-07
 1.19486706e-07 1.12602075e-07 1.06114125e-07 1.00000000e-07]
[2019-08-14 19:57:48,968-rk0-trainval_siamrcnn_corr.py#239] model prepare done
[2019-08-14 19:57:48,970-rk0-trainval_siamrcnn_corr.py#296] train epoch:0
[2019-08-14 20:06:39,129-rk0-trainval_siamrcnn_corr.py#197] 
PyTorch version: 0.4.1.post2
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: CentOS Linux 7 (Core)
GCC version: (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11)
CMake version: version 2.8.12.2

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: 
GPU 0: GeForce GTX 1080 Ti
GPU 1: GeForce GTX 1080 Ti
GPU 2: GeForce GTX 1080 Ti
GPU 3: GeForce GTX 1080 Ti
GPU 4: GeForce GTX 1080 Ti
GPU 5: GeForce GTX 1080 Ti

Nvidia driver version: 410.48
cuDNN version: Could not collect

Versions of relevant libraries:
[pip] Could not collect
[conda] pytorch                   0.4.1           py36_py35_py27__9.0.176_7.1.2_2    pytorch
[conda] torchvision               0.2.1                    py36_1    pytorch
        OpenCV (3.4.3)
[2019-08-14 20:06:39,130-rk0-trainval_siamrcnn_corr.py#198] Namespace(arch='', batch=96, clip=10.0, config='config.json', debug=False, dense_hp=False, epochs=200, hm_hp=True, hm_hp_weight=1.5, hp_weight=1, log='logs/log_0814.txt', log_dir='board/show_0814', lr=0.001, momentum=0.9, mse_loss=False, not_hm_hp=False, not_reg_bbox=False, not_reg_hp_offset=False, off_weight=1, output_size=56, pretrained='./snapshot_0811/checkpoint_e99.pth', print_freq=10, reg_bbox=True, reg_hp_offset=True, reg_loss='l1', resume='', save_dir='snapshot_0814', save_freq=5, start_epoch=0, weight_decay=0.0001, workers=4)
[2019-08-14 20:06:39,132-rk0-trainval_siamrcnn_corr.py#201] config 
{
    "network": {
        "arch": "Custom"
    },
    "hp": {
        "instance_size": 255,
        "base_size": 8
    },
    "lr": {
        "feature_lr_mult": 1.0,
        "rpn_lr_mult": 1.0,
        "mask_lr_mult": 1.0,
        "type": "log",
        "start_lr": 0.01,
        "end_lr": 1e-07,
        "warmup": {
            "start_lr": 0.001,
            "end_lr": 0.01,
            "type": "step",
            "step": 1,
            "epoch": 5
        }
    },
    "loss": {
        "weight": [
            1.0,
            1.2,
            1.0
        ],
        "reg": {
            "loss": "L1Loss"
        },
        "cls": {
            "split": true
        }
    },
    "train_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/train2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 4,
                "scale": 0.05
            },
            "search": {
                "shift": 0.0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0.15
        }
    },
    "val_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/val2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 0,
                "scale": 0.0
            },
            "search": {
                "shift": 0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0
        }
    },
    "anchors": {
        "stride": 8,
        "ratios": [
            0.33,
            0.5,
            1,
            2,
            3
        ],
        "scales": [
            8
        ],
        "round_dight": 0
    },
    "mask": {},
    "clip": {
        "feature": 10.0,
        "rpn": 10.0,
        "split": false
    }
}
[2019-08-14 20:06:39,225-rk0-trainval_siamrcnn_corr.py#144] build train dataset
[2019-08-14 20:06:39,509-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/train2017_pose_siamfc.json
[2019-08-14 20:06:43,225-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/train2017_pose_siamfc.json loaded.
[2019-08-14 20:06:43,261-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [45900/45900] path {}.{}.{}.jpg
[2019-08-14 20:06:43,328-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 20:06:43,329-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 20:06:43,331-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0.15,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 45900
}
[2019-08-14 20:06:43,398-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 20:06:43,398-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 20:06:43,399-rk0-trainval_siamrcnn_corr.py#148] build val dataset
[2019-08-14 20:06:43,400-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/val2017_pose_siamfc.json
[2019-08-14 20:06:43,492-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/val2017_pose_siamfc.json loaded.
[2019-08-14 20:06:43,495-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [1899/1899] path {}.{}.{}.jpg
[2019-08-14 20:06:43,498-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 20:06:43,498-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 20:06:43,499-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 1899
}
[2019-08-14 20:06:43,502-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 20:06:43,503-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 20:06:43,504-rk0-trainval_siamrcnn_corr.py#159] build dataset done
[2019-08-14 20:06:48,832-rk0-load_helper.py# 40] load pretrained model from ../resnet.model
[2019-08-14 20:06:49,488-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 20:06:49,490-rk0-load_helper.py# 13] [Warning] missing keys: {'layer3.5.bn3.num_batches_tracked', 'layer3.0.bn2.num_batches_tracked', 'layer2.3.bn2.num_batches_tracked', 'layer1.0.bn3.num_batches_tracked', 'layer2.3.bn1.num_batches_tracked', 'layer3.5.bn1.num_batches_tracked', 'layer2.2.bn2.num_batches_tracked', 'layer2.0.bn3.num_batches_tracked', 'layer1.0.downsample.1.num_batches_tracked', 'layer2.2.bn1.num_batches_tracked', 'layer3.3.bn2.num_batches_tracked', 'layer1.2.bn2.num_batches_tracked', 'layer2.1.bn2.num_batches_tracked', 'layer3.3.bn3.num_batches_tracked', 'layer1.1.bn2.num_batches_tracked', 'layer3.4.bn3.num_batches_tracked', 'layer2.1.bn1.num_batches_tracked', 'layer3.0.bn3.num_batches_tracked', 'layer3.2.bn1.num_batches_tracked', 'layer1.1.bn1.num_batches_tracked', 'layer3.2.bn3.num_batches_tracked', 'layer1.2.bn1.num_batches_tracked', 'layer3.1.bn1.num_batches_tracked', 'layer3.5.bn2.num_batches_tracked', 'layer3.4.bn2.num_batches_tracked', 'layer1.0.bn2.num_batches_tracked', 'layer2.1.bn3.num_batches_tracked', 'bn1.num_batches_tracked', 'layer3.4.bn1.num_batches_tracked', 'layer3.1.bn3.num_batches_tracked', 'layer1.1.bn3.num_batches_tracked', 'layer3.0.downsample.1.num_batches_tracked', 'layer2.0.bn1.num_batches_tracked', 'layer2.2.bn3.num_batches_tracked', 'layer1.0.bn1.num_batches_tracked', 'layer3.3.bn1.num_batches_tracked', 'layer2.0.downsample.1.num_batches_tracked', 'layer2.0.bn2.num_batches_tracked', 'layer1.2.bn3.num_batches_tracked', 'layer3.2.bn2.num_batches_tracked', 'layer3.0.bn1.num_batches_tracked', 'layer3.1.bn2.num_batches_tracked', 'layer2.3.bn3.num_batches_tracked'}
[2019-08-14 20:06:49,491-rk0-load_helper.py# 14] missing keys:43
[2019-08-14 20:06:49,492-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'layer4.2.bn2.bias', 'layer4.0.bn1.bias', 'layer4.1.bn2.bias', 'layer4.0.bn1.weight', 'layer4.2.conv1.weight', 'layer4.1.bn3.weight', 'layer4.2.conv3.weight', 'layer4.2.bn3.weight', 'layer4.1.bn3.running_var', 'layer4.1.bn3.bias', 'layer4.0.bn1.running_var', 'layer4.2.bn1.running_var', 'layer4.2.bn2.running_mean', 'layer4.1.bn1.running_var', 'layer4.0.downsample.1.weight', 'layer4.1.bn2.weight', 'layer4.1.bn1.weight', 'layer4.0.bn3.bias', 'layer4.2.bn1.bias', 'layer4.1.bn1.bias', 'layer4.2.bn2.weight', 'layer4.0.conv3.weight', 'layer4.0.conv1.weight', 'layer4.2.bn3.running_mean', 'layer4.2.bn2.running_var', 'layer4.0.bn2.bias', 'layer4.0.bn2.running_var', 'layer4.0.bn3.running_var', 'layer4.0.bn3.weight', 'layer4.1.bn2.running_var', 'layer4.0.conv2.weight', 'layer4.0.bn3.running_mean', 'layer4.1.conv1.weight', 'layer4.0.bn2.weight', 'layer4.1.bn3.running_mean', 'layer4.0.bn1.running_mean', 'layer4.1.bn1.running_mean', 'layer4.2.bn3.bias', 'layer4.0.downsample.1.bias', 'layer4.2.conv2.weight', 'layer4.1.conv2.weight', 'layer4.1.bn2.running_mean', 'layer4.2.bn1.weight', 'layer4.0.downsample.0.weight', 'layer4.0.downsample.1.running_mean', 'layer4.2.bn1.running_mean', 'layer4.2.bn3.running_var', 'layer4.1.conv3.weight', 'layer4.0.bn2.running_mean', 'layer4.0.downsample.1.running_var'}
[2019-08-14 20:06:49,492-rk0-load_helper.py# 17] unused checkpoint keys:50
[2019-08-14 20:06:49,493-rk0-load_helper.py# 18] used keys:215
[2019-08-14 20:06:49,523-rk0-features.py# 66] Current training 0 layers:
	
[2019-08-14 20:06:49,525-rk0-features.py# 66] Current training 3 layers:
	
[2019-08-14 20:06:50,235-rk0-trainval_siamrcnn_corr.py#219] Custom(
  (upSample): UpsamplingBilinear2d(size=[127, 127], mode=bilinear)
  (kp_criterion): PoseLoss(
    (crit_hm_hp): FocalLoss()
    (crit_kp): RegWeightedL1Loss()
    (crit_reg): RegL1Loss()
  )
  (features): ResDown(
    (features): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer2): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer3): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (4): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (5): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
    )
    (downsample): ResDownS(
      (downsample): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (rpn_model): UP(
    (cls): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 10, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (loc): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 20, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (pose_corr): PoseCorr(
    (kp): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (kp_model): Center_pose_head(
    (deconv_layers_new): Sequential(
      (0): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace)
      (3): ConvTranspose2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace)
      (6): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU(inplace)
      (9): ConvTranspose2d(256, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (10): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (11): ReLU(inplace)
      (12): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (13): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (14): ReLU(inplace)
      (15): ConvTranspose2d(64, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (16): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (17): ReLU(inplace)
    )
    (hps): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 34, kernel_size=(1, 1), stride=(1, 1))
    )
    (hm_hp): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 17, kernel_size=(1, 1), stride=(1, 1))
    )
    (hp_offset): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (dpooling): ModulatedDeformRoIPoolingPack(
    (offset_fc): Sequential(
      (0): Linear(in_features=25088, out_features=1024, bias=True)
      (1): ReLU(inplace)
      (2): Linear(in_features=1024, out_features=1024, bias=True)
      (3): ReLU(inplace)
      (4): Linear(in_features=1024, out_features=98, bias=True)
    )
    (mask_fc): Sequential(
      (0): Linear(in_features=25088, out_features=1024, bias=True)
      (1): ReLU(inplace)
      (2): Linear(in_features=1024, out_features=49, bias=True)
      (3): Sigmoid()
    )
  )
)
[2019-08-14 20:06:50,248-rk0-load_helper.py# 40] load pretrained model from ./snapshot_0811/checkpoint_e99.pth
[2019-08-14 20:06:51,402-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 20:06:51,405-rk0-load_helper.py# 13] [Warning] missing keys: {'dpooling.mask_fc.0.weight', 'kp_model.deconv_layers_new.0.bias', 'dpooling.offset_fc.0.bias', 'kp_model.deconv_layers_new.6.conv_offset_mask.weight', 'dpooling.offset_fc.4.weight', 'dpooling.offset_fc.2.weight', 'dpooling.mask_fc.0.bias', 'dpooling.offset_fc.2.bias', 'kp_model.deconv_layers_new.6.bias', 'kp_model.deconv_layers_new.12.conv_offset_mask.weight', 'dpooling.mask_fc.2.bias', 'kp_model.deconv_layers_new.0.conv_offset_mask.bias', 'dpooling.mask_fc.2.weight', 'dpooling.offset_fc.4.bias', 'kp_model.deconv_layers_new.12.conv_offset_mask.bias', 'kp_model.deconv_layers_new.12.bias', 'kp_model.deconv_layers_new.6.conv_offset_mask.bias', 'kp_model.deconv_layers_new.0.conv_offset_mask.weight', 'dpooling.offset_fc.0.weight'}
[2019-08-14 20:06:51,406-rk0-load_helper.py# 14] missing keys:19
[2019-08-14 20:06:51,407-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'features.features.layer4.1.bn3.weight', 'features.features.layer4.1.bn3.running_mean', 'features.features.layer4.0.bn1.num_batches_tracked', 'features.features.layer4.1.bn2.num_batches_tracked', 'features.features.layer4.1.bn3.bias', 'features.downsample_p4.downsample.1.weight', 'features.features.layer4.2.bn1.running_mean', 'features.features.layer4.1.bn3.running_var', 'features.features.layer4.1.conv1.weight', 'features.downsample_p4.downsample.1.num_batches_tracked', 'features.features.layer4.1.bn1.bias', 'features.features.layer4.2.bn2.running_mean', 'features.features.layer4.2.conv1.weight', 'features.features.layer4.0.bn3.num_batches_tracked', 'features.features.layer4.1.bn2.running_mean', 'features.features.layer4.2.conv2.weight', 'features.features.layer4.0.conv3.weight', 'features.features.layer4.0.bn2.weight', 'features.downsample_p4.downsample.1.bias', 'features.features.layer4.0.bn3.running_mean', 'features.features.layer4.0.bn1.bias', 'features.features.layer4.1.conv2.weight', 'features.features.layer4.2.bn1.weight', 'features.features.layer4.2.conv3.weight', 'features.features.layer4.0.downsample.1.running_var', 'features.features.layer4.2.bn2.bias', 'features.downsample_p4.downsample.0.weight', 'features.features.layer4.0.downsample.0.weight', 'features.features.layer4.1.bn3.num_batches_tracked', 'features.features.layer4.2.bn3.running_mean', 'features.features.layer4.0.downsample.1.bias', 'features.features.layer4.0.downsample.1.running_mean', 'features.downsample_p4.downsample.1.running_var', 'features.features.layer4.2.bn3.weight', 'features.features.layer4.2.bn2.num_batches_tracked', 'features.features.layer4.1.conv3.weight', 'features.features.layer4.1.bn2.weight', 'features.features.layer4.1.bn1.weight', 'features.features.layer4.0.conv2.weight', 'features.features.layer4.2.bn1.bias', 'features.features.layer4.2.bn1.num_batches_tracked', 'features.features.layer4.1.bn1.num_batches_tracked', 'features.features.layer4.0.conv1.weight', 'features.features.layer4.1.bn2.bias', 'features.features.layer4.0.bn1.running_var', 'features.features.layer4.1.bn2.running_var', 'features.features.layer4.0.bn2.running_mean', 'features.features.layer4.2.bn3.running_var', 'features.features.layer4.0.bn3.weight', 'features.downsample_p4.downsample.1.running_mean', 'features.features.layer4.1.bn1.running_var', 'features.features.layer4.0.bn2.num_batches_tracked', 'features.features.layer4.0.downsample.1.weight', 'features.features.layer4.0.bn3.bias', 'features.features.layer4.2.bn3.num_batches_tracked', 'features.features.layer4.0.bn1.running_mean', 'features.features.layer4.0.bn3.running_var', 'features.features.layer4.2.bn1.running_var', 'features.features.layer4.1.bn1.running_mean', 'features.features.layer4.2.bn2.weight', 'features.features.layer4.2.bn2.running_var', 'features.features.layer4.2.bn3.bias', 'features.features.layer4.0.bn1.weight', 'features.features.layer4.0.downsample.1.num_batches_tracked', 'features.features.layer4.0.bn2.running_var', 'features.features.layer4.0.bn2.bias'}
[2019-08-14 20:06:51,407-rk0-load_helper.py# 17] unused checkpoint keys:66
[2019-08-14 20:06:51,408-rk0-load_helper.py# 18] used keys:372
[2019-08-14 20:06:51,539-rk0-trainval_siamrcnn_corr.py#237] (WarmUPScheduler) lr spaces: 
[1.00000000e-03 1.58489319e-03 2.51188643e-03 3.98107171e-03
 6.30957344e-03 1.00000000e-02 9.42381613e-03 8.88083105e-03
 8.36913190e-03 7.88691602e-03 7.43248464e-03 7.00423687e-03
 6.60066404e-03 6.22034443e-03 5.86193822e-03 5.52418280e-03
 5.20588830e-03 4.90593341e-03 4.62326145e-03 4.35687658e-03
 4.10584038e-03 3.86926848e-03 3.64632748e-03 3.43623197e-03
 3.23824183e-03 3.05165956e-03 2.87582786e-03 2.71012730e-03
 2.55397414e-03 2.40681827e-03 2.26814128e-03 2.13745464e-03
 2.01429795e-03 1.89823735e-03 1.78886398e-03 1.68579252e-03
 1.58865988e-03 1.49712386e-03 1.41086200e-03 1.32957041e-03
 1.25296271e-03 1.18076902e-03 1.11273501e-03 1.04862101e-03
 9.88201163e-04 9.31262607e-04 8.77604758e-04 8.27038588e-04
 7.79385959e-04 7.34478997e-04 6.92159502e-04 6.52278389e-04
 6.14695160e-04 5.79277417e-04 5.45900387e-04 5.14446487e-04
 4.84804911e-04 4.56871234e-04 4.30547051e-04 4.05739624e-04
 3.82361562e-04 3.60330505e-04 3.39568843e-04 3.20003434e-04
 3.01565353e-04 2.84189644e-04 2.67815095e-04 2.52384021e-04
 2.37842061e-04 2.24137985e-04 2.11223516e-04 1.99053158e-04
 1.87584036e-04 1.76775747e-04 1.66590213e-04 1.56991554e-04
 1.47945954e-04 1.39421547e-04 1.31388302e-04 1.23817920e-04
 1.16683732e-04 1.09960603e-04 1.03624851e-04 9.76541539e-05
 9.20274791e-05 8.67250043e-05 8.17280495e-05 7.70190111e-05
 7.25813000e-05 6.83992826e-05 6.44582263e-05 6.07442473e-05
 5.72442617e-05 5.39459397e-05 5.08376617e-05 4.79084777e-05
 4.51480685e-05 4.25467096e-05 4.00952369e-05 3.77850140e-05
 3.56079025e-05 3.35562326e-05 3.16227766e-05 2.98007232e-05
 2.80836536e-05 2.64655188e-05 2.49406183e-05 2.35035802e-05
 2.21493418e-05 2.08731324e-05 1.96704562e-05 1.85370763e-05
 1.74689999e-05 1.64624643e-05 1.55139236e-05 1.46200364e-05
 1.37776535e-05 1.29838073e-05 1.22357013e-05 1.15306999e-05
 1.08663196e-05 1.02402198e-05 9.65019485e-06 9.09416619e-06
 8.57017501e-06 8.07637535e-06 7.61102764e-06 7.17249250e-06
 6.75922506e-06 6.36976942e-06 6.00275358e-06 5.65688460e-06
 5.33094404e-06 5.02378365e-06 4.73432134e-06 4.46153738e-06
 4.20447080e-06 3.96221597e-06 3.73391948e-06 3.51877706e-06
 3.31603081e-06 3.12496646e-06 2.94491094e-06 2.77522992e-06
 2.61532565e-06 2.46463481e-06 2.32262652e-06 2.18880053e-06
 2.06268538e-06 1.94383677e-06 1.83183603e-06 1.72628860e-06
 1.62682263e-06 1.53308774e-06 1.44475370e-06 1.36150932e-06
 1.28306135e-06 1.20913342e-06 1.13946511e-06 1.07381097e-06
 1.01193971e-06 9.53633378e-07 8.98686561e-07 8.46905692e-07
 7.98108352e-07 7.52122637e-07 7.08786544e-07 6.67947407e-07
 6.29461355e-07 5.93192807e-07 5.59013995e-07 5.26804510e-07
 4.96450884e-07 4.67846185e-07 4.40889643e-07 4.15486293e-07
 3.91546643e-07 3.68986357e-07 3.47725959e-07 3.27690550e-07
 3.08809549e-07 2.91016441e-07 2.74248544e-07 2.58446785e-07
 2.43555498e-07 2.29522223e-07 2.16297523e-07 2.03834809e-07
 1.92090176e-07 1.81022250e-07 1.70592040e-07 1.60762802e-07
 1.51499909e-07 1.42770728e-07 1.34544509e-07 1.26792272e-07
 1.19486706e-07 1.12602075e-07 1.06114125e-07 1.00000000e-07]
[2019-08-14 20:06:51,546-rk0-trainval_siamrcnn_corr.py#239] model prepare done
[2019-08-14 20:06:51,549-rk0-trainval_siamrcnn_corr.py#296] train epoch:0
[2019-08-14 20:08:58,223-rk0-trainval_siamrcnn_corr.py#197] 
PyTorch version: 0.4.1.post2
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: CentOS Linux 7 (Core)
GCC version: (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11)
CMake version: version 2.8.12.2

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: 
GPU 0: GeForce GTX 1080 Ti
GPU 1: GeForce GTX 1080 Ti
GPU 2: GeForce GTX 1080 Ti
GPU 3: GeForce GTX 1080 Ti
GPU 4: GeForce GTX 1080 Ti
GPU 5: GeForce GTX 1080 Ti

Nvidia driver version: 410.48
cuDNN version: Could not collect

Versions of relevant libraries:
[pip] Could not collect
[conda] pytorch                   0.4.1           py36_py35_py27__9.0.176_7.1.2_2    pytorch
[conda] torchvision               0.2.1                    py36_1    pytorch
        OpenCV (3.4.3)
[2019-08-14 20:08:58,225-rk0-trainval_siamrcnn_corr.py#198] Namespace(arch='', batch=24, clip=10.0, config='config.json', debug=False, dense_hp=False, epochs=200, hm_hp=True, hm_hp_weight=1.5, hp_weight=1, log='logs/log_0814.txt', log_dir='board/show_0814', lr=0.001, momentum=0.9, mse_loss=False, not_hm_hp=False, not_reg_bbox=False, not_reg_hp_offset=False, off_weight=1, output_size=56, pretrained='./snapshot_0811/checkpoint_e99.pth', print_freq=10, reg_bbox=True, reg_hp_offset=True, reg_loss='l1', resume='', save_dir='snapshot_0814', save_freq=5, start_epoch=0, weight_decay=0.0001, workers=4)
[2019-08-14 20:08:58,227-rk0-trainval_siamrcnn_corr.py#201] config 
{
    "network": {
        "arch": "Custom"
    },
    "hp": {
        "instance_size": 255,
        "base_size": 8
    },
    "lr": {
        "feature_lr_mult": 1.0,
        "rpn_lr_mult": 1.0,
        "mask_lr_mult": 1.0,
        "type": "log",
        "start_lr": 0.01,
        "end_lr": 1e-07,
        "warmup": {
            "start_lr": 0.001,
            "end_lr": 0.01,
            "type": "step",
            "step": 1,
            "epoch": 5
        }
    },
    "loss": {
        "weight": [
            1.0,
            1.2,
            1.0
        ],
        "reg": {
            "loss": "L1Loss"
        },
        "cls": {
            "split": true
        }
    },
    "train_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/train2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 4,
                "scale": 0.05
            },
            "search": {
                "shift": 0.0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0.15
        }
    },
    "val_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/val2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 0,
                "scale": 0.0
            },
            "search": {
                "shift": 0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0
        }
    },
    "anchors": {
        "stride": 8,
        "ratios": [
            0.33,
            0.5,
            1,
            2,
            3
        ],
        "scales": [
            8
        ],
        "round_dight": 0
    },
    "mask": {},
    "clip": {
        "feature": 10.0,
        "rpn": 10.0,
        "split": false
    }
}
[2019-08-14 20:08:58,260-rk0-trainval_siamrcnn_corr.py#144] build train dataset
[2019-08-14 20:08:58,263-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/train2017_pose_siamfc.json
[2019-08-14 20:09:01,096-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/train2017_pose_siamfc.json loaded.
[2019-08-14 20:09:01,132-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [45900/45900] path {}.{}.{}.jpg
[2019-08-14 20:09:01,199-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 20:09:01,200-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 20:09:01,203-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0.15,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 45900
}
[2019-08-14 20:09:01,291-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 20:09:01,318-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 20:09:01,319-rk0-trainval_siamrcnn_corr.py#148] build val dataset
[2019-08-14 20:09:01,345-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/val2017_pose_siamfc.json
[2019-08-14 20:09:01,438-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/val2017_pose_siamfc.json loaded.
[2019-08-14 20:09:01,441-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [1899/1899] path {}.{}.{}.jpg
[2019-08-14 20:09:01,444-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 20:09:01,465-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 20:09:01,466-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 1899
}
[2019-08-14 20:09:01,469-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 20:09:01,470-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 20:09:01,471-rk0-trainval_siamrcnn_corr.py#159] build dataset done
[2019-08-14 20:09:06,427-rk0-load_helper.py# 40] load pretrained model from ../resnet.model
[2019-08-14 20:09:06,813-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 20:09:06,821-rk0-load_helper.py# 13] [Warning] missing keys: {'layer1.2.bn3.num_batches_tracked', 'layer3.0.bn1.num_batches_tracked', 'layer2.1.bn2.num_batches_tracked', 'layer1.1.bn2.num_batches_tracked', 'layer3.1.bn3.num_batches_tracked', 'layer2.0.bn1.num_batches_tracked', 'layer2.0.bn2.num_batches_tracked', 'layer3.0.downsample.1.num_batches_tracked', 'layer3.4.bn2.num_batches_tracked', 'layer2.1.bn3.num_batches_tracked', 'layer1.0.bn2.num_batches_tracked', 'layer1.2.bn2.num_batches_tracked', 'layer3.2.bn1.num_batches_tracked', 'layer1.1.bn3.num_batches_tracked', 'layer3.3.bn2.num_batches_tracked', 'layer3.3.bn1.num_batches_tracked', 'layer3.2.bn3.num_batches_tracked', 'layer3.1.bn1.num_batches_tracked', 'layer3.4.bn1.num_batches_tracked', 'layer3.5.bn3.num_batches_tracked', 'layer2.2.bn3.num_batches_tracked', 'layer1.2.bn1.num_batches_tracked', 'layer3.5.bn1.num_batches_tracked', 'layer2.1.bn1.num_batches_tracked', 'layer2.2.bn1.num_batches_tracked', 'layer2.2.bn2.num_batches_tracked', 'layer3.0.bn2.num_batches_tracked', 'layer1.0.bn3.num_batches_tracked', 'layer2.0.downsample.1.num_batches_tracked', 'layer2.3.bn2.num_batches_tracked', 'layer3.2.bn2.num_batches_tracked', 'layer3.5.bn2.num_batches_tracked', 'layer1.1.bn1.num_batches_tracked', 'bn1.num_batches_tracked', 'layer2.3.bn1.num_batches_tracked', 'layer1.0.downsample.1.num_batches_tracked', 'layer3.3.bn3.num_batches_tracked', 'layer2.0.bn3.num_batches_tracked', 'layer3.0.bn3.num_batches_tracked', 'layer3.1.bn2.num_batches_tracked', 'layer2.3.bn3.num_batches_tracked', 'layer3.4.bn3.num_batches_tracked', 'layer1.0.bn1.num_batches_tracked'}
[2019-08-14 20:09:06,822-rk0-load_helper.py# 14] missing keys:43
[2019-08-14 20:09:06,822-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'layer4.0.conv3.weight', 'layer4.0.downsample.1.weight', 'layer4.0.bn2.running_var', 'layer4.2.bn2.weight', 'layer4.0.bn2.running_mean', 'layer4.2.bn1.running_mean', 'layer4.2.conv2.weight', 'layer4.1.conv1.weight', 'layer4.1.bn2.weight', 'layer4.2.bn3.weight', 'layer4.0.downsample.1.bias', 'layer4.0.bn1.running_var', 'layer4.0.conv2.weight', 'layer4.0.bn3.running_var', 'layer4.0.bn3.running_mean', 'layer4.0.downsample.0.weight', 'layer4.0.bn2.weight', 'layer4.0.bn2.bias', 'layer4.2.bn1.running_var', 'layer4.2.bn3.bias', 'layer4.1.bn3.running_var', 'layer4.2.conv1.weight', 'layer4.1.bn2.bias', 'layer4.2.bn1.bias', 'layer4.1.bn1.bias', 'layer4.1.bn1.running_var', 'layer4.1.bn1.weight', 'layer4.0.bn1.running_mean', 'layer4.1.bn3.bias', 'layer4.0.bn1.weight', 'layer4.1.conv2.weight', 'layer4.1.conv3.weight', 'layer4.1.bn3.running_mean', 'layer4.0.bn1.bias', 'layer4.2.conv3.weight', 'layer4.1.bn2.running_mean', 'layer4.2.bn2.running_mean', 'layer4.0.downsample.1.running_var', 'layer4.2.bn1.weight', 'layer4.1.bn3.weight', 'layer4.0.downsample.1.running_mean', 'layer4.1.bn2.running_var', 'layer4.1.bn1.running_mean', 'layer4.0.conv1.weight', 'layer4.2.bn3.running_var', 'layer4.0.bn3.bias', 'layer4.2.bn3.running_mean', 'layer4.2.bn2.bias', 'layer4.2.bn2.running_var', 'layer4.0.bn3.weight'}
[2019-08-14 20:09:06,823-rk0-load_helper.py# 17] unused checkpoint keys:50
[2019-08-14 20:09:06,834-rk0-load_helper.py# 18] used keys:215
[2019-08-14 20:09:06,857-rk0-features.py# 66] Current training 0 layers:
	
[2019-08-14 20:09:06,866-rk0-features.py# 66] Current training 3 layers:
	
[2019-08-14 20:09:07,601-rk0-trainval_siamrcnn_corr.py#219] Custom(
  (upSample): UpsamplingBilinear2d(size=[127, 127], mode=bilinear)
  (kp_criterion): PoseLoss(
    (crit_hm_hp): FocalLoss()
    (crit_kp): RegWeightedL1Loss()
    (crit_reg): RegL1Loss()
  )
  (features): ResDown(
    (features): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer2): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer3): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (4): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (5): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
    )
    (downsample): ResDownS(
      (downsample): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (rpn_model): UP(
    (cls): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 10, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (loc): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 20, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (pose_corr): PoseCorr(
    (kp): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (kp_model): Center_pose_head(
    (deconv_layers_new): Sequential(
      (0): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace)
      (3): ConvTranspose2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace)
      (6): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU(inplace)
      (9): ConvTranspose2d(256, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (10): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (11): ReLU(inplace)
      (12): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (13): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (14): ReLU(inplace)
      (15): ConvTranspose2d(64, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (16): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (17): ReLU(inplace)
    )
    (hps): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 34, kernel_size=(1, 1), stride=(1, 1))
    )
    (hm_hp): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 17, kernel_size=(1, 1), stride=(1, 1))
    )
    (hp_offset): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (dpooling): ModulatedDeformRoIPoolingPack(
    (offset_fc): Sequential(
      (0): Linear(in_features=25088, out_features=1024, bias=True)
      (1): ReLU(inplace)
      (2): Linear(in_features=1024, out_features=1024, bias=True)
      (3): ReLU(inplace)
      (4): Linear(in_features=1024, out_features=98, bias=True)
    )
    (mask_fc): Sequential(
      (0): Linear(in_features=25088, out_features=1024, bias=True)
      (1): ReLU(inplace)
      (2): Linear(in_features=1024, out_features=49, bias=True)
      (3): Sigmoid()
    )
  )
)
[2019-08-14 20:09:07,608-rk0-load_helper.py# 40] load pretrained model from ./snapshot_0811/checkpoint_e99.pth
[2019-08-14 20:09:07,966-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 20:09:07,991-rk0-load_helper.py# 13] [Warning] missing keys: {'dpooling.mask_fc.0.bias', 'dpooling.offset_fc.0.weight', 'kp_model.deconv_layers_new.12.conv_offset_mask.bias', 'kp_model.deconv_layers_new.12.conv_offset_mask.weight', 'kp_model.deconv_layers_new.0.bias', 'dpooling.mask_fc.0.weight', 'dpooling.offset_fc.2.bias', 'dpooling.offset_fc.0.bias', 'kp_model.deconv_layers_new.0.conv_offset_mask.bias', 'dpooling.mask_fc.2.weight', 'dpooling.offset_fc.2.weight', 'kp_model.deconv_layers_new.6.bias', 'kp_model.deconv_layers_new.12.bias', 'dpooling.mask_fc.2.bias', 'kp_model.deconv_layers_new.0.conv_offset_mask.weight', 'kp_model.deconv_layers_new.6.conv_offset_mask.bias', 'kp_model.deconv_layers_new.6.conv_offset_mask.weight', 'dpooling.offset_fc.4.bias', 'dpooling.offset_fc.4.weight'}
[2019-08-14 20:09:07,991-rk0-load_helper.py# 14] missing keys:19
[2019-08-14 20:09:07,992-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'features.features.layer4.2.bn1.running_var', 'features.features.layer4.2.bn1.running_mean', 'features.features.layer4.0.bn3.running_mean', 'features.features.layer4.1.bn2.running_var', 'features.features.layer4.1.bn2.bias', 'features.features.layer4.2.conv1.weight', 'features.features.layer4.2.bn2.num_batches_tracked', 'features.features.layer4.2.bn2.running_var', 'features.features.layer4.0.downsample.1.num_batches_tracked', 'features.features.layer4.1.bn1.weight', 'features.downsample_p4.downsample.1.weight', 'features.features.layer4.0.conv2.weight', 'features.features.layer4.0.bn3.bias', 'features.features.layer4.0.conv3.weight', 'features.features.layer4.0.downsample.1.weight', 'features.features.layer4.0.bn3.weight', 'features.features.layer4.0.bn1.weight', 'features.features.layer4.0.bn3.running_var', 'features.features.layer4.2.bn3.running_mean', 'features.features.layer4.2.bn1.bias', 'features.features.layer4.2.bn1.weight', 'features.features.layer4.1.bn3.bias', 'features.features.layer4.0.bn2.running_mean', 'features.features.layer4.0.bn1.num_batches_tracked', 'features.features.layer4.1.bn3.weight', 'features.features.layer4.2.bn1.num_batches_tracked', 'features.features.layer4.1.bn3.num_batches_tracked', 'features.downsample_p4.downsample.1.running_var', 'features.features.layer4.2.bn2.running_mean', 'features.features.layer4.1.bn3.running_mean', 'features.features.layer4.1.bn2.num_batches_tracked', 'features.features.layer4.1.conv1.weight', 'features.features.layer4.2.bn3.weight', 'features.features.layer4.0.bn2.bias', 'features.features.layer4.0.bn2.running_var', 'features.features.layer4.2.bn2.bias', 'features.features.layer4.0.bn3.num_batches_tracked', 'features.features.layer4.0.downsample.1.running_var', 'features.features.layer4.2.conv3.weight', 'features.downsample_p4.downsample.0.weight', 'features.features.layer4.0.bn1.running_var', 'features.features.layer4.2.bn3.bias', 'features.features.layer4.0.bn1.running_mean', 'features.features.layer4.0.downsample.0.weight', 'features.features.layer4.2.bn3.num_batches_tracked', 'features.features.layer4.1.bn1.bias', 'features.features.layer4.2.bn3.running_var', 'features.features.layer4.1.bn1.num_batches_tracked', 'features.features.layer4.0.bn2.num_batches_tracked', 'features.downsample_p4.downsample.1.num_batches_tracked', 'features.downsample_p4.downsample.1.bias', 'features.features.layer4.0.downsample.1.running_mean', 'features.features.layer4.1.conv3.weight', 'features.features.layer4.1.bn2.weight', 'features.features.layer4.2.bn2.weight', 'features.features.layer4.0.bn1.bias', 'features.features.layer4.1.conv2.weight', 'features.features.layer4.1.bn1.running_var', 'features.downsample_p4.downsample.1.running_mean', 'features.features.layer4.1.bn3.running_var', 'features.features.layer4.1.bn2.running_mean', 'features.features.layer4.0.conv1.weight', 'features.features.layer4.0.bn2.weight', 'features.features.layer4.2.conv2.weight', 'features.features.layer4.0.downsample.1.bias', 'features.features.layer4.1.bn1.running_mean'}
[2019-08-14 20:09:07,993-rk0-load_helper.py# 17] unused checkpoint keys:66
[2019-08-14 20:09:07,994-rk0-load_helper.py# 18] used keys:372
[2019-08-14 20:09:08,114-rk0-trainval_siamrcnn_corr.py#237] (WarmUPScheduler) lr spaces: 
[1.00000000e-03 1.58489319e-03 2.51188643e-03 3.98107171e-03
 6.30957344e-03 1.00000000e-02 9.42381613e-03 8.88083105e-03
 8.36913190e-03 7.88691602e-03 7.43248464e-03 7.00423687e-03
 6.60066404e-03 6.22034443e-03 5.86193822e-03 5.52418280e-03
 5.20588830e-03 4.90593341e-03 4.62326145e-03 4.35687658e-03
 4.10584038e-03 3.86926848e-03 3.64632748e-03 3.43623197e-03
 3.23824183e-03 3.05165956e-03 2.87582786e-03 2.71012730e-03
 2.55397414e-03 2.40681827e-03 2.26814128e-03 2.13745464e-03
 2.01429795e-03 1.89823735e-03 1.78886398e-03 1.68579252e-03
 1.58865988e-03 1.49712386e-03 1.41086200e-03 1.32957041e-03
 1.25296271e-03 1.18076902e-03 1.11273501e-03 1.04862101e-03
 9.88201163e-04 9.31262607e-04 8.77604758e-04 8.27038588e-04
 7.79385959e-04 7.34478997e-04 6.92159502e-04 6.52278389e-04
 6.14695160e-04 5.79277417e-04 5.45900387e-04 5.14446487e-04
 4.84804911e-04 4.56871234e-04 4.30547051e-04 4.05739624e-04
 3.82361562e-04 3.60330505e-04 3.39568843e-04 3.20003434e-04
 3.01565353e-04 2.84189644e-04 2.67815095e-04 2.52384021e-04
 2.37842061e-04 2.24137985e-04 2.11223516e-04 1.99053158e-04
 1.87584036e-04 1.76775747e-04 1.66590213e-04 1.56991554e-04
 1.47945954e-04 1.39421547e-04 1.31388302e-04 1.23817920e-04
 1.16683732e-04 1.09960603e-04 1.03624851e-04 9.76541539e-05
 9.20274791e-05 8.67250043e-05 8.17280495e-05 7.70190111e-05
 7.25813000e-05 6.83992826e-05 6.44582263e-05 6.07442473e-05
 5.72442617e-05 5.39459397e-05 5.08376617e-05 4.79084777e-05
 4.51480685e-05 4.25467096e-05 4.00952369e-05 3.77850140e-05
 3.56079025e-05 3.35562326e-05 3.16227766e-05 2.98007232e-05
 2.80836536e-05 2.64655188e-05 2.49406183e-05 2.35035802e-05
 2.21493418e-05 2.08731324e-05 1.96704562e-05 1.85370763e-05
 1.74689999e-05 1.64624643e-05 1.55139236e-05 1.46200364e-05
 1.37776535e-05 1.29838073e-05 1.22357013e-05 1.15306999e-05
 1.08663196e-05 1.02402198e-05 9.65019485e-06 9.09416619e-06
 8.57017501e-06 8.07637535e-06 7.61102764e-06 7.17249250e-06
 6.75922506e-06 6.36976942e-06 6.00275358e-06 5.65688460e-06
 5.33094404e-06 5.02378365e-06 4.73432134e-06 4.46153738e-06
 4.20447080e-06 3.96221597e-06 3.73391948e-06 3.51877706e-06
 3.31603081e-06 3.12496646e-06 2.94491094e-06 2.77522992e-06
 2.61532565e-06 2.46463481e-06 2.32262652e-06 2.18880053e-06
 2.06268538e-06 1.94383677e-06 1.83183603e-06 1.72628860e-06
 1.62682263e-06 1.53308774e-06 1.44475370e-06 1.36150932e-06
 1.28306135e-06 1.20913342e-06 1.13946511e-06 1.07381097e-06
 1.01193971e-06 9.53633378e-07 8.98686561e-07 8.46905692e-07
 7.98108352e-07 7.52122637e-07 7.08786544e-07 6.67947407e-07
 6.29461355e-07 5.93192807e-07 5.59013995e-07 5.26804510e-07
 4.96450884e-07 4.67846185e-07 4.40889643e-07 4.15486293e-07
 3.91546643e-07 3.68986357e-07 3.47725959e-07 3.27690550e-07
 3.08809549e-07 2.91016441e-07 2.74248544e-07 2.58446785e-07
 2.43555498e-07 2.29522223e-07 2.16297523e-07 2.03834809e-07
 1.92090176e-07 1.81022250e-07 1.70592040e-07 1.60762802e-07
 1.51499909e-07 1.42770728e-07 1.34544509e-07 1.26792272e-07
 1.19486706e-07 1.12602075e-07 1.06114125e-07 1.00000000e-07]
[2019-08-14 20:09:08,120-rk0-trainval_siamrcnn_corr.py#239] model prepare done
[2019-08-14 20:09:08,123-rk0-trainval_siamrcnn_corr.py#296] train epoch:0
[2019-08-14 20:12:08,319-rk0-trainval_siamrcnn_corr.py#197] 
PyTorch version: 0.4.1.post2
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: CentOS Linux 7 (Core)
GCC version: (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11)
CMake version: version 2.8.12.2

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: 
GPU 0: GeForce GTX 1080 Ti
GPU 1: GeForce GTX 1080 Ti
GPU 2: GeForce GTX 1080 Ti
GPU 3: GeForce GTX 1080 Ti
GPU 4: GeForce GTX 1080 Ti
GPU 5: GeForce GTX 1080 Ti

Nvidia driver version: 410.48
cuDNN version: Could not collect

Versions of relevant libraries:
[pip] Could not collect
[conda] pytorch                   0.4.1           py36_py35_py27__9.0.176_7.1.2_2    pytorch
[conda] torchvision               0.2.1                    py36_1    pytorch
        OpenCV (3.4.3)
[2019-08-14 20:12:08,320-rk0-trainval_siamrcnn_corr.py#198] Namespace(arch='', batch=24, clip=10.0, config='config.json', debug=False, dense_hp=False, epochs=200, hm_hp=True, hm_hp_weight=1.5, hp_weight=1, log='logs/log_0814.txt', log_dir='board/show_0814', lr=0.001, momentum=0.9, mse_loss=False, not_hm_hp=False, not_reg_bbox=False, not_reg_hp_offset=False, off_weight=1, output_size=56, pretrained='./snapshot_0811/checkpoint_e99.pth', print_freq=10, reg_bbox=True, reg_hp_offset=True, reg_loss='l1', resume='', save_dir='snapshot_0814', save_freq=5, start_epoch=0, weight_decay=0.0001, workers=4)
[2019-08-14 20:12:08,322-rk0-trainval_siamrcnn_corr.py#201] config 
{
    "network": {
        "arch": "Custom"
    },
    "hp": {
        "instance_size": 255,
        "base_size": 8
    },
    "lr": {
        "feature_lr_mult": 1.0,
        "rpn_lr_mult": 1.0,
        "mask_lr_mult": 1.0,
        "type": "log",
        "start_lr": 0.01,
        "end_lr": 1e-07,
        "warmup": {
            "start_lr": 0.001,
            "end_lr": 0.01,
            "type": "step",
            "step": 1,
            "epoch": 5
        }
    },
    "loss": {
        "weight": [
            1.0,
            1.2,
            1.0
        ],
        "reg": {
            "loss": "L1Loss"
        },
        "cls": {
            "split": true
        }
    },
    "train_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/train2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 4,
                "scale": 0.05
            },
            "search": {
                "shift": 0.0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0.15
        }
    },
    "val_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/val2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 0,
                "scale": 0.0
            },
            "search": {
                "shift": 0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0
        }
    },
    "anchors": {
        "stride": 8,
        "ratios": [
            0.33,
            0.5,
            1,
            2,
            3
        ],
        "scales": [
            8
        ],
        "round_dight": 0
    },
    "mask": {},
    "clip": {
        "feature": 10.0,
        "rpn": 10.0,
        "split": false
    }
}
[2019-08-14 20:12:08,327-rk0-trainval_siamrcnn_corr.py#144] build train dataset
[2019-08-14 20:12:08,329-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/train2017_pose_siamfc.json
[2019-08-14 20:12:11,167-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/train2017_pose_siamfc.json loaded.
[2019-08-14 20:12:11,207-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [45900/45900] path {}.{}.{}.jpg
[2019-08-14 20:12:11,275-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 20:12:11,277-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 20:12:11,279-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0.15,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 45900
}
[2019-08-14 20:12:11,346-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 20:12:11,347-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 20:12:11,348-rk0-trainval_siamrcnn_corr.py#148] build val dataset
[2019-08-14 20:12:11,350-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/val2017_pose_siamfc.json
[2019-08-14 20:12:11,445-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/val2017_pose_siamfc.json loaded.
[2019-08-14 20:12:11,448-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [1899/1899] path {}.{}.{}.jpg
[2019-08-14 20:12:11,451-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 20:12:11,452-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 20:12:11,453-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 1899
}
[2019-08-14 20:12:11,457-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 20:12:11,458-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 20:12:11,459-rk0-trainval_siamrcnn_corr.py#159] build dataset done
[2019-08-14 20:12:16,117-rk0-load_helper.py# 40] load pretrained model from ../resnet.model
[2019-08-14 20:12:16,437-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 20:12:16,439-rk0-load_helper.py# 13] [Warning] missing keys: {'layer2.0.bn2.num_batches_tracked', 'layer2.0.bn1.num_batches_tracked', 'layer1.0.bn1.num_batches_tracked', 'layer2.0.bn3.num_batches_tracked', 'layer3.2.bn2.num_batches_tracked', 'layer2.2.bn2.num_batches_tracked', 'layer3.0.bn3.num_batches_tracked', 'layer1.0.bn3.num_batches_tracked', 'layer1.0.downsample.1.num_batches_tracked', 'layer3.5.bn3.num_batches_tracked', 'layer3.3.bn1.num_batches_tracked', 'layer3.3.bn2.num_batches_tracked', 'layer3.5.bn1.num_batches_tracked', 'layer3.4.bn2.num_batches_tracked', 'layer3.4.bn1.num_batches_tracked', 'layer3.0.bn2.num_batches_tracked', 'layer1.1.bn2.num_batches_tracked', 'layer2.2.bn3.num_batches_tracked', 'layer2.2.bn1.num_batches_tracked', 'layer2.1.bn3.num_batches_tracked', 'layer3.1.bn3.num_batches_tracked', 'bn1.num_batches_tracked', 'layer2.1.bn2.num_batches_tracked', 'layer2.3.bn3.num_batches_tracked', 'layer3.2.bn1.num_batches_tracked', 'layer2.3.bn1.num_batches_tracked', 'layer1.1.bn3.num_batches_tracked', 'layer1.2.bn3.num_batches_tracked', 'layer3.1.bn2.num_batches_tracked', 'layer1.1.bn1.num_batches_tracked', 'layer3.2.bn3.num_batches_tracked', 'layer3.3.bn3.num_batches_tracked', 'layer3.0.bn1.num_batches_tracked', 'layer3.1.bn1.num_batches_tracked', 'layer3.5.bn2.num_batches_tracked', 'layer1.0.bn2.num_batches_tracked', 'layer1.2.bn1.num_batches_tracked', 'layer1.2.bn2.num_batches_tracked', 'layer2.1.bn1.num_batches_tracked', 'layer2.3.bn2.num_batches_tracked', 'layer2.0.downsample.1.num_batches_tracked', 'layer3.4.bn3.num_batches_tracked', 'layer3.0.downsample.1.num_batches_tracked'}
[2019-08-14 20:12:16,440-rk0-load_helper.py# 14] missing keys:43
[2019-08-14 20:12:16,441-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'layer4.1.conv2.weight', 'layer4.0.bn3.bias', 'layer4.0.bn2.running_var', 'layer4.0.conv1.weight', 'layer4.1.bn3.running_var', 'layer4.1.bn2.bias', 'layer4.0.conv2.weight', 'layer4.0.bn2.running_mean', 'layer4.0.bn2.bias', 'layer4.0.downsample.1.bias', 'layer4.1.bn2.running_mean', 'layer4.0.bn3.weight', 'layer4.2.bn1.running_mean', 'layer4.1.bn1.weight', 'layer4.0.bn3.running_mean', 'layer4.2.bn1.running_var', 'layer4.1.bn1.bias', 'layer4.0.downsample.1.weight', 'layer4.2.bn3.weight', 'layer4.1.bn1.running_var', 'layer4.2.bn2.bias', 'layer4.1.bn3.running_mean', 'layer4.2.bn3.bias', 'layer4.2.bn3.running_mean', 'layer4.0.bn1.running_var', 'layer4.0.bn1.bias', 'layer4.0.bn2.weight', 'layer4.0.downsample.1.running_var', 'layer4.2.bn3.running_var', 'layer4.0.conv3.weight', 'layer4.0.downsample.1.running_mean', 'layer4.2.bn2.running_mean', 'layer4.2.bn1.weight', 'layer4.1.bn3.bias', 'layer4.1.conv3.weight', 'layer4.1.conv1.weight', 'layer4.2.bn1.bias', 'layer4.2.bn2.weight', 'layer4.0.downsample.0.weight', 'layer4.1.bn1.running_mean', 'layer4.1.bn2.running_var', 'layer4.0.bn3.running_var', 'layer4.0.bn1.weight', 'layer4.2.conv3.weight', 'layer4.0.bn1.running_mean', 'layer4.2.conv1.weight', 'layer4.1.bn2.weight', 'layer4.2.conv2.weight', 'layer4.2.bn2.running_var', 'layer4.1.bn3.weight'}
[2019-08-14 20:12:16,442-rk0-load_helper.py# 17] unused checkpoint keys:50
[2019-08-14 20:12:16,443-rk0-load_helper.py# 18] used keys:215
[2019-08-14 20:12:16,466-rk0-features.py# 66] Current training 0 layers:
	
[2019-08-14 20:12:16,468-rk0-features.py# 66] Current training 3 layers:
	
[2019-08-14 20:12:17,149-rk0-trainval_siamrcnn_corr.py#219] Custom(
  (upSample): UpsamplingBilinear2d(size=[127, 127], mode=bilinear)
  (kp_criterion): PoseLoss(
    (crit_hm_hp): FocalLoss()
    (crit_kp): RegWeightedL1Loss()
    (crit_reg): RegL1Loss()
  )
  (features): ResDown(
    (features): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer2): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer3): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (4): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (5): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
    )
    (downsample): ResDownS(
      (downsample): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (rpn_model): UP(
    (cls): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 10, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (loc): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 20, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (pose_corr): PoseCorr(
    (kp): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (kp_model): Center_pose_head(
    (deconv_layers_new): Sequential(
      (0): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace)
      (3): ConvTranspose2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace)
      (6): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU(inplace)
      (9): ConvTranspose2d(256, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (10): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (11): ReLU(inplace)
      (12): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (13): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (14): ReLU(inplace)
      (15): ConvTranspose2d(64, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (16): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (17): ReLU(inplace)
    )
    (hps): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 34, kernel_size=(1, 1), stride=(1, 1))
    )
    (hm_hp): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 17, kernel_size=(1, 1), stride=(1, 1))
    )
    (hp_offset): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (dpooling): ModulatedDeformRoIPoolingPack(
    (offset_fc): Sequential(
      (0): Linear(in_features=25088, out_features=1024, bias=True)
      (1): ReLU(inplace)
      (2): Linear(in_features=1024, out_features=1024, bias=True)
      (3): ReLU(inplace)
      (4): Linear(in_features=1024, out_features=98, bias=True)
    )
    (mask_fc): Sequential(
      (0): Linear(in_features=25088, out_features=1024, bias=True)
      (1): ReLU(inplace)
      (2): Linear(in_features=1024, out_features=49, bias=True)
      (3): Sigmoid()
    )
  )
)
[2019-08-14 20:12:17,156-rk0-load_helper.py# 40] load pretrained model from ./snapshot_0811/checkpoint_e99.pth
[2019-08-14 20:12:17,516-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 20:12:17,518-rk0-load_helper.py# 13] [Warning] missing keys: {'kp_model.deconv_layers_new.12.bias', 'kp_model.deconv_layers_new.6.bias', 'dpooling.mask_fc.2.bias', 'dpooling.offset_fc.4.weight', 'kp_model.deconv_layers_new.12.conv_offset_mask.bias', 'dpooling.offset_fc.2.weight', 'dpooling.offset_fc.0.bias', 'dpooling.offset_fc.0.weight', 'kp_model.deconv_layers_new.6.conv_offset_mask.bias', 'dpooling.offset_fc.2.bias', 'dpooling.mask_fc.0.bias', 'kp_model.deconv_layers_new.12.conv_offset_mask.weight', 'dpooling.mask_fc.0.weight', 'dpooling.offset_fc.4.bias', 'kp_model.deconv_layers_new.6.conv_offset_mask.weight', 'kp_model.deconv_layers_new.0.bias', 'kp_model.deconv_layers_new.0.conv_offset_mask.bias', 'dpooling.mask_fc.2.weight', 'kp_model.deconv_layers_new.0.conv_offset_mask.weight'}
[2019-08-14 20:12:17,519-rk0-load_helper.py# 14] missing keys:19
[2019-08-14 20:12:17,520-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'features.features.layer4.0.downsample.1.num_batches_tracked', 'features.features.layer4.0.bn1.num_batches_tracked', 'features.features.layer4.2.bn3.bias', 'features.features.layer4.0.bn1.running_mean', 'features.features.layer4.2.bn3.running_mean', 'features.features.layer4.2.bn1.weight', 'features.features.layer4.0.bn2.num_batches_tracked', 'features.downsample_p4.downsample.1.num_batches_tracked', 'features.features.layer4.0.bn1.weight', 'features.features.layer4.2.conv1.weight', 'features.features.layer4.2.bn1.bias', 'features.downsample_p4.downsample.1.running_var', 'features.features.layer4.1.conv2.weight', 'features.features.layer4.1.conv3.weight', 'features.features.layer4.0.bn3.num_batches_tracked', 'features.features.layer4.0.bn3.running_mean', 'features.downsample_p4.downsample.0.weight', 'features.features.layer4.2.conv3.weight', 'features.features.layer4.1.bn1.weight', 'features.features.layer4.0.downsample.1.weight', 'features.features.layer4.1.bn2.running_var', 'features.features.layer4.0.downsample.1.bias', 'features.features.layer4.2.bn1.num_batches_tracked', 'features.features.layer4.2.bn2.running_var', 'features.features.layer4.2.bn2.weight', 'features.features.layer4.0.bn2.running_var', 'features.features.layer4.0.conv2.weight', 'features.features.layer4.1.bn2.bias', 'features.features.layer4.0.downsample.1.running_var', 'features.features.layer4.2.bn2.num_batches_tracked', 'features.downsample_p4.downsample.1.weight', 'features.features.layer4.1.bn1.running_var', 'features.features.layer4.1.bn1.running_mean', 'features.features.layer4.2.bn2.bias', 'features.features.layer4.1.bn2.running_mean', 'features.features.layer4.1.bn3.running_mean', 'features.features.layer4.2.bn1.running_var', 'features.features.layer4.0.bn2.bias', 'features.features.layer4.1.bn3.weight', 'features.features.layer4.0.bn3.running_var', 'features.features.layer4.0.bn2.weight', 'features.features.layer4.0.bn1.bias', 'features.features.layer4.0.bn3.weight', 'features.features.layer4.0.downsample.0.weight', 'features.features.layer4.0.bn2.running_mean', 'features.features.layer4.2.bn1.running_mean', 'features.features.layer4.1.conv1.weight', 'features.features.layer4.2.bn3.num_batches_tracked', 'features.downsample_p4.downsample.1.bias', 'features.features.layer4.2.bn2.running_mean', 'features.features.layer4.1.bn2.weight', 'features.features.layer4.1.bn3.num_batches_tracked', 'features.features.layer4.1.bn1.num_batches_tracked', 'features.features.layer4.0.conv3.weight', 'features.features.layer4.0.bn1.running_var', 'features.features.layer4.0.bn3.bias', 'features.features.layer4.1.bn3.bias', 'features.features.layer4.1.bn2.num_batches_tracked', 'features.features.layer4.2.conv2.weight', 'features.features.layer4.2.bn3.weight', 'features.features.layer4.0.conv1.weight', 'features.features.layer4.2.bn3.running_var', 'features.features.layer4.0.downsample.1.running_mean', 'features.features.layer4.1.bn1.bias', 'features.downsample_p4.downsample.1.running_mean', 'features.features.layer4.1.bn3.running_var'}
[2019-08-14 20:12:17,520-rk0-load_helper.py# 17] unused checkpoint keys:66
[2019-08-14 20:12:17,521-rk0-load_helper.py# 18] used keys:372
[2019-08-14 20:12:17,641-rk0-trainval_siamrcnn_corr.py#237] (WarmUPScheduler) lr spaces: 
[1.00000000e-03 1.58489319e-03 2.51188643e-03 3.98107171e-03
 6.30957344e-03 1.00000000e-02 9.42381613e-03 8.88083105e-03
 8.36913190e-03 7.88691602e-03 7.43248464e-03 7.00423687e-03
 6.60066404e-03 6.22034443e-03 5.86193822e-03 5.52418280e-03
 5.20588830e-03 4.90593341e-03 4.62326145e-03 4.35687658e-03
 4.10584038e-03 3.86926848e-03 3.64632748e-03 3.43623197e-03
 3.23824183e-03 3.05165956e-03 2.87582786e-03 2.71012730e-03
 2.55397414e-03 2.40681827e-03 2.26814128e-03 2.13745464e-03
 2.01429795e-03 1.89823735e-03 1.78886398e-03 1.68579252e-03
 1.58865988e-03 1.49712386e-03 1.41086200e-03 1.32957041e-03
 1.25296271e-03 1.18076902e-03 1.11273501e-03 1.04862101e-03
 9.88201163e-04 9.31262607e-04 8.77604758e-04 8.27038588e-04
 7.79385959e-04 7.34478997e-04 6.92159502e-04 6.52278389e-04
 6.14695160e-04 5.79277417e-04 5.45900387e-04 5.14446487e-04
 4.84804911e-04 4.56871234e-04 4.30547051e-04 4.05739624e-04
 3.82361562e-04 3.60330505e-04 3.39568843e-04 3.20003434e-04
 3.01565353e-04 2.84189644e-04 2.67815095e-04 2.52384021e-04
 2.37842061e-04 2.24137985e-04 2.11223516e-04 1.99053158e-04
 1.87584036e-04 1.76775747e-04 1.66590213e-04 1.56991554e-04
 1.47945954e-04 1.39421547e-04 1.31388302e-04 1.23817920e-04
 1.16683732e-04 1.09960603e-04 1.03624851e-04 9.76541539e-05
 9.20274791e-05 8.67250043e-05 8.17280495e-05 7.70190111e-05
 7.25813000e-05 6.83992826e-05 6.44582263e-05 6.07442473e-05
 5.72442617e-05 5.39459397e-05 5.08376617e-05 4.79084777e-05
 4.51480685e-05 4.25467096e-05 4.00952369e-05 3.77850140e-05
 3.56079025e-05 3.35562326e-05 3.16227766e-05 2.98007232e-05
 2.80836536e-05 2.64655188e-05 2.49406183e-05 2.35035802e-05
 2.21493418e-05 2.08731324e-05 1.96704562e-05 1.85370763e-05
 1.74689999e-05 1.64624643e-05 1.55139236e-05 1.46200364e-05
 1.37776535e-05 1.29838073e-05 1.22357013e-05 1.15306999e-05
 1.08663196e-05 1.02402198e-05 9.65019485e-06 9.09416619e-06
 8.57017501e-06 8.07637535e-06 7.61102764e-06 7.17249250e-06
 6.75922506e-06 6.36976942e-06 6.00275358e-06 5.65688460e-06
 5.33094404e-06 5.02378365e-06 4.73432134e-06 4.46153738e-06
 4.20447080e-06 3.96221597e-06 3.73391948e-06 3.51877706e-06
 3.31603081e-06 3.12496646e-06 2.94491094e-06 2.77522992e-06
 2.61532565e-06 2.46463481e-06 2.32262652e-06 2.18880053e-06
 2.06268538e-06 1.94383677e-06 1.83183603e-06 1.72628860e-06
 1.62682263e-06 1.53308774e-06 1.44475370e-06 1.36150932e-06
 1.28306135e-06 1.20913342e-06 1.13946511e-06 1.07381097e-06
 1.01193971e-06 9.53633378e-07 8.98686561e-07 8.46905692e-07
 7.98108352e-07 7.52122637e-07 7.08786544e-07 6.67947407e-07
 6.29461355e-07 5.93192807e-07 5.59013995e-07 5.26804510e-07
 4.96450884e-07 4.67846185e-07 4.40889643e-07 4.15486293e-07
 3.91546643e-07 3.68986357e-07 3.47725959e-07 3.27690550e-07
 3.08809549e-07 2.91016441e-07 2.74248544e-07 2.58446785e-07
 2.43555498e-07 2.29522223e-07 2.16297523e-07 2.03834809e-07
 1.92090176e-07 1.81022250e-07 1.70592040e-07 1.60762802e-07
 1.51499909e-07 1.42770728e-07 1.34544509e-07 1.26792272e-07
 1.19486706e-07 1.12602075e-07 1.06114125e-07 1.00000000e-07]
[2019-08-14 20:12:17,647-rk0-trainval_siamrcnn_corr.py#239] model prepare done
[2019-08-14 20:12:17,649-rk0-trainval_siamrcnn_corr.py#296] train epoch:0
[2019-08-14 20:16:44,899-rk0-trainval_siamrcnn_corr.py#197] 
PyTorch version: 0.4.1.post2
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: CentOS Linux 7 (Core)
GCC version: (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11)
CMake version: version 2.8.12.2

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: 
GPU 0: GeForce GTX 1080 Ti
GPU 1: GeForce GTX 1080 Ti
GPU 2: GeForce GTX 1080 Ti
GPU 3: GeForce GTX 1080 Ti
GPU 4: GeForce GTX 1080 Ti
GPU 5: GeForce GTX 1080 Ti

Nvidia driver version: 410.48
cuDNN version: Could not collect

Versions of relevant libraries:
[pip] Could not collect
[conda] pytorch                   0.4.1           py36_py35_py27__9.0.176_7.1.2_2    pytorch
[conda] torchvision               0.2.1                    py36_1    pytorch
        OpenCV (3.4.3)
[2019-08-14 20:16:44,900-rk0-trainval_siamrcnn_corr.py#198] Namespace(arch='', batch=24, clip=10.0, config='config.json', debug=False, dense_hp=False, epochs=200, hm_hp=True, hm_hp_weight=1.5, hp_weight=1, log='logs/log_0814.txt', log_dir='board/show_0814', lr=0.001, momentum=0.9, mse_loss=False, not_hm_hp=False, not_reg_bbox=False, not_reg_hp_offset=False, off_weight=1, output_size=56, pretrained='./snapshot_0811/checkpoint_e99.pth', print_freq=10, reg_bbox=True, reg_hp_offset=True, reg_loss='l1', resume='', save_dir='snapshot_0814', save_freq=5, start_epoch=0, weight_decay=0.0001, workers=4)
[2019-08-14 20:16:44,902-rk0-trainval_siamrcnn_corr.py#201] config 
{
    "network": {
        "arch": "Custom"
    },
    "hp": {
        "instance_size": 255,
        "base_size": 8
    },
    "lr": {
        "feature_lr_mult": 1.0,
        "rpn_lr_mult": 1.0,
        "mask_lr_mult": 1.0,
        "type": "log",
        "start_lr": 0.01,
        "end_lr": 1e-07,
        "warmup": {
            "start_lr": 0.001,
            "end_lr": 0.01,
            "type": "step",
            "step": 1,
            "epoch": 5
        }
    },
    "loss": {
        "weight": [
            1.0,
            1.2,
            1.0
        ],
        "reg": {
            "loss": "L1Loss"
        },
        "cls": {
            "split": true
        }
    },
    "train_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/train2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 4,
                "scale": 0.05
            },
            "search": {
                "shift": 0.0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0.15
        }
    },
    "val_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/val2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 0,
                "scale": 0.0
            },
            "search": {
                "shift": 0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0
        }
    },
    "anchors": {
        "stride": 8,
        "ratios": [
            0.33,
            0.5,
            1,
            2,
            3
        ],
        "scales": [
            8
        ],
        "round_dight": 0
    },
    "mask": {},
    "clip": {
        "feature": 10.0,
        "rpn": 10.0,
        "split": false
    }
}
[2019-08-14 20:16:45,682-rk0-trainval_siamrcnn_corr.py#144] build train dataset
[2019-08-14 20:16:45,684-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/train2017_pose_siamfc.json
[2019-08-14 20:16:48,596-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/train2017_pose_siamfc.json loaded.
[2019-08-14 20:16:48,632-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [45900/45900] path {}.{}.{}.jpg
[2019-08-14 20:16:48,699-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 20:16:48,730-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 20:16:48,733-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0.15,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 45900
}
[2019-08-14 20:16:48,799-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 20:16:48,800-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 20:16:48,801-rk0-trainval_siamrcnn_corr.py#148] build val dataset
[2019-08-14 20:16:48,803-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/val2017_pose_siamfc.json
[2019-08-14 20:16:48,896-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/val2017_pose_siamfc.json loaded.
[2019-08-14 20:16:48,899-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [1899/1899] path {}.{}.{}.jpg
[2019-08-14 20:16:48,903-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 20:16:48,904-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 20:16:48,905-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 1899
}
[2019-08-14 20:16:48,908-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 20:16:48,909-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 20:16:48,910-rk0-trainval_siamrcnn_corr.py#159] build dataset done
[2019-08-14 20:16:53,561-rk0-load_helper.py# 40] load pretrained model from ../resnet.model
[2019-08-14 20:16:53,950-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 20:16:53,952-rk0-load_helper.py# 13] [Warning] missing keys: {'layer3.4.bn1.num_batches_tracked', 'layer1.0.bn1.num_batches_tracked', 'layer3.5.bn3.num_batches_tracked', 'layer3.3.bn2.num_batches_tracked', 'layer3.4.bn3.num_batches_tracked', 'layer1.0.bn3.num_batches_tracked', 'layer2.0.bn1.num_batches_tracked', 'layer3.1.bn3.num_batches_tracked', 'layer1.2.bn3.num_batches_tracked', 'layer1.0.bn2.num_batches_tracked', 'layer2.3.bn2.num_batches_tracked', 'layer2.1.bn1.num_batches_tracked', 'layer3.4.bn2.num_batches_tracked', 'layer3.1.bn2.num_batches_tracked', 'layer1.0.downsample.1.num_batches_tracked', 'layer3.2.bn1.num_batches_tracked', 'layer1.1.bn3.num_batches_tracked', 'bn1.num_batches_tracked', 'layer3.2.bn2.num_batches_tracked', 'layer3.5.bn2.num_batches_tracked', 'layer2.0.downsample.1.num_batches_tracked', 'layer1.1.bn2.num_batches_tracked', 'layer2.2.bn1.num_batches_tracked', 'layer2.0.bn2.num_batches_tracked', 'layer2.2.bn3.num_batches_tracked', 'layer1.2.bn1.num_batches_tracked', 'layer3.3.bn1.num_batches_tracked', 'layer2.3.bn1.num_batches_tracked', 'layer2.3.bn3.num_batches_tracked', 'layer1.1.bn1.num_batches_tracked', 'layer2.1.bn2.num_batches_tracked', 'layer3.5.bn1.num_batches_tracked', 'layer2.2.bn2.num_batches_tracked', 'layer2.1.bn3.num_batches_tracked', 'layer3.0.downsample.1.num_batches_tracked', 'layer3.0.bn3.num_batches_tracked', 'layer3.3.bn3.num_batches_tracked', 'layer1.2.bn2.num_batches_tracked', 'layer3.0.bn2.num_batches_tracked', 'layer2.0.bn3.num_batches_tracked', 'layer3.2.bn3.num_batches_tracked', 'layer3.0.bn1.num_batches_tracked', 'layer3.1.bn1.num_batches_tracked'}
[2019-08-14 20:16:53,953-rk0-load_helper.py# 14] missing keys:43
[2019-08-14 20:16:53,954-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'layer4.0.bn3.running_var', 'layer4.1.bn2.running_var', 'layer4.0.downsample.1.running_mean', 'layer4.1.bn3.bias', 'layer4.2.bn3.running_mean', 'layer4.1.bn1.bias', 'layer4.1.bn1.running_var', 'layer4.0.bn1.bias', 'layer4.2.bn3.weight', 'layer4.2.bn1.weight', 'layer4.2.conv2.weight', 'layer4.0.bn2.weight', 'layer4.0.conv2.weight', 'layer4.0.downsample.1.bias', 'layer4.0.bn2.running_mean', 'layer4.0.downsample.1.weight', 'layer4.2.bn3.bias', 'layer4.2.conv1.weight', 'layer4.0.bn1.running_mean', 'layer4.0.bn2.bias', 'layer4.1.conv3.weight', 'layer4.0.downsample.1.running_var', 'layer4.2.bn2.running_var', 'layer4.0.conv1.weight', 'layer4.1.conv2.weight', 'layer4.1.bn1.weight', 'layer4.2.bn2.bias', 'layer4.0.bn1.running_var', 'layer4.0.downsample.0.weight', 'layer4.0.bn3.weight', 'layer4.2.bn2.weight', 'layer4.0.bn3.bias', 'layer4.0.bn3.running_mean', 'layer4.1.bn2.weight', 'layer4.2.bn3.running_var', 'layer4.0.bn2.running_var', 'layer4.1.bn3.weight', 'layer4.0.conv3.weight', 'layer4.1.conv1.weight', 'layer4.1.bn3.running_mean', 'layer4.1.bn3.running_var', 'layer4.2.conv3.weight', 'layer4.1.bn1.running_mean', 'layer4.1.bn2.bias', 'layer4.2.bn1.running_var', 'layer4.1.bn2.running_mean', 'layer4.0.bn1.weight', 'layer4.2.bn1.running_mean', 'layer4.2.bn2.running_mean', 'layer4.2.bn1.bias'}
[2019-08-14 20:16:53,955-rk0-load_helper.py# 17] unused checkpoint keys:50
[2019-08-14 20:16:53,955-rk0-load_helper.py# 18] used keys:215
[2019-08-14 20:16:53,982-rk0-features.py# 66] Current training 0 layers:
	
[2019-08-14 20:16:53,984-rk0-features.py# 66] Current training 3 layers:
	
[2019-08-14 20:16:54,678-rk0-trainval_siamrcnn_corr.py#219] Custom(
  (upSample): UpsamplingBilinear2d(size=[127, 127], mode=bilinear)
  (kp_criterion): PoseLoss(
    (crit_hm_hp): FocalLoss()
    (crit_kp): RegWeightedL1Loss()
    (crit_reg): RegL1Loss()
  )
  (features): ResDown(
    (features): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer2): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer3): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (4): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (5): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
    )
    (downsample): ResDownS(
      (downsample): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (rpn_model): UP(
    (cls): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 10, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (loc): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 20, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (pose_corr): PoseCorr(
    (kp): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (kp_model): Center_pose_head(
    (deconv_layers_new): Sequential(
      (0): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace)
      (3): ConvTranspose2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace)
      (6): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU(inplace)
      (9): ConvTranspose2d(256, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (10): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (11): ReLU(inplace)
      (12): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (13): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (14): ReLU(inplace)
      (15): ConvTranspose2d(64, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (16): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (17): ReLU(inplace)
    )
    (hps): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 34, kernel_size=(1, 1), stride=(1, 1))
    )
    (hm_hp): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 17, kernel_size=(1, 1), stride=(1, 1))
    )
    (hp_offset): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (dpooling): ModulatedDeformRoIPoolingPack(
    (offset_fc): Sequential(
      (0): Linear(in_features=25088, out_features=1024, bias=True)
      (1): ReLU(inplace)
      (2): Linear(in_features=1024, out_features=1024, bias=True)
      (3): ReLU(inplace)
      (4): Linear(in_features=1024, out_features=98, bias=True)
    )
    (mask_fc): Sequential(
      (0): Linear(in_features=25088, out_features=1024, bias=True)
      (1): ReLU(inplace)
      (2): Linear(in_features=1024, out_features=49, bias=True)
      (3): Sigmoid()
    )
  )
)
[2019-08-14 20:16:54,684-rk0-load_helper.py# 40] load pretrained model from ./snapshot_0811/checkpoint_e99.pth
[2019-08-14 20:16:55,063-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 20:16:55,066-rk0-load_helper.py# 13] [Warning] missing keys: {'dpooling.mask_fc.2.bias', 'dpooling.offset_fc.4.bias', 'kp_model.deconv_layers_new.12.bias', 'kp_model.deconv_layers_new.12.conv_offset_mask.bias', 'kp_model.deconv_layers_new.12.conv_offset_mask.weight', 'kp_model.deconv_layers_new.0.bias', 'dpooling.mask_fc.2.weight', 'dpooling.offset_fc.2.weight', 'kp_model.deconv_layers_new.0.conv_offset_mask.bias', 'dpooling.offset_fc.0.bias', 'kp_model.deconv_layers_new.6.bias', 'kp_model.deconv_layers_new.0.conv_offset_mask.weight', 'dpooling.mask_fc.0.bias', 'kp_model.deconv_layers_new.6.conv_offset_mask.bias', 'dpooling.offset_fc.2.bias', 'dpooling.mask_fc.0.weight', 'dpooling.offset_fc.0.weight', 'kp_model.deconv_layers_new.6.conv_offset_mask.weight', 'dpooling.offset_fc.4.weight'}
[2019-08-14 20:16:55,067-rk0-load_helper.py# 14] missing keys:19
[2019-08-14 20:16:55,067-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'features.features.layer4.0.bn3.running_var', 'features.features.layer4.1.bn1.running_mean', 'features.features.layer4.0.conv2.weight', 'features.features.layer4.1.bn3.bias', 'features.features.layer4.0.bn2.num_batches_tracked', 'features.features.layer4.1.bn3.weight', 'features.features.layer4.1.bn2.running_mean', 'features.features.layer4.2.bn3.bias', 'features.features.layer4.2.bn2.bias', 'features.downsample_p4.downsample.1.running_mean', 'features.features.layer4.2.bn1.running_mean', 'features.features.layer4.1.bn2.bias', 'features.features.layer4.0.downsample.1.bias', 'features.features.layer4.0.bn3.running_mean', 'features.features.layer4.2.bn3.num_batches_tracked', 'features.features.layer4.2.bn3.running_mean', 'features.features.layer4.0.bn2.bias', 'features.features.layer4.2.bn2.running_var', 'features.downsample_p4.downsample.1.num_batches_tracked', 'features.features.layer4.2.conv3.weight', 'features.features.layer4.2.bn1.weight', 'features.downsample_p4.downsample.1.running_var', 'features.features.layer4.2.bn3.weight', 'features.features.layer4.0.bn1.bias', 'features.features.layer4.2.bn2.weight', 'features.features.layer4.2.bn1.bias', 'features.features.layer4.1.bn2.num_batches_tracked', 'features.features.layer4.0.downsample.1.running_var', 'features.features.layer4.2.conv2.weight', 'features.downsample_p4.downsample.1.bias', 'features.features.layer4.1.conv1.weight', 'features.features.layer4.1.conv3.weight', 'features.features.layer4.0.bn1.num_batches_tracked', 'features.features.layer4.2.bn1.running_var', 'features.features.layer4.1.bn1.num_batches_tracked', 'features.features.layer4.0.conv3.weight', 'features.features.layer4.0.bn1.running_var', 'features.features.layer4.2.bn1.num_batches_tracked', 'features.features.layer4.0.conv1.weight', 'features.features.layer4.0.downsample.1.weight', 'features.features.layer4.1.bn1.running_var', 'features.downsample_p4.downsample.1.weight', 'features.features.layer4.0.bn2.running_var', 'features.features.layer4.1.bn3.num_batches_tracked', 'features.features.layer4.1.conv2.weight', 'features.features.layer4.1.bn1.bias', 'features.features.layer4.0.downsample.1.num_batches_tracked', 'features.features.layer4.2.bn2.num_batches_tracked', 'features.features.layer4.0.downsample.0.weight', 'features.features.layer4.1.bn1.weight', 'features.features.layer4.2.bn3.running_var', 'features.features.layer4.1.bn2.weight', 'features.features.layer4.2.bn2.running_mean', 'features.features.layer4.0.bn2.weight', 'features.features.layer4.2.conv1.weight', 'features.features.layer4.0.bn3.weight', 'features.features.layer4.0.bn3.num_batches_tracked', 'features.features.layer4.0.downsample.1.running_mean', 'features.features.layer4.1.bn3.running_var', 'features.features.layer4.1.bn2.running_var', 'features.features.layer4.0.bn1.weight', 'features.features.layer4.0.bn1.running_mean', 'features.features.layer4.1.bn3.running_mean', 'features.features.layer4.0.bn3.bias', 'features.features.layer4.0.bn2.running_mean', 'features.downsample_p4.downsample.0.weight'}
[2019-08-14 20:16:55,068-rk0-load_helper.py# 17] unused checkpoint keys:66
[2019-08-14 20:16:55,068-rk0-load_helper.py# 18] used keys:372
[2019-08-14 20:16:55,188-rk0-trainval_siamrcnn_corr.py#237] (WarmUPScheduler) lr spaces: 
[1.00000000e-03 1.58489319e-03 2.51188643e-03 3.98107171e-03
 6.30957344e-03 1.00000000e-02 9.42381613e-03 8.88083105e-03
 8.36913190e-03 7.88691602e-03 7.43248464e-03 7.00423687e-03
 6.60066404e-03 6.22034443e-03 5.86193822e-03 5.52418280e-03
 5.20588830e-03 4.90593341e-03 4.62326145e-03 4.35687658e-03
 4.10584038e-03 3.86926848e-03 3.64632748e-03 3.43623197e-03
 3.23824183e-03 3.05165956e-03 2.87582786e-03 2.71012730e-03
 2.55397414e-03 2.40681827e-03 2.26814128e-03 2.13745464e-03
 2.01429795e-03 1.89823735e-03 1.78886398e-03 1.68579252e-03
 1.58865988e-03 1.49712386e-03 1.41086200e-03 1.32957041e-03
 1.25296271e-03 1.18076902e-03 1.11273501e-03 1.04862101e-03
 9.88201163e-04 9.31262607e-04 8.77604758e-04 8.27038588e-04
 7.79385959e-04 7.34478997e-04 6.92159502e-04 6.52278389e-04
 6.14695160e-04 5.79277417e-04 5.45900387e-04 5.14446487e-04
 4.84804911e-04 4.56871234e-04 4.30547051e-04 4.05739624e-04
 3.82361562e-04 3.60330505e-04 3.39568843e-04 3.20003434e-04
 3.01565353e-04 2.84189644e-04 2.67815095e-04 2.52384021e-04
 2.37842061e-04 2.24137985e-04 2.11223516e-04 1.99053158e-04
 1.87584036e-04 1.76775747e-04 1.66590213e-04 1.56991554e-04
 1.47945954e-04 1.39421547e-04 1.31388302e-04 1.23817920e-04
 1.16683732e-04 1.09960603e-04 1.03624851e-04 9.76541539e-05
 9.20274791e-05 8.67250043e-05 8.17280495e-05 7.70190111e-05
 7.25813000e-05 6.83992826e-05 6.44582263e-05 6.07442473e-05
 5.72442617e-05 5.39459397e-05 5.08376617e-05 4.79084777e-05
 4.51480685e-05 4.25467096e-05 4.00952369e-05 3.77850140e-05
 3.56079025e-05 3.35562326e-05 3.16227766e-05 2.98007232e-05
 2.80836536e-05 2.64655188e-05 2.49406183e-05 2.35035802e-05
 2.21493418e-05 2.08731324e-05 1.96704562e-05 1.85370763e-05
 1.74689999e-05 1.64624643e-05 1.55139236e-05 1.46200364e-05
 1.37776535e-05 1.29838073e-05 1.22357013e-05 1.15306999e-05
 1.08663196e-05 1.02402198e-05 9.65019485e-06 9.09416619e-06
 8.57017501e-06 8.07637535e-06 7.61102764e-06 7.17249250e-06
 6.75922506e-06 6.36976942e-06 6.00275358e-06 5.65688460e-06
 5.33094404e-06 5.02378365e-06 4.73432134e-06 4.46153738e-06
 4.20447080e-06 3.96221597e-06 3.73391948e-06 3.51877706e-06
 3.31603081e-06 3.12496646e-06 2.94491094e-06 2.77522992e-06
 2.61532565e-06 2.46463481e-06 2.32262652e-06 2.18880053e-06
 2.06268538e-06 1.94383677e-06 1.83183603e-06 1.72628860e-06
 1.62682263e-06 1.53308774e-06 1.44475370e-06 1.36150932e-06
 1.28306135e-06 1.20913342e-06 1.13946511e-06 1.07381097e-06
 1.01193971e-06 9.53633378e-07 8.98686561e-07 8.46905692e-07
 7.98108352e-07 7.52122637e-07 7.08786544e-07 6.67947407e-07
 6.29461355e-07 5.93192807e-07 5.59013995e-07 5.26804510e-07
 4.96450884e-07 4.67846185e-07 4.40889643e-07 4.15486293e-07
 3.91546643e-07 3.68986357e-07 3.47725959e-07 3.27690550e-07
 3.08809549e-07 2.91016441e-07 2.74248544e-07 2.58446785e-07
 2.43555498e-07 2.29522223e-07 2.16297523e-07 2.03834809e-07
 1.92090176e-07 1.81022250e-07 1.70592040e-07 1.60762802e-07
 1.51499909e-07 1.42770728e-07 1.34544509e-07 1.26792272e-07
 1.19486706e-07 1.12602075e-07 1.06114125e-07 1.00000000e-07]
[2019-08-14 20:16:55,194-rk0-trainval_siamrcnn_corr.py#239] model prepare done
[2019-08-14 20:16:55,196-rk0-trainval_siamrcnn_corr.py#296] train epoch:0
[2019-08-14 20:19:27,521-rk0-trainval_siamrcnn_corr.py#197] 
PyTorch version: 0.4.1.post2
Is debug build: No
CUDA used to build PyTorch: 9.0.176

OS: CentOS Linux 7 (Core)
GCC version: (GCC) 4.8.5 20150623 (Red Hat 4.8.5-11)
CMake version: version 2.8.12.2

Python version: 3.6
Is CUDA available: Yes
CUDA runtime version: 9.0.176
GPU models and configuration: 
GPU 0: GeForce GTX 1080 Ti
GPU 1: GeForce GTX 1080 Ti
GPU 2: GeForce GTX 1080 Ti
GPU 3: GeForce GTX 1080 Ti
GPU 4: GeForce GTX 1080 Ti
GPU 5: GeForce GTX 1080 Ti

Nvidia driver version: 410.48
cuDNN version: Could not collect

Versions of relevant libraries:
[pip] Could not collect
[conda] pytorch                   0.4.1           py36_py35_py27__9.0.176_7.1.2_2    pytorch
[conda] torchvision               0.2.1                    py36_1    pytorch
        OpenCV (3.4.3)
[2019-08-14 20:19:27,522-rk0-trainval_siamrcnn_corr.py#198] Namespace(arch='', batch=16, clip=10.0, config='config.json', debug=False, dense_hp=False, epochs=200, hm_hp=True, hm_hp_weight=1.5, hp_weight=1, log='logs/log_0814.txt', log_dir='board/show_0814', lr=0.001, momentum=0.9, mse_loss=False, not_hm_hp=False, not_reg_bbox=False, not_reg_hp_offset=False, off_weight=1, output_size=56, pretrained='./snapshot_0811/checkpoint_e99.pth', print_freq=10, reg_bbox=True, reg_hp_offset=True, reg_loss='l1', resume='', save_dir='snapshot_0814', save_freq=5, start_epoch=0, weight_decay=0.0001, workers=4)
[2019-08-14 20:19:27,525-rk0-trainval_siamrcnn_corr.py#201] config 
{
    "network": {
        "arch": "Custom"
    },
    "hp": {
        "instance_size": 255,
        "base_size": 8
    },
    "lr": {
        "feature_lr_mult": 1.0,
        "rpn_lr_mult": 1.0,
        "mask_lr_mult": 1.0,
        "type": "log",
        "start_lr": 0.01,
        "end_lr": 1e-07,
        "warmup": {
            "start_lr": 0.001,
            "end_lr": 0.01,
            "type": "step",
            "step": 1,
            "epoch": 5
        }
    },
    "loss": {
        "weight": [
            1.0,
            1.2,
            1.0
        ],
        "reg": {
            "loss": "L1Loss"
        },
        "cls": {
            "split": true
        }
    },
    "train_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/train2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 4,
                "scale": 0.05
            },
            "search": {
                "shift": 0.0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0.15
        }
    },
    "val_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop_pose",
                "anno": "../../data/coco/val2017_pose_siamfc.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "RPN_NMS": 0.25,
        "augmentation": {
            "template": {
                "shift": 0,
                "scale": 0.0
            },
            "search": {
                "shift": 0,
                "scale": 0.0,
                "blur": 0.18
            },
            "neg": 0,
            "gray": 0
        }
    },
    "anchors": {
        "stride": 8,
        "ratios": [
            0.33,
            0.5,
            1,
            2,
            3
        ],
        "scales": [
            8
        ],
        "round_dight": 0
    },
    "mask": {},
    "clip": {
        "feature": 10.0,
        "rpn": 10.0,
        "split": false
    }
}
[2019-08-14 20:19:27,530-rk0-trainval_siamrcnn_corr.py#144] build train dataset
[2019-08-14 20:19:27,532-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/train2017_pose_siamfc.json
[2019-08-14 20:19:30,386-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/train2017_pose_siamfc.json loaded.
[2019-08-14 20:19:30,422-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [45900/45900] path {}.{}.{}.jpg
[2019-08-14 20:19:30,489-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 20:19:30,490-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 20:19:30,493-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0.15,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 45900
}
[2019-08-14 20:19:30,559-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 20:19:30,560-rk0-siam_rcnn_dataset.py#750] dataset length 45900
[2019-08-14 20:19:30,561-rk0-trainval_siamrcnn_corr.py#148] build val dataset
[2019-08-14 20:19:30,562-rk0-siam_rcnn_dataset.py# 38] loading ../../data/coco/val2017_pose_siamfc.json
[2019-08-14 20:19:30,655-rk0-siam_rcnn_dataset.py# 76] ../../data/coco/val2017_pose_siamfc.json loaded.
[2019-08-14 20:19:30,658-rk0-siam_rcnn_dataset.py#140] SubDataSet coco start-index 0 select [1899/1899] path {}.{}.{}.jpg
[2019-08-14 20:19:30,662-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 20:19:30,662-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 20:19:30,663-rk0-siam_rcnn_dataset.py#603] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 1899
}
[2019-08-14 20:19:30,667-rk0-siam_rcnn_dataset.py#749] shuffle done!
[2019-08-14 20:19:30,668-rk0-siam_rcnn_dataset.py#750] dataset length 1899
[2019-08-14 20:19:30,668-rk0-trainval_siamrcnn_corr.py#159] build dataset done
[2019-08-14 20:19:35,478-rk0-load_helper.py# 40] load pretrained model from ../resnet.model
[2019-08-14 20:19:35,902-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 20:19:35,904-rk0-load_helper.py# 13] [Warning] missing keys: {'layer3.2.bn2.num_batches_tracked', 'layer2.0.bn2.num_batches_tracked', 'layer1.1.bn1.num_batches_tracked', 'layer2.3.bn2.num_batches_tracked', 'layer1.1.bn2.num_batches_tracked', 'layer1.2.bn1.num_batches_tracked', 'layer3.3.bn2.num_batches_tracked', 'layer3.1.bn1.num_batches_tracked', 'layer3.4.bn3.num_batches_tracked', 'bn1.num_batches_tracked', 'layer1.2.bn2.num_batches_tracked', 'layer2.0.bn3.num_batches_tracked', 'layer3.2.bn3.num_batches_tracked', 'layer1.0.downsample.1.num_batches_tracked', 'layer2.0.bn1.num_batches_tracked', 'layer3.4.bn1.num_batches_tracked', 'layer1.0.bn2.num_batches_tracked', 'layer2.1.bn3.num_batches_tracked', 'layer2.2.bn3.num_batches_tracked', 'layer1.0.bn3.num_batches_tracked', 'layer2.2.bn2.num_batches_tracked', 'layer3.5.bn2.num_batches_tracked', 'layer3.0.bn2.num_batches_tracked', 'layer2.0.downsample.1.num_batches_tracked', 'layer3.1.bn2.num_batches_tracked', 'layer3.4.bn2.num_batches_tracked', 'layer1.1.bn3.num_batches_tracked', 'layer3.1.bn3.num_batches_tracked', 'layer3.5.bn1.num_batches_tracked', 'layer3.2.bn1.num_batches_tracked', 'layer2.3.bn3.num_batches_tracked', 'layer2.1.bn2.num_batches_tracked', 'layer3.0.bn1.num_batches_tracked', 'layer3.3.bn3.num_batches_tracked', 'layer2.1.bn1.num_batches_tracked', 'layer3.0.downsample.1.num_batches_tracked', 'layer1.0.bn1.num_batches_tracked', 'layer3.5.bn3.num_batches_tracked', 'layer3.0.bn3.num_batches_tracked', 'layer2.3.bn1.num_batches_tracked', 'layer1.2.bn3.num_batches_tracked', 'layer2.2.bn1.num_batches_tracked', 'layer3.3.bn1.num_batches_tracked'}
[2019-08-14 20:19:35,904-rk0-load_helper.py# 14] missing keys:43
[2019-08-14 20:19:35,905-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'layer4.1.conv1.weight', 'layer4.0.downsample.1.running_var', 'layer4.0.bn1.running_var', 'layer4.1.bn1.bias', 'layer4.0.bn1.bias', 'layer4.1.bn1.running_var', 'layer4.2.bn3.running_mean', 'layer4.1.bn2.weight', 'layer4.1.bn3.weight', 'layer4.1.bn2.running_var', 'layer4.2.bn2.bias', 'layer4.2.bn3.running_var', 'layer4.1.bn1.running_mean', 'layer4.0.conv3.weight', 'layer4.2.bn1.running_mean', 'layer4.2.bn2.weight', 'layer4.2.bn2.running_mean', 'layer4.0.bn3.running_mean', 'layer4.2.bn3.bias', 'layer4.0.conv2.weight', 'layer4.0.conv1.weight', 'layer4.1.bn3.bias', 'layer4.0.bn2.bias', 'layer4.0.downsample.1.running_mean', 'layer4.0.downsample.1.weight', 'layer4.2.bn2.running_var', 'layer4.0.bn3.weight', 'layer4.0.bn2.running_var', 'layer4.1.bn1.weight', 'layer4.2.bn1.running_var', 'layer4.2.conv3.weight', 'layer4.2.bn3.weight', 'layer4.0.bn3.bias', 'layer4.0.bn1.weight', 'layer4.1.bn3.running_var', 'layer4.2.bn1.bias', 'layer4.2.bn1.weight', 'layer4.0.downsample.0.weight', 'layer4.0.bn1.running_mean', 'layer4.1.conv3.weight', 'layer4.0.bn2.running_mean', 'layer4.0.bn2.weight', 'layer4.0.downsample.1.bias', 'layer4.1.bn3.running_mean', 'layer4.1.bn2.running_mean', 'layer4.1.conv2.weight', 'layer4.2.conv2.weight', 'layer4.1.bn2.bias', 'layer4.0.bn3.running_var', 'layer4.2.conv1.weight'}
[2019-08-14 20:19:35,906-rk0-load_helper.py# 17] unused checkpoint keys:50
[2019-08-14 20:19:35,906-rk0-load_helper.py# 18] used keys:215
[2019-08-14 20:19:35,931-rk0-features.py# 66] Current training 0 layers:
	
[2019-08-14 20:19:35,933-rk0-features.py# 66] Current training 3 layers:
	
[2019-08-14 20:19:36,621-rk0-trainval_siamrcnn_corr.py#219] Custom(
  (upSample): UpsamplingBilinear2d(size=[127, 127], mode=bilinear)
  (kp_criterion): PoseLoss(
    (crit_hm_hp): FocalLoss()
    (crit_kp): RegWeightedL1Loss()
    (crit_reg): RegL1Loss()
  )
  (features): ResDown(
    (features): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer2): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer3): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (4): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (5): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
    )
    (downsample): ResDownS(
      (downsample): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (rpn_model): UP(
    (cls): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 10, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (loc): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 20, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (pose_corr): PoseCorr(
    (kp): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (kp_model): Center_pose_head(
    (deconv_layers_new): Sequential(
      (0): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace)
      (3): ConvTranspose2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace)
      (6): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(512, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU(inplace)
      (9): ConvTranspose2d(256, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (10): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (11): ReLU(inplace)
      (12): ModulatedDeformConvPack(
        (conv_offset_mask): Conv2d(256, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (13): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (14): ReLU(inplace)
      (15): ConvTranspose2d(64, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
      (16): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (17): ReLU(inplace)
    )
    (hps): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 34, kernel_size=(1, 1), stride=(1, 1))
    )
    (hm_hp): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 17, kernel_size=(1, 1), stride=(1, 1))
    )
    (hp_offset): Sequential(
      (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace)
      (2): Conv2d(256, 2, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (dpooling): ModulatedDeformRoIPoolingPack(
    (offset_fc): Sequential(
      (0): Linear(in_features=25088, out_features=1024, bias=True)
      (1): ReLU(inplace)
      (2): Linear(in_features=1024, out_features=1024, bias=True)
      (3): ReLU(inplace)
      (4): Linear(in_features=1024, out_features=98, bias=True)
    )
    (mask_fc): Sequential(
      (0): Linear(in_features=25088, out_features=1024, bias=True)
      (1): ReLU(inplace)
      (2): Linear(in_features=1024, out_features=49, bias=True)
      (3): Sigmoid()
    )
  )
)
[2019-08-14 20:19:36,627-rk0-load_helper.py# 40] load pretrained model from ./snapshot_0811/checkpoint_e99.pth
[2019-08-14 20:19:36,978-rk0-load_helper.py# 25] remove prefix 'module.'
[2019-08-14 20:19:36,981-rk0-load_helper.py# 13] [Warning] missing keys: {'kp_model.deconv_layers_new.12.bias', 'dpooling.mask_fc.2.bias', 'dpooling.offset_fc.2.bias', 'dpooling.offset_fc.4.weight', 'kp_model.deconv_layers_new.0.conv_offset_mask.bias', 'dpooling.mask_fc.0.bias', 'dpooling.mask_fc.0.weight', 'kp_model.deconv_layers_new.6.bias', 'dpooling.offset_fc.0.weight', 'kp_model.deconv_layers_new.6.conv_offset_mask.weight', 'kp_model.deconv_layers_new.12.conv_offset_mask.bias', 'kp_model.deconv_layers_new.0.bias', 'dpooling.offset_fc.4.bias', 'kp_model.deconv_layers_new.12.conv_offset_mask.weight', 'dpooling.offset_fc.2.weight', 'kp_model.deconv_layers_new.6.conv_offset_mask.bias', 'kp_model.deconv_layers_new.0.conv_offset_mask.weight', 'dpooling.mask_fc.2.weight', 'dpooling.offset_fc.0.bias'}
[2019-08-14 20:19:36,982-rk0-load_helper.py# 14] missing keys:19
[2019-08-14 20:19:36,982-rk0-load_helper.py# 16] [Warning] unused_pretrained_keys: {'features.features.layer4.1.bn1.bias', 'features.features.layer4.2.conv1.weight', 'features.downsample_p4.downsample.1.running_var', 'features.features.layer4.0.downsample.1.weight', 'features.features.layer4.1.conv2.weight', 'features.features.layer4.1.bn1.weight', 'features.features.layer4.1.bn1.running_mean', 'features.features.layer4.2.bn1.bias', 'features.features.layer4.1.bn2.num_batches_tracked', 'features.features.layer4.1.bn3.bias', 'features.features.layer4.0.bn3.num_batches_tracked', 'features.features.layer4.0.downsample.1.num_batches_tracked', 'features.features.layer4.1.bn2.running_var', 'features.features.layer4.1.bn2.running_mean', 'features.features.layer4.2.conv3.weight', 'features.features.layer4.2.bn2.running_var', 'features.features.layer4.2.bn3.running_mean', 'features.features.layer4.0.downsample.1.running_var', 'features.features.layer4.0.bn1.running_var', 'features.downsample_p4.downsample.1.num_batches_tracked', 'features.features.layer4.1.bn2.weight', 'features.features.layer4.0.conv2.weight', 'features.features.layer4.2.conv2.weight', 'features.features.layer4.0.bn2.weight', 'features.features.layer4.1.bn1.running_var', 'features.downsample_p4.downsample.1.bias', 'features.features.layer4.0.downsample.0.weight', 'features.features.layer4.0.bn2.running_var', 'features.features.layer4.0.bn1.bias', 'features.features.layer4.2.bn2.bias', 'features.features.layer4.1.conv1.weight', 'features.features.layer4.0.bn3.running_mean', 'features.features.layer4.0.bn2.running_mean', 'features.features.layer4.0.bn1.running_mean', 'features.features.layer4.0.conv3.weight', 'features.features.layer4.0.downsample.1.bias', 'features.features.layer4.2.bn3.bias', 'features.features.layer4.2.bn1.running_mean', 'features.features.layer4.2.bn1.num_batches_tracked', 'features.features.layer4.2.bn2.num_batches_tracked', 'features.features.layer4.0.bn3.weight', 'features.features.layer4.2.bn3.running_var', 'features.features.layer4.1.bn3.running_var', 'features.features.layer4.0.bn1.num_batches_tracked', 'features.features.layer4.1.bn2.bias', 'features.features.layer4.2.bn1.running_var', 'features.features.layer4.0.conv1.weight', 'features.features.layer4.0.bn3.bias', 'features.features.layer4.0.bn3.running_var', 'features.features.layer4.2.bn1.weight', 'features.features.layer4.2.bn2.running_mean', 'features.features.layer4.2.bn3.num_batches_tracked', 'features.features.layer4.1.bn3.weight', 'features.downsample_p4.downsample.1.weight', 'features.features.layer4.0.bn1.weight', 'features.downsample_p4.downsample.1.running_mean', 'features.features.layer4.2.bn2.weight', 'features.downsample_p4.downsample.0.weight', 'features.features.layer4.0.bn2.bias', 'features.features.layer4.1.bn3.num_batches_tracked', 'features.features.layer4.1.bn1.num_batches_tracked', 'features.features.layer4.0.bn2.num_batches_tracked', 'features.features.layer4.1.bn3.running_mean', 'features.features.layer4.1.conv3.weight', 'features.features.layer4.0.downsample.1.running_mean', 'features.features.layer4.2.bn3.weight'}
[2019-08-14 20:19:36,983-rk0-load_helper.py# 17] unused checkpoint keys:66
[2019-08-14 20:19:36,983-rk0-load_helper.py# 18] used keys:372
[2019-08-14 20:19:37,103-rk0-trainval_siamrcnn_corr.py#237] (WarmUPScheduler) lr spaces: 
[1.00000000e-03 1.58489319e-03 2.51188643e-03 3.98107171e-03
 6.30957344e-03 1.00000000e-02 9.42381613e-03 8.88083105e-03
 8.36913190e-03 7.88691602e-03 7.43248464e-03 7.00423687e-03
 6.60066404e-03 6.22034443e-03 5.86193822e-03 5.52418280e-03
 5.20588830e-03 4.90593341e-03 4.62326145e-03 4.35687658e-03
 4.10584038e-03 3.86926848e-03 3.64632748e-03 3.43623197e-03
 3.23824183e-03 3.05165956e-03 2.87582786e-03 2.71012730e-03
 2.55397414e-03 2.40681827e-03 2.26814128e-03 2.13745464e-03
 2.01429795e-03 1.89823735e-03 1.78886398e-03 1.68579252e-03
 1.58865988e-03 1.49712386e-03 1.41086200e-03 1.32957041e-03
 1.25296271e-03 1.18076902e-03 1.11273501e-03 1.04862101e-03
 9.88201163e-04 9.31262607e-04 8.77604758e-04 8.27038588e-04
 7.79385959e-04 7.34478997e-04 6.92159502e-04 6.52278389e-04
 6.14695160e-04 5.79277417e-04 5.45900387e-04 5.14446487e-04
 4.84804911e-04 4.56871234e-04 4.30547051e-04 4.05739624e-04
 3.82361562e-04 3.60330505e-04 3.39568843e-04 3.20003434e-04
 3.01565353e-04 2.84189644e-04 2.67815095e-04 2.52384021e-04
 2.37842061e-04 2.24137985e-04 2.11223516e-04 1.99053158e-04
 1.87584036e-04 1.76775747e-04 1.66590213e-04 1.56991554e-04
 1.47945954e-04 1.39421547e-04 1.31388302e-04 1.23817920e-04
 1.16683732e-04 1.09960603e-04 1.03624851e-04 9.76541539e-05
 9.20274791e-05 8.67250043e-05 8.17280495e-05 7.70190111e-05
 7.25813000e-05 6.83992826e-05 6.44582263e-05 6.07442473e-05
 5.72442617e-05 5.39459397e-05 5.08376617e-05 4.79084777e-05
 4.51480685e-05 4.25467096e-05 4.00952369e-05 3.77850140e-05
 3.56079025e-05 3.35562326e-05 3.16227766e-05 2.98007232e-05
 2.80836536e-05 2.64655188e-05 2.49406183e-05 2.35035802e-05
 2.21493418e-05 2.08731324e-05 1.96704562e-05 1.85370763e-05
 1.74689999e-05 1.64624643e-05 1.55139236e-05 1.46200364e-05
 1.37776535e-05 1.29838073e-05 1.22357013e-05 1.15306999e-05
 1.08663196e-05 1.02402198e-05 9.65019485e-06 9.09416619e-06
 8.57017501e-06 8.07637535e-06 7.61102764e-06 7.17249250e-06
 6.75922506e-06 6.36976942e-06 6.00275358e-06 5.65688460e-06
 5.33094404e-06 5.02378365e-06 4.73432134e-06 4.46153738e-06
 4.20447080e-06 3.96221597e-06 3.73391948e-06 3.51877706e-06
 3.31603081e-06 3.12496646e-06 2.94491094e-06 2.77522992e-06
 2.61532565e-06 2.46463481e-06 2.32262652e-06 2.18880053e-06
 2.06268538e-06 1.94383677e-06 1.83183603e-06 1.72628860e-06
 1.62682263e-06 1.53308774e-06 1.44475370e-06 1.36150932e-06
 1.28306135e-06 1.20913342e-06 1.13946511e-06 1.07381097e-06
 1.01193971e-06 9.53633378e-07 8.98686561e-07 8.46905692e-07
 7.98108352e-07 7.52122637e-07 7.08786544e-07 6.67947407e-07
 6.29461355e-07 5.93192807e-07 5.59013995e-07 5.26804510e-07
 4.96450884e-07 4.67846185e-07 4.40889643e-07 4.15486293e-07
 3.91546643e-07 3.68986357e-07 3.47725959e-07 3.27690550e-07
 3.08809549e-07 2.91016441e-07 2.74248544e-07 2.58446785e-07
 2.43555498e-07 2.29522223e-07 2.16297523e-07 2.03834809e-07
 1.92090176e-07 1.81022250e-07 1.70592040e-07 1.60762802e-07
 1.51499909e-07 1.42770728e-07 1.34544509e-07 1.26792272e-07
 1.19486706e-07 1.12602075e-07 1.06114125e-07 1.00000000e-07]
[2019-08-14 20:19:37,109-rk0-trainval_siamrcnn_corr.py#239] model prepare done
[2019-08-14 20:19:37,112-rk0-trainval_siamrcnn_corr.py#296] train epoch:0
[2019-08-14 20:19:47,145-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][10/2868] lr: 0.001000	batch_time: 0.444640 (1.001826)	data_time: 0.014734 (0.231226)	rpn_cls_loss: 0.000197 (0.000356)	rpn_loc_loss: 0.031651 (0.043863)	kp_hp_loss: 2.142313 (2.295599)	kp_hm_hp_loss: 2.159452 (2.289605)	kp_hp_offset_loss: 0.253556 (0.250890)	kp_loss: 5.635047 (5.980897)	siammask_loss: 5.673226 (6.033889)	kp_avg_acc: 0.014897 (0.026757)
[2019-08-14 20:19:47,176-rk0-log_helper.py# 97] Progress: 10 / 573600 [0%], Speed: 1.002 s/iter, ETA 6:15:37 (D:H:M)

[2019-08-14 20:19:55,372-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][20/2868] lr: 0.001000	batch_time: 0.836386 (0.911587)	data_time: 0.426831 (0.318423)	rpn_cls_loss: 0.000636 (0.000360)	rpn_loc_loss: 0.043693 (0.043016)	kp_hp_loss: 2.293266 (2.235529)	kp_hm_hp_loss: 1.932413 (2.130138)	kp_hp_offset_loss: 0.251002 (0.250462)	kp_loss: 5.442888 (5.681197)	siammask_loss: 5.495955 (5.733175)	kp_avg_acc: 0.000000 (0.014158)
[2019-08-14 20:19:55,373-rk0-log_helper.py# 97] Progress: 20 / 573600 [0%], Speed: 0.912 s/iter, ETA 6:01:14 (D:H:M)

[2019-08-14 20:20:00,458-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][30/2868] lr: 0.001000	batch_time: 0.904958 (0.776809)	data_time: 0.483482 (0.243344)	rpn_cls_loss: 0.000193 (0.000400)	rpn_loc_loss: 0.037470 (0.042529)	kp_hp_loss: 2.194280 (2.166511)	kp_hm_hp_loss: 1.931325 (2.033052)	kp_hp_offset_loss: 0.259687 (0.249448)	kp_loss: 5.350955 (5.465535)	siammask_loss: 5.396111 (5.516970)	kp_avg_acc: 0.000000 (0.009439)
[2019-08-14 20:20:00,460-rk0-log_helper.py# 97] Progress: 30 / 573600 [0%], Speed: 0.777 s/iter, ETA 5:03:45 (D:H:M)

[2019-08-14 20:20:04,948-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][40/2868] lr: 0.001000	batch_time: 0.415445 (0.694528)	data_time: 0.008377 (0.190037)	rpn_cls_loss: 0.000354 (0.000459)	rpn_loc_loss: 0.048621 (0.043707)	kp_hp_loss: 2.110741 (2.117641)	kp_hm_hp_loss: 1.891366 (1.958389)	kp_hp_offset_loss: 0.256609 (0.249940)	kp_loss: 5.204399 (5.305164)	siammask_loss: 5.263098 (5.358073)	kp_avg_acc: 0.000000 (0.007079)
[2019-08-14 20:20:04,970-rk0-log_helper.py# 97] Progress: 40 / 573600 [0%], Speed: 0.695 s/iter, ETA 4:14:39 (D:H:M)

[2019-08-14 20:20:09,540-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][50/2868] lr: 0.001000	batch_time: 0.438447 (0.647250)	data_time: 0.016618 (0.161456)	rpn_cls_loss: 0.000382 (0.000483)	rpn_loc_loss: 0.047064 (0.043896)	kp_hp_loss: 1.992890 (2.096103)	kp_hm_hp_loss: 1.722911 (1.910415)	kp_hp_offset_loss: 0.235795 (0.249486)	kp_loss: 4.813052 (5.211211)	siammask_loss: 4.869911 (5.264370)	kp_avg_acc: 0.000000 (0.005831)
[2019-08-14 20:20:09,542-rk0-log_helper.py# 97] Progress: 50 / 573600 [0%], Speed: 0.647 s/iter, ETA 4:07:07 (D:H:M)

[2019-08-14 20:20:13,953-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][60/2868] lr: 0.001000	batch_time: 0.513277 (0.612695)	data_time: 0.103916 (0.137951)	rpn_cls_loss: 0.000244 (0.000519)	rpn_loc_loss: 0.050947 (0.044774)	kp_hp_loss: 1.431463 (2.055629)	kp_hm_hp_loss: 1.341571 (1.857066)	kp_hp_offset_loss: 0.254450 (0.250211)	kp_loss: 3.698269 (5.091439)	siammask_loss: 3.759649 (5.145687)	kp_avg_acc: 0.000000 (0.007819)
[2019-08-14 20:20:13,954-rk0-log_helper.py# 97] Progress: 60 / 573600 [0%], Speed: 0.613 s/iter, ETA 4:01:36 (D:H:M)

[2019-08-14 20:20:18,337-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][70/2868] lr: 0.001000	batch_time: 0.446246 (0.587615)	data_time: 0.025180 (0.121026)	rpn_cls_loss: 0.001151 (0.000589)	rpn_loc_loss: 0.042388 (0.046078)	kp_hp_loss: 2.329223 (2.057276)	kp_hm_hp_loss: 1.867229 (1.834363)	kp_hp_offset_loss: 0.250459 (0.250269)	kp_loss: 5.380526 (5.059090)	siammask_loss: 5.432543 (5.114973)	kp_avg_acc: 0.000000 (0.006702)
[2019-08-14 20:20:18,380-rk0-log_helper.py# 97] Progress: 70 / 573600 [0%], Speed: 0.588 s/iter, ETA 3:21:36 (D:H:M)

[2019-08-14 20:20:26,523-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][80/2868] lr: 0.001000	batch_time: 0.414125 (0.616324)	data_time: 0.009176 (0.156214)	rpn_cls_loss: 0.002411 (0.000606)	rpn_loc_loss: 0.051609 (0.047502)	kp_hp_loss: 1.858843 (2.038232)	kp_hm_hp_loss: 1.668416 (1.801926)	kp_hp_offset_loss: 0.248166 (0.250040)	kp_loss: 4.609634 (4.991161)	siammask_loss: 4.673975 (5.048771)	kp_avg_acc: 0.000000 (0.005864)
[2019-08-14 20:20:26,524-rk0-log_helper.py# 97] Progress: 80 / 573600 [0%], Speed: 0.616 s/iter, ETA 4:02:11 (D:H:M)

[2019-08-14 20:20:31,000-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][90/2868] lr: 0.001000	batch_time: 0.450382 (0.597424)	data_time: 0.022549 (0.141771)	rpn_cls_loss: 0.000637 (0.000587)	rpn_loc_loss: 0.042783 (0.047647)	kp_hp_loss: 1.909254 (2.017999)	kp_hm_hp_loss: 1.495844 (1.768353)	kp_hp_offset_loss: 0.246164 (0.249535)	kp_loss: 4.399183 (4.920064)	siammask_loss: 4.451160 (4.977828)	kp_avg_acc: 0.000000 (0.005213)
[2019-08-14 20:20:31,002-rk0-log_helper.py# 97] Progress: 90 / 573600 [0%], Speed: 0.597 s/iter, ETA 3:23:10 (D:H:M)

[2019-08-14 20:20:35,734-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][100/2868] lr: 0.001000	batch_time: 0.432269 (0.584868)	data_time: 0.011636 (0.128785)	rpn_cls_loss: 0.000273 (0.000573)	rpn_loc_loss: 0.058122 (0.047917)	kp_hp_loss: 2.205540 (2.012872)	kp_hm_hp_loss: 1.658902 (1.750015)	kp_hp_offset_loss: 0.246368 (0.250126)	kp_loss: 4.940261 (4.888020)	siammask_loss: 5.010281 (4.946094)	kp_avg_acc: 0.000000 (0.004691)
[2019-08-14 20:20:35,735-rk0-log_helper.py# 97] Progress: 100 / 573600 [0%], Speed: 0.585 s/iter, ETA 3:21:10 (D:H:M)

[2019-08-14 20:20:40,156-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][110/2868] lr: 0.001000	batch_time: 0.449037 (0.571745)	data_time: 0.022755 (0.118317)	rpn_cls_loss: 0.000189 (0.000625)	rpn_loc_loss: 0.052481 (0.048323)	kp_hp_loss: 1.865589 (2.010924)	kp_hm_hp_loss: 1.442170 (1.735627)	kp_hp_offset_loss: 0.236884 (0.250361)	kp_loss: 4.265728 (4.864725)	siammask_loss: 4.328894 (4.923338)	kp_avg_acc: 0.000000 (0.004265)
[2019-08-14 20:20:40,157-rk0-log_helper.py# 97] Progress: 110 / 573600 [0%], Speed: 0.572 s/iter, ETA 3:19:04 (D:H:M)

[2019-08-14 20:20:44,685-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][120/2868] lr: 0.001000	batch_time: 0.421982 (0.561722)	data_time: 0.012645 (0.109503)	rpn_cls_loss: 0.000291 (0.000619)	rpn_loc_loss: 0.042856 (0.048156)	kp_hp_loss: 1.863853 (2.004772)	kp_hm_hp_loss: 1.444411 (1.716889)	kp_hp_offset_loss: 0.239069 (0.250272)	kp_loss: 4.269538 (4.830377)	siammask_loss: 4.321257 (4.888783)	kp_avg_acc: 0.000000 (0.004036)
[2019-08-14 20:20:44,687-rk0-log_helper.py# 97] Progress: 120 / 573600 [0%], Speed: 0.562 s/iter, ETA 3:17:28 (D:H:M)

[2019-08-14 20:20:49,039-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][130/2868] lr: 0.001000	batch_time: 0.429019 (0.551890)	data_time: 0.010334 (0.102019)	rpn_cls_loss: 0.000293 (0.000603)	rpn_loc_loss: 0.072549 (0.048727)	kp_hp_loss: 2.096882 (2.003917)	kp_hm_hp_loss: 1.537398 (1.702728)	kp_hp_offset_loss: 0.258226 (0.250092)	kp_loss: 4.661204 (4.808099)	siammask_loss: 4.748556 (4.867175)	kp_avg_acc: 0.000000 (0.003726)
[2019-08-14 20:20:49,046-rk0-log_helper.py# 97] Progress: 130 / 573600 [0%], Speed: 0.552 s/iter, ETA 3:15:54 (D:H:M)

[2019-08-14 20:20:57,337-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][140/2868] lr: 0.001000	batch_time: 0.414632 (0.571642)	data_time: 0.011222 (0.123893)	rpn_cls_loss: 0.000287 (0.000581)	rpn_loc_loss: 0.037852 (0.048781)	kp_hp_loss: 2.314192 (2.005907)	kp_hm_hp_loss: 1.781126 (1.694170)	kp_hp_offset_loss: 0.249294 (0.249857)	kp_loss: 5.235174 (4.797019)	siammask_loss: 5.280884 (4.856137)	kp_avg_acc: 0.000000 (0.003459)
[2019-08-14 20:20:57,372-rk0-log_helper.py# 97] Progress: 140 / 573600 [0%], Speed: 0.572 s/iter, ETA 3:19:03 (D:H:M)

[2019-08-14 20:21:01,938-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][150/2868] lr: 0.001000	batch_time: 0.416189 (0.564119)	data_time: 0.013606 (0.116614)	rpn_cls_loss: 0.000245 (0.000566)	rpn_loc_loss: 0.036038 (0.048743)	kp_hp_loss: 1.996232 (2.002630)	kp_hm_hp_loss: 1.561236 (1.684356)	kp_hp_offset_loss: 0.250839 (0.250046)	kp_loss: 4.588925 (4.779209)	siammask_loss: 4.632415 (4.838267)	kp_avg_acc: 0.000000 (0.003229)
[2019-08-14 20:21:01,949-rk0-log_helper.py# 97] Progress: 150 / 573600 [0%], Speed: 0.564 s/iter, ETA 3:17:51 (D:H:M)

[2019-08-14 20:21:06,233-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][160/2868] lr: 0.001000	batch_time: 0.427589 (0.555621)	data_time: 0.012778 (0.110109)	rpn_cls_loss: 0.000587 (0.000552)	rpn_loc_loss: 0.052063 (0.048645)	kp_hp_loss: 2.095029 (1.999842)	kp_hm_hp_loss: 1.634532 (1.673795)	kp_hp_offset_loss: 0.251163 (0.249816)	kp_loss: 4.797991 (4.760349)	siammask_loss: 4.861054 (4.819276)	kp_avg_acc: 0.000000 (0.003027)
[2019-08-14 20:21:06,234-rk0-log_helper.py# 97] Progress: 160 / 573600 [0%], Speed: 0.556 s/iter, ETA 3:16:30 (D:H:M)

[2019-08-14 20:21:10,548-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][170/2868] lr: 0.001000	batch_time: 0.411481 (0.548239)	data_time: 0.012010 (0.104360)	rpn_cls_loss: 0.000555 (0.000544)	rpn_loc_loss: 0.054356 (0.048787)	kp_hp_loss: 1.988263 (1.999201)	kp_hm_hp_loss: 1.522641 (1.663842)	kp_hp_offset_loss: 0.237333 (0.249593)	kp_loss: 4.509556 (4.744556)	siammask_loss: 4.575339 (4.803644)	kp_avg_acc: 0.000000 (0.002849)
[2019-08-14 20:21:10,576-rk0-log_helper.py# 97] Progress: 170 / 573600 [0%], Speed: 0.548 s/iter, ETA 3:15:19 (D:H:M)

[2019-08-14 20:21:18,542-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][180/2868] lr: 0.001000	batch_time: 0.410781 (0.562118)	data_time: 0.009187 (0.119842)	rpn_cls_loss: 0.000352 (0.000530)	rpn_loc_loss: 0.052569 (0.048911)	kp_hp_loss: 2.119692 (2.002278)	kp_hm_hp_loss: 1.630013 (1.657603)	kp_hp_offset_loss: 0.264596 (0.249638)	kp_loss: 4.829308 (4.738320)	siammask_loss: 4.892742 (4.797544)	kp_avg_acc: 0.000000 (0.002691)
[2019-08-14 20:21:18,543-rk0-log_helper.py# 97] Progress: 180 / 573600 [0%], Speed: 0.562 s/iter, ETA 3:17:32 (D:H:M)

[2019-08-14 20:21:22,992-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][190/2868] lr: 0.001000	batch_time: 0.426389 (0.555887)	data_time: 0.015838 (0.114141)	rpn_cls_loss: 0.000308 (0.000525)	rpn_loc_loss: 0.044398 (0.048913)	kp_hp_loss: 1.814300 (2.003502)	kp_hm_hp_loss: 1.374441 (1.650318)	kp_hp_offset_loss: 0.257718 (0.249492)	kp_loss: 4.133679 (4.728471)	siammask_loss: 4.187264 (4.787693)	kp_avg_acc: 0.000000 (0.002549)
[2019-08-14 20:21:22,993-rk0-log_helper.py# 97] Progress: 190 / 573600 [0%], Speed: 0.556 s/iter, ETA 3:16:32 (D:H:M)

[2019-08-14 20:21:27,311-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][200/2868] lr: 0.001000	batch_time: 0.423123 (0.549622)	data_time: 0.009407 (0.108976)	rpn_cls_loss: 0.000485 (0.000519)	rpn_loc_loss: 0.056612 (0.049086)	kp_hp_loss: 2.377588 (2.004440)	kp_hm_hp_loss: 1.694930 (1.644442)	kp_hp_offset_loss: 0.246731 (0.249406)	kp_loss: 5.166714 (4.720510)	siammask_loss: 5.235133 (4.779932)	kp_avg_acc: 0.000000 (0.002422)
[2019-08-14 20:21:27,312-rk0-log_helper.py# 97] Progress: 200 / 573600 [0%], Speed: 0.550 s/iter, ETA 3:15:32 (D:H:M)

[2019-08-14 20:21:31,562-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][210/2868] lr: 0.001000	batch_time: 0.407026 (0.543634)	data_time: 0.007713 (0.104303)	rpn_cls_loss: 0.000265 (0.000514)	rpn_loc_loss: 0.043699 (0.049161)	kp_hp_loss: 2.668612 (2.010817)	kp_hm_hp_loss: 1.837702 (1.641371)	kp_hp_offset_loss: 0.253493 (0.249341)	kp_loss: 5.678658 (4.722214)	siammask_loss: 5.731362 (4.781722)	kp_avg_acc: 0.000000 (0.002306)
[2019-08-14 20:21:31,563-rk0-log_helper.py# 97] Progress: 210 / 573600 [0%], Speed: 0.544 s/iter, ETA 3:14:35 (D:H:M)

[2019-08-14 20:21:36,116-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][220/2868] lr: 0.001000	batch_time: 0.407143 (0.539573)	data_time: 0.008354 (0.099998)	rpn_cls_loss: 0.000225 (0.000525)	rpn_loc_loss: 0.040079 (0.049218)	kp_hp_loss: 1.775245 (2.005852)	kp_hm_hp_loss: 1.417201 (1.633610)	kp_hp_offset_loss: 0.243102 (0.249242)	kp_loss: 4.144149 (4.705508)	siammask_loss: 4.192469 (4.765095)	kp_avg_acc: 0.000000 (0.002201)
[2019-08-14 20:21:36,117-rk0-log_helper.py# 97] Progress: 220 / 573600 [0%], Speed: 0.540 s/iter, ETA 3:13:56 (D:H:M)

[2019-08-14 20:21:43,708-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][230/2868] lr: 0.001000	batch_time: 0.438467 (0.549072)	data_time: 0.011465 (0.110560)	rpn_cls_loss: 0.000287 (0.000522)	rpn_loc_loss: 0.053438 (0.049366)	kp_hp_loss: 2.316681 (2.003064)	kp_hm_hp_loss: 1.771614 (1.627822)	kp_hp_offset_loss: 0.250391 (0.249225)	kp_loss: 5.224494 (4.694022)	siammask_loss: 5.288907 (4.753784)	kp_avg_acc: 0.000000 (0.002106)
[2019-08-14 20:21:43,709-rk0-log_helper.py# 97] Progress: 230 / 573600 [0%], Speed: 0.549 s/iter, ETA 3:15:27 (D:H:M)

[2019-08-14 20:21:48,054-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][240/2868] lr: 0.001000	batch_time: 0.416492 (0.544252)	data_time: 0.003874 (0.106484)	rpn_cls_loss: 0.000476 (0.000526)	rpn_loc_loss: 0.044043 (0.049361)	kp_hp_loss: 2.084249 (2.003391)	kp_hm_hp_loss: 1.691719 (1.624305)	kp_hp_offset_loss: 0.242417 (0.249130)	kp_loss: 4.864245 (4.688977)	siammask_loss: 4.917573 (4.748737)	kp_avg_acc: 0.000000 (0.002018)
[2019-08-14 20:21:48,064-rk0-log_helper.py# 97] Progress: 240 / 573600 [0%], Speed: 0.544 s/iter, ETA 3:14:40 (D:H:M)

[2019-08-14 20:21:52,338-rk0-trainval_siamrcnn_corr.py#381] Epoch: [1][250/2868] lr: 0.001000	batch_time: 0.408209 (0.539567)	data_time: 0.003376 (0.102724)	rpn_cls_loss: 0.000472 (0.000518)	rpn_loc_loss: 0.049983 (0.049496)	kp_hp_loss: 1.524120 (2.000655)	kp_hm_hp_loss: 1.268182 (1.618753)	kp_hp_offset_loss: 0.253700 (0.249165)	kp_loss: 3.680092 (4.677949)	siammask_loss: 3.740542 (4.737861)	kp_avg_acc: 0.000000 (0.001937)
[2019-08-14 20:21:52,339-rk0-log_helper.py# 97] Progress: 250 / 573600 [0%], Speed: 0.540 s/iter, ETA 3:13:56 (D:H:M)

